/////////////////////////////////////////////////////////////
// Created by: Synopsys DC Expert(TM) in wire load mode
// Version   : K-2015.06
// Date      : Tue Sep 30 21:09:57 2025
/////////////////////////////////////////////////////////////


module mux2X1_1 ( IN_0, IN_1, SEL, OUT );
  input IN_0, IN_1, SEL;
  output OUT;
  wire   N0;
  assign N0 = SEL;

  MX2X6M U1 ( .A(IN_0), .B(IN_1), .S0(N0), .Y(OUT) );
endmodule


module mux2X1_4 ( IN_0, IN_1, SEL, OUT );
  input IN_0, IN_1, SEL;
  output OUT;
  wire   N0;
  assign N0 = SEL;

  MX2X2M U1 ( .A(IN_0), .B(IN_1), .S0(N0), .Y(OUT) );
endmodule


module mux2X1_3 ( IN_0, IN_1, SEL, OUT );
  input IN_0, IN_1, SEL;
  output OUT;
  wire   N0;
  assign N0 = SEL;

  MX2X2M U1 ( .A(IN_0), .B(IN_1), .S0(N0), .Y(OUT) );
endmodule


module mux2X1_2 ( IN_0, IN_1, SEL, OUT );
  input IN_0, IN_1, SEL;
  output OUT;
  wire   N0;
  assign N0 = SEL;

  MX2X2M U1 ( .A(IN_0), .B(IN_1), .S0(N0), .Y(OUT) );
endmodule


module mux2X1_0 ( IN_0, IN_1, SEL, OUT );
  input IN_0, IN_1, SEL;
  output OUT;
  wire   N0;
  assign N0 = SEL;

  MX2X2M U1 ( .A(IN_0), .B(IN_1), .S0(N0), .Y(OUT) );
endmodule


module mux2X1_6 ( IN_0, IN_1, SEL, OUT );
  input IN_0, IN_1, SEL;
  output OUT;
  wire   N0;
  assign N0 = SEL;

  MX2X2M U1 ( .A(IN_0), .B(IN_1), .S0(N0), .Y(OUT) );
endmodule


module mux2X1_5 ( IN_0, IN_1, SEL, OUT );
  input IN_0, IN_1, SEL;
  output OUT;
  wire   N0;
  assign N0 = SEL;

  MX2X2M U1 ( .A(IN_0), .B(IN_1), .S0(N0), .Y(OUT) );
endmodule


module RST_SYNC_NUM_STAGES2_test_1 ( CLK, RST, SYNC_RST, test_si, test_se );
  input CLK, RST, test_si, test_se;
  output SYNC_RST;
  wire   \sync_reg[0] ;

  SDFFRQX2M \sync_reg_reg[0]  ( .D(1'b1), .SI(test_si), .SE(test_se), .CK(CLK), 
        .RN(RST), .Q(\sync_reg[0] ) );
  SDFFRQX1M \sync_reg_reg[1]  ( .D(\sync_reg[0] ), .SI(\sync_reg[0] ), .SE(
        test_se), .CK(CLK), .RN(RST), .Q(SYNC_RST) );
endmodule


module RST_SYNC_NUM_STAGES2_test_0 ( CLK, RST, SYNC_RST, test_si, test_se );
  input CLK, RST, test_si, test_se;
  output SYNC_RST;
  wire   \sync_reg[0] ;

  SDFFRQX2M \sync_reg_reg[0]  ( .D(1'b1), .SI(test_si), .SE(test_se), .CK(CLK), 
        .RN(RST), .Q(\sync_reg[0] ) );
  SDFFRQX1M \sync_reg_reg[1]  ( .D(\sync_reg[0] ), .SI(\sync_reg[0] ), .SE(
        test_se), .CK(CLK), .RN(RST), .Q(SYNC_RST) );
endmodule


module DATA_SYNC_BUS_WIDTH8_NUM_STAGES2_test_1 ( CLK, RST, bus_enable, 
        unsyn_bus, sync_bus, enable_pulse, test_si, test_so, test_se );
  input [7:0] unsyn_bus;
  output [7:0] sync_bus;
  input CLK, RST, bus_enable, test_si, test_se;
  output enable_pulse, test_so;
  wire   enable_prev, n1, n4, n6, n8, n10, n12, n14, n16, n18, n22;
  wire   [1:0] sync_reg;
  assign test_so = sync_reg[1];

  SDFFRQX2M enable_prev_reg ( .D(sync_reg[1]), .SI(test_si), .SE(test_se), 
        .CK(CLK), .RN(RST), .Q(enable_prev) );
  SDFFRQX2M \sync_reg_reg[1]  ( .D(sync_reg[0]), .SI(sync_reg[0]), .SE(test_se), .CK(CLK), .RN(RST), .Q(sync_reg[1]) );
  SDFFRQX2M \sync_bus_reg[6]  ( .D(n16), .SI(sync_bus[5]), .SE(test_se), .CK(
        CLK), .RN(RST), .Q(sync_bus[6]) );
  SDFFRQX2M \sync_bus_reg[4]  ( .D(n12), .SI(sync_bus[3]), .SE(test_se), .CK(
        CLK), .RN(RST), .Q(sync_bus[4]) );
  SDFFRQX2M \sync_bus_reg[5]  ( .D(n14), .SI(sync_bus[4]), .SE(test_se), .CK(
        CLK), .RN(RST), .Q(sync_bus[5]) );
  SDFFRQX2M \sync_bus_reg[7]  ( .D(n18), .SI(sync_bus[6]), .SE(test_se), .CK(
        CLK), .RN(RST), .Q(sync_bus[7]) );
  SDFFRQX2M \sync_bus_reg[3]  ( .D(n10), .SI(sync_bus[2]), .SE(test_se), .CK(
        CLK), .RN(RST), .Q(sync_bus[3]) );
  SDFFRQX2M \sync_bus_reg[1]  ( .D(n6), .SI(sync_bus[0]), .SE(test_se), .CK(
        CLK), .RN(RST), .Q(sync_bus[1]) );
  SDFFRQX2M \sync_bus_reg[0]  ( .D(n4), .SI(enable_pulse), .SE(test_se), .CK(
        CLK), .RN(RST), .Q(sync_bus[0]) );
  SDFFRQX2M \sync_bus_reg[2]  ( .D(n8), .SI(sync_bus[1]), .SE(test_se), .CK(
        CLK), .RN(RST), .Q(sync_bus[2]) );
  SDFFRQX2M enable_pulse_reg ( .D(n22), .SI(enable_prev), .SE(test_se), .CK(
        CLK), .RN(RST), .Q(enable_pulse) );
  SDFFRQX2M \sync_reg_reg[0]  ( .D(bus_enable), .SI(sync_bus[7]), .SE(test_se), 
        .CK(CLK), .RN(RST), .Q(sync_reg[0]) );
  INVX2M U3 ( .A(n1), .Y(n22) );
  NAND2BX2M U4 ( .AN(enable_prev), .B(sync_reg[1]), .Y(n1) );
  AO22X1M U5 ( .A0(unsyn_bus[0]), .A1(n22), .B0(sync_bus[0]), .B1(n1), .Y(n4)
         );
  AO22X1M U6 ( .A0(unsyn_bus[1]), .A1(n22), .B0(sync_bus[1]), .B1(n1), .Y(n6)
         );
  AO22X1M U7 ( .A0(unsyn_bus[2]), .A1(n22), .B0(sync_bus[2]), .B1(n1), .Y(n8)
         );
  AO22X1M U8 ( .A0(unsyn_bus[3]), .A1(n22), .B0(sync_bus[3]), .B1(n1), .Y(n10)
         );
  AO22X1M U9 ( .A0(unsyn_bus[4]), .A1(n22), .B0(sync_bus[4]), .B1(n1), .Y(n12)
         );
  AO22X1M U10 ( .A0(unsyn_bus[5]), .A1(n22), .B0(sync_bus[5]), .B1(n1), .Y(n14) );
  AO22X1M U11 ( .A0(unsyn_bus[6]), .A1(n22), .B0(sync_bus[6]), .B1(n1), .Y(n16) );
  AO22X1M U12 ( .A0(unsyn_bus[7]), .A1(n22), .B0(sync_bus[7]), .B1(n1), .Y(n18) );
endmodule


module FIFO_MEM_DATA_WIDTH8_ADDR_WIDTH3_FIFO_DEPTH8_test_1 ( W_CLK, W_RST, 
        w_adder, r_adder, w_full, w_inc, WR_DATA, RD_DATA, test_si2, test_si1, 
        test_so2, test_so1, test_se );
  input [2:0] w_adder;
  input [2:0] r_adder;
  input [7:0] WR_DATA;
  output [7:0] RD_DATA;
  input W_CLK, W_RST, w_full, w_inc, test_si2, test_si1, test_se;
  output test_so2, test_so1;
  wire   N9, N10, N11, \mem[7][7] , \mem[7][6] , \mem[7][5] , \mem[7][4] ,
         \mem[7][3] , \mem[7][2] , \mem[7][1] , \mem[7][0] , \mem[6][7] ,
         \mem[6][6] , \mem[6][5] , \mem[6][4] , \mem[6][3] , \mem[6][2] ,
         \mem[6][1] , \mem[6][0] , \mem[5][7] , \mem[5][6] , \mem[5][5] ,
         \mem[5][4] , \mem[5][3] , \mem[5][2] , \mem[5][1] , \mem[5][0] ,
         \mem[4][7] , \mem[4][6] , \mem[4][5] , \mem[4][4] , \mem[4][3] ,
         \mem[4][2] , \mem[4][1] , \mem[4][0] , \mem[3][7] , \mem[3][6] ,
         \mem[3][5] , \mem[3][4] , \mem[3][3] , \mem[3][2] , \mem[3][1] ,
         \mem[3][0] , \mem[2][7] , \mem[2][6] , \mem[2][5] , \mem[2][4] ,
         \mem[2][3] , \mem[2][2] , \mem[2][1] , \mem[2][0] , \mem[1][7] ,
         \mem[1][6] , \mem[1][5] , \mem[1][4] , \mem[1][3] , \mem[1][2] ,
         \mem[1][1] , \mem[1][0] , \mem[0][7] , \mem[0][6] , \mem[0][5] ,
         \mem[0][4] , \mem[0][3] , \mem[0][2] , \mem[0][1] , \mem[0][0] , n75,
         n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86, n87, n88, n89,
         n90, n91, n92, n93, n94, n95, n96, n97, n98, n99, n100, n101, n102,
         n103, n104, n105, n106, n107, n108, n109, n110, n111, n112, n113,
         n114, n115, n116, n117, n118, n119, n120, n121, n122, n123, n124,
         n125, n126, n127, n128, n129, n130, n131, n132, n133, n134, n135,
         n136, n137, n138, n139, n140, n141, n142, n143, n144, n145, n146,
         n147, n148, n149, n65, n66, n67, n68, n69, n70, n71, n72, n73, n74,
         n150, n151, n152, n153, n154, n155, n156, n157, n158, n159, n160,
         n161, n162, n163, n164, n165, n166, n167, n168, n169, n170, n171,
         n172, n173, n174, n175, n176, n177, n178, n182, n183, n184, n185,
         n186;
  assign N9 = r_adder[0];
  assign N10 = r_adder[1];
  assign N11 = r_adder[2];
  assign test_so2 = \mem[7][7] ;
  assign test_so1 = \mem[6][0] ;

  SDFFRQX2M \mem_reg[5][7]  ( .D(n133), .SI(\mem[5][6] ), .SE(n186), .CK(W_CLK), .RN(n164), .Q(\mem[5][7] ) );
  SDFFRQX2M \mem_reg[5][6]  ( .D(n132), .SI(\mem[5][5] ), .SE(n185), .CK(W_CLK), .RN(n164), .Q(\mem[5][6] ) );
  SDFFRQX2M \mem_reg[5][5]  ( .D(n131), .SI(\mem[5][4] ), .SE(n184), .CK(W_CLK), .RN(n164), .Q(\mem[5][5] ) );
  SDFFRQX2M \mem_reg[5][4]  ( .D(n130), .SI(\mem[5][3] ), .SE(n183), .CK(W_CLK), .RN(n164), .Q(\mem[5][4] ) );
  SDFFRQX2M \mem_reg[5][3]  ( .D(n129), .SI(\mem[5][2] ), .SE(n186), .CK(W_CLK), .RN(n164), .Q(\mem[5][3] ) );
  SDFFRQX2M \mem_reg[5][2]  ( .D(n128), .SI(\mem[5][1] ), .SE(n185), .CK(W_CLK), .RN(n164), .Q(\mem[5][2] ) );
  SDFFRQX2M \mem_reg[5][1]  ( .D(n127), .SI(\mem[5][0] ), .SE(n184), .CK(W_CLK), .RN(n164), .Q(\mem[5][1] ) );
  SDFFRQX2M \mem_reg[5][0]  ( .D(n126), .SI(\mem[4][7] ), .SE(n183), .CK(W_CLK), .RN(n164), .Q(\mem[5][0] ) );
  SDFFRQX2M \mem_reg[1][7]  ( .D(n101), .SI(\mem[1][6] ), .SE(n186), .CK(W_CLK), .RN(n167), .Q(\mem[1][7] ) );
  SDFFRQX2M \mem_reg[1][6]  ( .D(n100), .SI(\mem[1][5] ), .SE(n185), .CK(W_CLK), .RN(n167), .Q(\mem[1][6] ) );
  SDFFRQX2M \mem_reg[1][5]  ( .D(n99), .SI(\mem[1][4] ), .SE(n184), .CK(W_CLK), 
        .RN(n167), .Q(\mem[1][5] ) );
  SDFFRQX2M \mem_reg[1][4]  ( .D(n98), .SI(\mem[1][3] ), .SE(n183), .CK(W_CLK), 
        .RN(n167), .Q(\mem[1][4] ) );
  SDFFRQX2M \mem_reg[1][3]  ( .D(n97), .SI(\mem[1][2] ), .SE(n186), .CK(W_CLK), 
        .RN(n167), .Q(\mem[1][3] ) );
  SDFFRQX2M \mem_reg[1][2]  ( .D(n96), .SI(\mem[1][1] ), .SE(n185), .CK(W_CLK), 
        .RN(n167), .Q(\mem[1][2] ) );
  SDFFRQX2M \mem_reg[1][1]  ( .D(n95), .SI(\mem[1][0] ), .SE(n184), .CK(W_CLK), 
        .RN(n167), .Q(\mem[1][1] ) );
  SDFFRQX2M \mem_reg[1][0]  ( .D(n94), .SI(\mem[0][7] ), .SE(n183), .CK(W_CLK), 
        .RN(n167), .Q(\mem[1][0] ) );
  SDFFRQX2M \mem_reg[7][7]  ( .D(n149), .SI(\mem[7][6] ), .SE(n186), .CK(W_CLK), .RN(n163), .Q(\mem[7][7] ) );
  SDFFRQX2M \mem_reg[7][6]  ( .D(n148), .SI(\mem[7][5] ), .SE(n185), .CK(W_CLK), .RN(n163), .Q(\mem[7][6] ) );
  SDFFRQX2M \mem_reg[7][5]  ( .D(n147), .SI(\mem[7][4] ), .SE(n184), .CK(W_CLK), .RN(n163), .Q(\mem[7][5] ) );
  SDFFRQX2M \mem_reg[7][4]  ( .D(n146), .SI(\mem[7][3] ), .SE(n183), .CK(W_CLK), .RN(n163), .Q(\mem[7][4] ) );
  SDFFRQX2M \mem_reg[7][3]  ( .D(n145), .SI(\mem[7][2] ), .SE(n186), .CK(W_CLK), .RN(n163), .Q(\mem[7][3] ) );
  SDFFRQX2M \mem_reg[7][2]  ( .D(n144), .SI(\mem[7][1] ), .SE(n185), .CK(W_CLK), .RN(n163), .Q(\mem[7][2] ) );
  SDFFRQX2M \mem_reg[7][1]  ( .D(n143), .SI(\mem[7][0] ), .SE(n184), .CK(W_CLK), .RN(n163), .Q(\mem[7][1] ) );
  SDFFRQX2M \mem_reg[7][0]  ( .D(n142), .SI(\mem[6][7] ), .SE(n183), .CK(W_CLK), .RN(n163), .Q(\mem[7][0] ) );
  SDFFRQX2M \mem_reg[3][7]  ( .D(n117), .SI(\mem[3][6] ), .SE(n186), .CK(W_CLK), .RN(n165), .Q(\mem[3][7] ) );
  SDFFRQX2M \mem_reg[3][6]  ( .D(n116), .SI(\mem[3][5] ), .SE(n185), .CK(W_CLK), .RN(n165), .Q(\mem[3][6] ) );
  SDFFRQX2M \mem_reg[3][5]  ( .D(n115), .SI(\mem[3][4] ), .SE(n184), .CK(W_CLK), .RN(n165), .Q(\mem[3][5] ) );
  SDFFRQX2M \mem_reg[3][4]  ( .D(n114), .SI(\mem[3][3] ), .SE(n183), .CK(W_CLK), .RN(n165), .Q(\mem[3][4] ) );
  SDFFRQX2M \mem_reg[3][3]  ( .D(n113), .SI(\mem[3][2] ), .SE(n186), .CK(W_CLK), .RN(n166), .Q(\mem[3][3] ) );
  SDFFRQX2M \mem_reg[3][2]  ( .D(n112), .SI(\mem[3][1] ), .SE(n185), .CK(W_CLK), .RN(n166), .Q(\mem[3][2] ) );
  SDFFRQX2M \mem_reg[3][1]  ( .D(n111), .SI(\mem[3][0] ), .SE(n184), .CK(W_CLK), .RN(n166), .Q(\mem[3][1] ) );
  SDFFRQX2M \mem_reg[3][0]  ( .D(n110), .SI(\mem[2][7] ), .SE(n183), .CK(W_CLK), .RN(n166), .Q(\mem[3][0] ) );
  SDFFRQX2M \mem_reg[6][7]  ( .D(n141), .SI(\mem[6][6] ), .SE(n186), .CK(W_CLK), .RN(n163), .Q(\mem[6][7] ) );
  SDFFRQX2M \mem_reg[6][6]  ( .D(n140), .SI(\mem[6][5] ), .SE(n185), .CK(W_CLK), .RN(n163), .Q(\mem[6][6] ) );
  SDFFRQX2M \mem_reg[6][5]  ( .D(n139), .SI(\mem[6][4] ), .SE(n184), .CK(W_CLK), .RN(n163), .Q(\mem[6][5] ) );
  SDFFRQX2M \mem_reg[6][4]  ( .D(n138), .SI(\mem[6][3] ), .SE(n183), .CK(W_CLK), .RN(n163), .Q(\mem[6][4] ) );
  SDFFRQX2M \mem_reg[6][3]  ( .D(n137), .SI(\mem[6][2] ), .SE(n186), .CK(W_CLK), .RN(n164), .Q(\mem[6][3] ) );
  SDFFRQX2M \mem_reg[6][2]  ( .D(n136), .SI(\mem[6][1] ), .SE(n185), .CK(W_CLK), .RN(n164), .Q(\mem[6][2] ) );
  SDFFRQX2M \mem_reg[6][1]  ( .D(n135), .SI(test_si2), .SE(n184), .CK(W_CLK), 
        .RN(n164), .Q(\mem[6][1] ) );
  SDFFRQX2M \mem_reg[6][0]  ( .D(n134), .SI(\mem[5][7] ), .SE(n183), .CK(W_CLK), .RN(n164), .Q(\mem[6][0] ) );
  SDFFRQX2M \mem_reg[2][7]  ( .D(n109), .SI(\mem[2][6] ), .SE(n186), .CK(W_CLK), .RN(n166), .Q(\mem[2][7] ) );
  SDFFRQX2M \mem_reg[2][6]  ( .D(n108), .SI(\mem[2][5] ), .SE(n185), .CK(W_CLK), .RN(n166), .Q(\mem[2][6] ) );
  SDFFRQX2M \mem_reg[2][5]  ( .D(n107), .SI(\mem[2][4] ), .SE(n184), .CK(W_CLK), .RN(n166), .Q(\mem[2][5] ) );
  SDFFRQX2M \mem_reg[2][4]  ( .D(n106), .SI(\mem[2][3] ), .SE(n183), .CK(W_CLK), .RN(n166), .Q(\mem[2][4] ) );
  SDFFRQX2M \mem_reg[2][3]  ( .D(n105), .SI(\mem[2][2] ), .SE(n186), .CK(W_CLK), .RN(n166), .Q(\mem[2][3] ) );
  SDFFRQX2M \mem_reg[2][2]  ( .D(n104), .SI(\mem[2][1] ), .SE(n185), .CK(W_CLK), .RN(n166), .Q(\mem[2][2] ) );
  SDFFRQX2M \mem_reg[2][1]  ( .D(n103), .SI(\mem[2][0] ), .SE(n184), .CK(W_CLK), .RN(n166), .Q(\mem[2][1] ) );
  SDFFRQX2M \mem_reg[2][0]  ( .D(n102), .SI(\mem[1][7] ), .SE(n183), .CK(W_CLK), .RN(n166), .Q(\mem[2][0] ) );
  SDFFRQX2M \mem_reg[4][7]  ( .D(n125), .SI(\mem[4][6] ), .SE(n186), .CK(W_CLK), .RN(n165), .Q(\mem[4][7] ) );
  SDFFRQX2M \mem_reg[4][6]  ( .D(n124), .SI(\mem[4][5] ), .SE(n185), .CK(W_CLK), .RN(n165), .Q(\mem[4][6] ) );
  SDFFRQX2M \mem_reg[4][5]  ( .D(n123), .SI(\mem[4][4] ), .SE(n184), .CK(W_CLK), .RN(n165), .Q(\mem[4][5] ) );
  SDFFRQX2M \mem_reg[4][4]  ( .D(n122), .SI(\mem[4][3] ), .SE(n183), .CK(W_CLK), .RN(n165), .Q(\mem[4][4] ) );
  SDFFRQX2M \mem_reg[4][3]  ( .D(n121), .SI(\mem[4][2] ), .SE(n186), .CK(W_CLK), .RN(n165), .Q(\mem[4][3] ) );
  SDFFRQX2M \mem_reg[4][2]  ( .D(n120), .SI(\mem[4][1] ), .SE(n185), .CK(W_CLK), .RN(n165), .Q(\mem[4][2] ) );
  SDFFRQX2M \mem_reg[4][1]  ( .D(n119), .SI(\mem[4][0] ), .SE(n184), .CK(W_CLK), .RN(n165), .Q(\mem[4][1] ) );
  SDFFRQX2M \mem_reg[4][0]  ( .D(n118), .SI(\mem[3][7] ), .SE(n183), .CK(W_CLK), .RN(n165), .Q(\mem[4][0] ) );
  SDFFRQX2M \mem_reg[0][7]  ( .D(n93), .SI(\mem[0][6] ), .SE(n186), .CK(W_CLK), 
        .RN(n167), .Q(\mem[0][7] ) );
  SDFFRQX2M \mem_reg[0][6]  ( .D(n92), .SI(\mem[0][5] ), .SE(n185), .CK(W_CLK), 
        .RN(n167), .Q(\mem[0][6] ) );
  SDFFRQX2M \mem_reg[0][5]  ( .D(n91), .SI(\mem[0][4] ), .SE(n184), .CK(W_CLK), 
        .RN(n167), .Q(\mem[0][5] ) );
  SDFFRQX2M \mem_reg[0][4]  ( .D(n90), .SI(\mem[0][3] ), .SE(n183), .CK(W_CLK), 
        .RN(n167), .Q(\mem[0][4] ) );
  SDFFRQX2M \mem_reg[0][3]  ( .D(n89), .SI(\mem[0][2] ), .SE(n186), .CK(W_CLK), 
        .RN(n168), .Q(\mem[0][3] ) );
  SDFFRQX2M \mem_reg[0][2]  ( .D(n88), .SI(\mem[0][1] ), .SE(n185), .CK(W_CLK), 
        .RN(n168), .Q(\mem[0][2] ) );
  SDFFRQX2M \mem_reg[0][1]  ( .D(n87), .SI(\mem[0][0] ), .SE(n184), .CK(W_CLK), 
        .RN(n168), .Q(\mem[0][1] ) );
  SDFFRQX2M \mem_reg[0][0]  ( .D(n86), .SI(test_si1), .SE(n183), .CK(W_CLK), 
        .RN(n168), .Q(\mem[0][0] ) );
  NOR2BX2M U66 ( .AN(n80), .B(w_adder[2]), .Y(n76) );
  BUFX2M U67 ( .A(n83), .Y(n160) );
  BUFX2M U68 ( .A(n84), .Y(n159) );
  BUFX2M U69 ( .A(n85), .Y(n158) );
  BUFX2M U70 ( .A(n162), .Y(n167) );
  BUFX2M U71 ( .A(n162), .Y(n166) );
  BUFX2M U72 ( .A(n161), .Y(n165) );
  BUFX2M U73 ( .A(n161), .Y(n164) );
  BUFX2M U74 ( .A(n161), .Y(n163) );
  BUFX2M U75 ( .A(n162), .Y(n168) );
  BUFX2M U76 ( .A(W_RST), .Y(n162) );
  BUFX2M U77 ( .A(W_RST), .Y(n161) );
  NAND3X2M U78 ( .A(n169), .B(n170), .C(n82), .Y(n81) );
  NAND3X2M U79 ( .A(n169), .B(n170), .C(n76), .Y(n75) );
  NAND3X2M U80 ( .A(n76), .B(n169), .C(w_adder[1]), .Y(n78) );
  NAND3X2M U81 ( .A(w_adder[0]), .B(n76), .C(w_adder[1]), .Y(n79) );
  NAND3X2M U82 ( .A(n76), .B(n170), .C(w_adder[0]), .Y(n77) );
  OAI2BB2X1M U83 ( .B0(n75), .B1(n171), .A0N(\mem[0][0] ), .A1N(n75), .Y(n86)
         );
  OAI2BB2X1M U84 ( .B0(n75), .B1(n172), .A0N(\mem[0][1] ), .A1N(n75), .Y(n87)
         );
  OAI2BB2X1M U85 ( .B0(n75), .B1(n173), .A0N(\mem[0][2] ), .A1N(n75), .Y(n88)
         );
  OAI2BB2X1M U86 ( .B0(n75), .B1(n174), .A0N(\mem[0][3] ), .A1N(n75), .Y(n89)
         );
  OAI2BB2X1M U87 ( .B0(n75), .B1(n175), .A0N(\mem[0][4] ), .A1N(n75), .Y(n90)
         );
  OAI2BB2X1M U88 ( .B0(n75), .B1(n176), .A0N(\mem[0][5] ), .A1N(n75), .Y(n91)
         );
  OAI2BB2X1M U89 ( .B0(n75), .B1(n177), .A0N(\mem[0][6] ), .A1N(n75), .Y(n92)
         );
  OAI2BB2X1M U90 ( .B0(n75), .B1(n178), .A0N(\mem[0][7] ), .A1N(n75), .Y(n93)
         );
  OAI2BB2X1M U91 ( .B0(n171), .B1(n78), .A0N(\mem[2][0] ), .A1N(n78), .Y(n102)
         );
  OAI2BB2X1M U92 ( .B0(n172), .B1(n78), .A0N(\mem[2][1] ), .A1N(n78), .Y(n103)
         );
  OAI2BB2X1M U93 ( .B0(n173), .B1(n78), .A0N(\mem[2][2] ), .A1N(n78), .Y(n104)
         );
  OAI2BB2X1M U94 ( .B0(n174), .B1(n78), .A0N(\mem[2][3] ), .A1N(n78), .Y(n105)
         );
  OAI2BB2X1M U95 ( .B0(n175), .B1(n78), .A0N(\mem[2][4] ), .A1N(n78), .Y(n106)
         );
  OAI2BB2X1M U96 ( .B0(n176), .B1(n78), .A0N(\mem[2][5] ), .A1N(n78), .Y(n107)
         );
  OAI2BB2X1M U97 ( .B0(n177), .B1(n78), .A0N(\mem[2][6] ), .A1N(n78), .Y(n108)
         );
  OAI2BB2X1M U98 ( .B0(n178), .B1(n78), .A0N(\mem[2][7] ), .A1N(n78), .Y(n109)
         );
  OAI2BB2X1M U99 ( .B0(n171), .B1(n79), .A0N(\mem[3][0] ), .A1N(n79), .Y(n110)
         );
  OAI2BB2X1M U100 ( .B0(n172), .B1(n79), .A0N(\mem[3][1] ), .A1N(n79), .Y(n111) );
  OAI2BB2X1M U101 ( .B0(n173), .B1(n79), .A0N(\mem[3][2] ), .A1N(n79), .Y(n112) );
  OAI2BB2X1M U102 ( .B0(n174), .B1(n79), .A0N(\mem[3][3] ), .A1N(n79), .Y(n113) );
  OAI2BB2X1M U103 ( .B0(n175), .B1(n79), .A0N(\mem[3][4] ), .A1N(n79), .Y(n114) );
  OAI2BB2X1M U104 ( .B0(n176), .B1(n79), .A0N(\mem[3][5] ), .A1N(n79), .Y(n115) );
  OAI2BB2X1M U105 ( .B0(n177), .B1(n79), .A0N(\mem[3][6] ), .A1N(n79), .Y(n116) );
  OAI2BB2X1M U106 ( .B0(n178), .B1(n79), .A0N(\mem[3][7] ), .A1N(n79), .Y(n117) );
  OAI2BB2X1M U107 ( .B0(n171), .B1(n77), .A0N(\mem[1][0] ), .A1N(n77), .Y(n94)
         );
  OAI2BB2X1M U108 ( .B0(n172), .B1(n77), .A0N(\mem[1][1] ), .A1N(n77), .Y(n95)
         );
  OAI2BB2X1M U109 ( .B0(n173), .B1(n77), .A0N(\mem[1][2] ), .A1N(n77), .Y(n96)
         );
  OAI2BB2X1M U110 ( .B0(n174), .B1(n77), .A0N(\mem[1][3] ), .A1N(n77), .Y(n97)
         );
  OAI2BB2X1M U111 ( .B0(n175), .B1(n77), .A0N(\mem[1][4] ), .A1N(n77), .Y(n98)
         );
  OAI2BB2X1M U112 ( .B0(n176), .B1(n77), .A0N(\mem[1][5] ), .A1N(n77), .Y(n99)
         );
  OAI2BB2X1M U113 ( .B0(n177), .B1(n77), .A0N(\mem[1][6] ), .A1N(n77), .Y(n100) );
  OAI2BB2X1M U114 ( .B0(n178), .B1(n77), .A0N(\mem[1][7] ), .A1N(n77), .Y(n101) );
  OAI2BB2X1M U115 ( .B0(n171), .B1(n81), .A0N(\mem[4][0] ), .A1N(n81), .Y(n118) );
  OAI2BB2X1M U116 ( .B0(n172), .B1(n81), .A0N(\mem[4][1] ), .A1N(n81), .Y(n119) );
  OAI2BB2X1M U117 ( .B0(n173), .B1(n81), .A0N(\mem[4][2] ), .A1N(n81), .Y(n120) );
  OAI2BB2X1M U118 ( .B0(n174), .B1(n81), .A0N(\mem[4][3] ), .A1N(n81), .Y(n121) );
  OAI2BB2X1M U119 ( .B0(n175), .B1(n81), .A0N(\mem[4][4] ), .A1N(n81), .Y(n122) );
  OAI2BB2X1M U120 ( .B0(n176), .B1(n81), .A0N(\mem[4][5] ), .A1N(n81), .Y(n123) );
  OAI2BB2X1M U121 ( .B0(n177), .B1(n81), .A0N(\mem[4][6] ), .A1N(n81), .Y(n124) );
  OAI2BB2X1M U122 ( .B0(n178), .B1(n81), .A0N(\mem[4][7] ), .A1N(n81), .Y(n125) );
  INVX2M U123 ( .A(WR_DATA[0]), .Y(n171) );
  INVX2M U124 ( .A(WR_DATA[1]), .Y(n172) );
  INVX2M U125 ( .A(WR_DATA[2]), .Y(n173) );
  INVX2M U126 ( .A(WR_DATA[3]), .Y(n174) );
  INVX2M U127 ( .A(WR_DATA[4]), .Y(n175) );
  INVX2M U128 ( .A(WR_DATA[5]), .Y(n176) );
  INVX2M U129 ( .A(WR_DATA[6]), .Y(n177) );
  INVX2M U130 ( .A(WR_DATA[7]), .Y(n178) );
  OAI2BB2X1M U131 ( .B0(n171), .B1(n160), .A0N(\mem[5][0] ), .A1N(n160), .Y(
        n126) );
  OAI2BB2X1M U132 ( .B0(n172), .B1(n160), .A0N(\mem[5][1] ), .A1N(n160), .Y(
        n127) );
  OAI2BB2X1M U133 ( .B0(n173), .B1(n160), .A0N(\mem[5][2] ), .A1N(n160), .Y(
        n128) );
  OAI2BB2X1M U134 ( .B0(n174), .B1(n160), .A0N(\mem[5][3] ), .A1N(n160), .Y(
        n129) );
  OAI2BB2X1M U135 ( .B0(n175), .B1(n160), .A0N(\mem[5][4] ), .A1N(n160), .Y(
        n130) );
  OAI2BB2X1M U136 ( .B0(n176), .B1(n160), .A0N(\mem[5][5] ), .A1N(n160), .Y(
        n131) );
  OAI2BB2X1M U137 ( .B0(n177), .B1(n160), .A0N(\mem[5][6] ), .A1N(n160), .Y(
        n132) );
  OAI2BB2X1M U138 ( .B0(n178), .B1(n160), .A0N(\mem[5][7] ), .A1N(n160), .Y(
        n133) );
  OAI2BB2X1M U139 ( .B0(n171), .B1(n159), .A0N(\mem[6][0] ), .A1N(n159), .Y(
        n134) );
  OAI2BB2X1M U140 ( .B0(n172), .B1(n159), .A0N(\mem[6][1] ), .A1N(n159), .Y(
        n135) );
  OAI2BB2X1M U141 ( .B0(n173), .B1(n159), .A0N(\mem[6][2] ), .A1N(n159), .Y(
        n136) );
  OAI2BB2X1M U142 ( .B0(n174), .B1(n159), .A0N(\mem[6][3] ), .A1N(n159), .Y(
        n137) );
  OAI2BB2X1M U143 ( .B0(n175), .B1(n159), .A0N(\mem[6][4] ), .A1N(n159), .Y(
        n138) );
  OAI2BB2X1M U144 ( .B0(n176), .B1(n159), .A0N(\mem[6][5] ), .A1N(n159), .Y(
        n139) );
  OAI2BB2X1M U145 ( .B0(n177), .B1(n159), .A0N(\mem[6][6] ), .A1N(n159), .Y(
        n140) );
  OAI2BB2X1M U146 ( .B0(n178), .B1(n159), .A0N(\mem[6][7] ), .A1N(n159), .Y(
        n141) );
  OAI2BB2X1M U147 ( .B0(n171), .B1(n158), .A0N(\mem[7][0] ), .A1N(n158), .Y(
        n142) );
  OAI2BB2X1M U148 ( .B0(n172), .B1(n158), .A0N(\mem[7][1] ), .A1N(n158), .Y(
        n143) );
  OAI2BB2X1M U149 ( .B0(n173), .B1(n158), .A0N(\mem[7][2] ), .A1N(n158), .Y(
        n144) );
  OAI2BB2X1M U150 ( .B0(n174), .B1(n158), .A0N(\mem[7][3] ), .A1N(n158), .Y(
        n145) );
  OAI2BB2X1M U151 ( .B0(n175), .B1(n158), .A0N(\mem[7][4] ), .A1N(n158), .Y(
        n146) );
  OAI2BB2X1M U152 ( .B0(n176), .B1(n158), .A0N(\mem[7][5] ), .A1N(n158), .Y(
        n147) );
  OAI2BB2X1M U153 ( .B0(n177), .B1(n158), .A0N(\mem[7][6] ), .A1N(n158), .Y(
        n148) );
  OAI2BB2X1M U154 ( .B0(n178), .B1(n158), .A0N(\mem[7][7] ), .A1N(n158), .Y(
        n149) );
  NOR2BX2M U155 ( .AN(w_inc), .B(w_full), .Y(n80) );
  AND2X2M U156 ( .A(w_adder[2]), .B(n80), .Y(n82) );
  NAND3X2M U157 ( .A(w_adder[0]), .B(n170), .C(n82), .Y(n83) );
  NAND3X2M U158 ( .A(w_adder[1]), .B(n169), .C(n82), .Y(n84) );
  NAND3X2M U159 ( .A(w_adder[1]), .B(w_adder[0]), .C(n82), .Y(n85) );
  INVX2M U160 ( .A(w_adder[1]), .Y(n170) );
  INVX2M U161 ( .A(w_adder[0]), .Y(n169) );
  MX2X2M U162 ( .A(n66), .B(n65), .S0(N11), .Y(RD_DATA[0]) );
  MX4X1M U163 ( .A(\mem[0][0] ), .B(\mem[1][0] ), .C(\mem[2][0] ), .D(
        \mem[3][0] ), .S0(n157), .S1(N10), .Y(n66) );
  MX4X1M U164 ( .A(\mem[4][0] ), .B(\mem[5][0] ), .C(\mem[6][0] ), .D(
        \mem[7][0] ), .S0(n156), .S1(N10), .Y(n65) );
  MX2X2M U165 ( .A(n68), .B(n67), .S0(N11), .Y(RD_DATA[1]) );
  MX4X1M U166 ( .A(\mem[0][1] ), .B(\mem[1][1] ), .C(\mem[2][1] ), .D(
        \mem[3][1] ), .S0(n157), .S1(N10), .Y(n68) );
  MX4X1M U167 ( .A(\mem[4][1] ), .B(\mem[5][1] ), .C(\mem[6][1] ), .D(
        \mem[7][1] ), .S0(n156), .S1(N10), .Y(n67) );
  MX2X2M U168 ( .A(n70), .B(n69), .S0(N11), .Y(RD_DATA[2]) );
  MX4X1M U169 ( .A(\mem[0][2] ), .B(\mem[1][2] ), .C(\mem[2][2] ), .D(
        \mem[3][2] ), .S0(n157), .S1(N10), .Y(n70) );
  MX4X1M U170 ( .A(\mem[4][2] ), .B(\mem[5][2] ), .C(\mem[6][2] ), .D(
        \mem[7][2] ), .S0(n156), .S1(N10), .Y(n69) );
  MX2X2M U171 ( .A(n72), .B(n71), .S0(N11), .Y(RD_DATA[3]) );
  MX4X1M U172 ( .A(\mem[0][3] ), .B(\mem[1][3] ), .C(\mem[2][3] ), .D(
        \mem[3][3] ), .S0(n157), .S1(N10), .Y(n72) );
  MX4X1M U173 ( .A(\mem[4][3] ), .B(\mem[5][3] ), .C(\mem[6][3] ), .D(
        \mem[7][3] ), .S0(n156), .S1(N10), .Y(n71) );
  MX2X2M U174 ( .A(n74), .B(n73), .S0(N11), .Y(RD_DATA[4]) );
  MX4X1M U175 ( .A(\mem[0][4] ), .B(\mem[1][4] ), .C(\mem[2][4] ), .D(
        \mem[3][4] ), .S0(n157), .S1(N10), .Y(n74) );
  MX4X1M U176 ( .A(\mem[4][4] ), .B(\mem[5][4] ), .C(\mem[6][4] ), .D(
        \mem[7][4] ), .S0(n156), .S1(N10), .Y(n73) );
  MX2X2M U177 ( .A(n151), .B(n150), .S0(N11), .Y(RD_DATA[5]) );
  MX4X1M U178 ( .A(\mem[0][5] ), .B(\mem[1][5] ), .C(\mem[2][5] ), .D(
        \mem[3][5] ), .S0(n157), .S1(N10), .Y(n151) );
  MX4X1M U179 ( .A(\mem[4][5] ), .B(\mem[5][5] ), .C(\mem[6][5] ), .D(
        \mem[7][5] ), .S0(n156), .S1(N10), .Y(n150) );
  MX2X2M U180 ( .A(n153), .B(n152), .S0(N11), .Y(RD_DATA[6]) );
  MX4X1M U181 ( .A(\mem[0][6] ), .B(\mem[1][6] ), .C(\mem[2][6] ), .D(
        \mem[3][6] ), .S0(n157), .S1(N10), .Y(n153) );
  MX4X1M U182 ( .A(\mem[4][6] ), .B(\mem[5][6] ), .C(\mem[6][6] ), .D(
        \mem[7][6] ), .S0(n156), .S1(N10), .Y(n152) );
  MX2X2M U183 ( .A(n155), .B(n154), .S0(N11), .Y(RD_DATA[7]) );
  MX4X1M U184 ( .A(\mem[0][7] ), .B(\mem[1][7] ), .C(\mem[2][7] ), .D(
        \mem[3][7] ), .S0(n157), .S1(N10), .Y(n155) );
  MX4X1M U185 ( .A(\mem[4][7] ), .B(\mem[5][7] ), .C(\mem[6][7] ), .D(
        \mem[7][7] ), .S0(n156), .S1(N10), .Y(n154) );
  BUFX2M U186 ( .A(N9), .Y(n156) );
  BUFX2M U187 ( .A(N9), .Y(n157) );
  INVXLM U188 ( .A(test_se), .Y(n182) );
  INVXLM U189 ( .A(n182), .Y(n183) );
  INVXLM U190 ( .A(n182), .Y(n184) );
  INVXLM U191 ( .A(n182), .Y(n185) );
  INVXLM U192 ( .A(n182), .Y(n186) );
endmodule


module FIFO_RD_ADDR_WIDTH3_test_1 ( R_CLK, R_RST, r_inc, rq2_wptr, r_empty, 
        r_adder, r_ptr, test_si, test_se );
  input [3:0] rq2_wptr;
  output [2:0] r_adder;
  output [3:0] r_ptr;
  input R_CLK, R_RST, r_inc, test_si, test_se;
  output r_empty;
  wire   \r_Binary[3] , empty, n10, n11, n12, n13, n14, n15, n16;
  wire   [3:0] r_Binary_Next;
  wire   [2:0] r_Gray_Next;

  SDFFSQX2M r_empty_reg ( .D(empty), .SI(\r_Binary[3] ), .SE(test_se), .CK(
        R_CLK), .SN(R_RST), .Q(r_empty) );
  SDFFRQX2M \r_Binary_reg[3]  ( .D(r_Binary_Next[3]), .SI(r_adder[2]), .SE(
        test_se), .CK(R_CLK), .RN(R_RST), .Q(\r_Binary[3] ) );
  SDFFRQX2M \r_ptr_reg[3]  ( .D(r_Binary_Next[3]), .SI(r_ptr[2]), .SE(test_se), 
        .CK(R_CLK), .RN(R_RST), .Q(r_ptr[3]) );
  SDFFRQX2M \r_ptr_reg[2]  ( .D(r_Gray_Next[2]), .SI(r_ptr[1]), .SE(test_se), 
        .CK(R_CLK), .RN(R_RST), .Q(r_ptr[2]) );
  SDFFRQX2M \r_ptr_reg[1]  ( .D(r_Gray_Next[1]), .SI(r_ptr[0]), .SE(test_se), 
        .CK(R_CLK), .RN(R_RST), .Q(r_ptr[1]) );
  SDFFRQX2M \r_ptr_reg[0]  ( .D(r_Gray_Next[0]), .SI(r_empty), .SE(test_se), 
        .CK(R_CLK), .RN(R_RST), .Q(r_ptr[0]) );
  SDFFRQX2M \r_Binary_reg[0]  ( .D(r_Binary_Next[0]), .SI(test_si), .SE(
        test_se), .CK(R_CLK), .RN(R_RST), .Q(r_adder[0]) );
  SDFFRQX2M \r_Binary_reg[2]  ( .D(r_Binary_Next[2]), .SI(r_adder[1]), .SE(
        test_se), .CK(R_CLK), .RN(R_RST), .Q(r_adder[2]) );
  SDFFRQX2M \r_Binary_reg[1]  ( .D(r_Binary_Next[1]), .SI(r_adder[0]), .SE(
        test_se), .CK(R_CLK), .RN(R_RST), .Q(r_adder[1]) );
  CLKXOR2X2M U12 ( .A(r_Binary_Next[1]), .B(r_Binary_Next[0]), .Y(
        r_Gray_Next[0]) );
  CLKXOR2X2M U13 ( .A(r_Binary_Next[3]), .B(r_Binary_Next[2]), .Y(
        r_Gray_Next[2]) );
  CLKXOR2X2M U14 ( .A(r_Binary_Next[2]), .B(r_Binary_Next[1]), .Y(
        r_Gray_Next[1]) );
  XNOR2X2M U15 ( .A(n12), .B(r_adder[1]), .Y(r_Binary_Next[1]) );
  NOR2BX2M U16 ( .AN(r_adder[1]), .B(n12), .Y(n11) );
  NOR4X1M U17 ( .A(n13), .B(n14), .C(n15), .D(n16), .Y(empty) );
  CLKXOR2X2M U18 ( .A(rq2_wptr[2]), .B(r_ptr[2]), .Y(n13) );
  CLKXOR2X2M U19 ( .A(rq2_wptr[3]), .B(r_ptr[3]), .Y(n14) );
  CLKXOR2X2M U20 ( .A(rq2_wptr[0]), .B(r_ptr[0]), .Y(n15) );
  NAND2X2M U21 ( .A(r_inc), .B(r_adder[0]), .Y(n12) );
  CLKXOR2X2M U22 ( .A(n11), .B(r_adder[2]), .Y(r_Binary_Next[2]) );
  CLKXOR2X2M U23 ( .A(rq2_wptr[1]), .B(r_ptr[1]), .Y(n16) );
  XNOR2X2M U24 ( .A(n10), .B(\r_Binary[3] ), .Y(r_Binary_Next[3]) );
  NAND2X2M U25 ( .A(n11), .B(r_adder[2]), .Y(n10) );
  CLKXOR2X2M U26 ( .A(r_adder[0]), .B(r_inc), .Y(r_Binary_Next[0]) );
endmodule


module FIFO_WR_ADDR_WIDTH3_test_1 ( W_CLK, W_RST, w_inc, wq2_rptr, w_full, 
        w_adder, w_ptr, test_si, test_se );
  input [3:0] wq2_rptr;
  output [2:0] w_adder;
  output [3:0] w_ptr;
  input W_CLK, W_RST, w_inc, test_si, test_se;
  output w_full;
  wire   \w_Binary[3] , full, n10, n11, n12, n13, n14, n15, n16, n17;
  wire   [3:0] w_Binary_Next;
  wire   [2:0] w_Gray_Next;

  SDFFRQX2M \w_Binary_reg[3]  ( .D(w_Binary_Next[3]), .SI(w_adder[2]), .SE(
        test_se), .CK(W_CLK), .RN(W_RST), .Q(\w_Binary[3] ) );
  SDFFRQX2M \w_Binary_reg[2]  ( .D(w_Binary_Next[2]), .SI(w_adder[1]), .SE(
        test_se), .CK(W_CLK), .RN(W_RST), .Q(w_adder[2]) );
  SDFFRQX2M w_full_reg ( .D(full), .SI(\w_Binary[3] ), .SE(test_se), .CK(W_CLK), .RN(W_RST), .Q(w_full) );
  SDFFRQX2M \w_Binary_reg[0]  ( .D(w_Binary_Next[0]), .SI(test_si), .SE(
        test_se), .CK(W_CLK), .RN(W_RST), .Q(w_adder[0]) );
  SDFFRQX2M \w_Binary_reg[1]  ( .D(w_Binary_Next[1]), .SI(w_adder[0]), .SE(
        test_se), .CK(W_CLK), .RN(W_RST), .Q(w_adder[1]) );
  SDFFRQX2M \w_ptr_reg[1]  ( .D(w_Gray_Next[1]), .SI(w_ptr[0]), .SE(test_se), 
        .CK(W_CLK), .RN(W_RST), .Q(w_ptr[1]) );
  SDFFRQX2M \w_ptr_reg[3]  ( .D(w_Binary_Next[3]), .SI(w_ptr[2]), .SE(test_se), 
        .CK(W_CLK), .RN(W_RST), .Q(w_ptr[3]) );
  SDFFRQX2M \w_ptr_reg[2]  ( .D(w_Gray_Next[2]), .SI(w_ptr[1]), .SE(test_se), 
        .CK(W_CLK), .RN(W_RST), .Q(w_ptr[2]) );
  SDFFRQX2M \w_ptr_reg[0]  ( .D(w_Gray_Next[0]), .SI(w_full), .SE(test_se), 
        .CK(W_CLK), .RN(W_RST), .Q(w_ptr[0]) );
  CLKXOR2X2M U12 ( .A(w_Binary_Next[1]), .B(w_Binary_Next[0]), .Y(
        w_Gray_Next[0]) );
  CLKXOR2X2M U13 ( .A(w_Binary_Next[2]), .B(w_Binary_Next[1]), .Y(
        w_Gray_Next[1]) );
  CLKXOR2X2M U14 ( .A(w_Binary_Next[3]), .B(w_Binary_Next[2]), .Y(
        w_Gray_Next[2]) );
  NOR4X1M U15 ( .A(n10), .B(n11), .C(n12), .D(n13), .Y(full) );
  XNOR2X2M U16 ( .A(w_Binary_Next[3]), .B(wq2_rptr[3]), .Y(n10) );
  XNOR2X2M U17 ( .A(w_Gray_Next[2]), .B(wq2_rptr[2]), .Y(n11) );
  CLKXOR2X2M U18 ( .A(wq2_rptr[0]), .B(w_Gray_Next[0]), .Y(n12) );
  NOR2BX2M U19 ( .AN(w_inc), .B(w_full), .Y(n14) );
  XNOR2X2M U20 ( .A(n17), .B(\w_Binary[3] ), .Y(w_Binary_Next[3]) );
  NAND3X2M U21 ( .A(w_adder[1]), .B(n15), .C(w_adder[2]), .Y(n17) );
  XNOR2X2M U22 ( .A(n16), .B(w_adder[2]), .Y(w_Binary_Next[2]) );
  NAND2X2M U23 ( .A(w_adder[1]), .B(n15), .Y(n16) );
  AND2X2M U24 ( .A(w_adder[0]), .B(n14), .Y(n15) );
  CLKXOR2X2M U25 ( .A(n15), .B(w_adder[1]), .Y(w_Binary_Next[1]) );
  CLKXOR2X2M U26 ( .A(wq2_rptr[1]), .B(w_Gray_Next[1]), .Y(n13) );
  CLKXOR2X2M U27 ( .A(n14), .B(w_adder[0]), .Y(w_Binary_Next[0]) );
endmodule


module DF_SYNC_ADDR_WIDTH3_test_1 ( W_CLK, W_RST, R_CLK, R_RST, w_ptr, r_ptr, 
        wq2_rptr, rq2_wptr, test_si, test_se );
  input [3:0] w_ptr;
  input [3:0] r_ptr;
  output [3:0] wq2_rptr;
  output [3:0] rq2_wptr;
  input W_CLK, W_RST, R_CLK, R_RST, test_si, test_se;
  wire   \wq_ptr[3][0] , \wq_ptr[2][0] , \wq_ptr[1][0] , \wq_ptr[0][0] ,
         \rq_ptr[3][0] , \rq_ptr[2][0] , \rq_ptr[1][0] , \rq_ptr[0][0] ;

  SDFFRQX2M \wq_ptr_reg[3][1]  ( .D(\wq_ptr[3][0] ), .SI(\wq_ptr[3][0] ), .SE(
        test_se), .CK(W_CLK), .RN(W_RST), .Q(wq2_rptr[3]) );
  SDFFRQX2M \wq_ptr_reg[2][1]  ( .D(\wq_ptr[2][0] ), .SI(\wq_ptr[2][0] ), .SE(
        test_se), .CK(W_CLK), .RN(W_RST), .Q(wq2_rptr[2]) );
  SDFFRQX2M \wq_ptr_reg[1][1]  ( .D(\wq_ptr[1][0] ), .SI(\wq_ptr[1][0] ), .SE(
        test_se), .CK(W_CLK), .RN(W_RST), .Q(wq2_rptr[1]) );
  SDFFRQX2M \wq_ptr_reg[0][1]  ( .D(\wq_ptr[0][0] ), .SI(\wq_ptr[0][0] ), .SE(
        test_se), .CK(W_CLK), .RN(W_RST), .Q(wq2_rptr[0]) );
  SDFFRQX2M \rq_ptr_reg[3][1]  ( .D(\rq_ptr[3][0] ), .SI(\rq_ptr[3][0] ), .SE(
        test_se), .CK(R_CLK), .RN(R_RST), .Q(rq2_wptr[3]) );
  SDFFRQX2M \rq_ptr_reg[2][1]  ( .D(\rq_ptr[2][0] ), .SI(\rq_ptr[2][0] ), .SE(
        test_se), .CK(R_CLK), .RN(R_RST), .Q(rq2_wptr[2]) );
  SDFFRQX2M \rq_ptr_reg[1][1]  ( .D(\rq_ptr[1][0] ), .SI(\rq_ptr[1][0] ), .SE(
        test_se), .CK(R_CLK), .RN(R_RST), .Q(rq2_wptr[1]) );
  SDFFRQX2M \rq_ptr_reg[0][1]  ( .D(\rq_ptr[0][0] ), .SI(\rq_ptr[0][0] ), .SE(
        test_se), .CK(R_CLK), .RN(R_RST), .Q(rq2_wptr[0]) );
  SDFFRQX2M \wq_ptr_reg[3][0]  ( .D(r_ptr[3]), .SI(wq2_rptr[2]), .SE(test_se), 
        .CK(W_CLK), .RN(W_RST), .Q(\wq_ptr[3][0] ) );
  SDFFRQX2M \wq_ptr_reg[2][0]  ( .D(r_ptr[2]), .SI(wq2_rptr[1]), .SE(test_se), 
        .CK(W_CLK), .RN(W_RST), .Q(\wq_ptr[2][0] ) );
  SDFFRQX2M \wq_ptr_reg[1][0]  ( .D(r_ptr[1]), .SI(wq2_rptr[0]), .SE(test_se), 
        .CK(W_CLK), .RN(W_RST), .Q(\wq_ptr[1][0] ) );
  SDFFRQX2M \wq_ptr_reg[0][0]  ( .D(r_ptr[0]), .SI(rq2_wptr[3]), .SE(test_se), 
        .CK(W_CLK), .RN(W_RST), .Q(\wq_ptr[0][0] ) );
  SDFFRQX2M \rq_ptr_reg[3][0]  ( .D(w_ptr[3]), .SI(rq2_wptr[2]), .SE(test_se), 
        .CK(R_CLK), .RN(R_RST), .Q(\rq_ptr[3][0] ) );
  SDFFRQX2M \rq_ptr_reg[2][0]  ( .D(w_ptr[2]), .SI(rq2_wptr[1]), .SE(test_se), 
        .CK(R_CLK), .RN(R_RST), .Q(\rq_ptr[2][0] ) );
  SDFFRQX2M \rq_ptr_reg[1][0]  ( .D(w_ptr[1]), .SI(rq2_wptr[0]), .SE(test_se), 
        .CK(R_CLK), .RN(R_RST), .Q(\rq_ptr[1][0] ) );
  SDFFRQX2M \rq_ptr_reg[0][0]  ( .D(w_ptr[0]), .SI(test_si), .SE(test_se), 
        .CK(R_CLK), .RN(R_RST), .Q(\rq_ptr[0][0] ) );
endmodule


module ASYNC_FIFO_DATA_WIDTH8_ADDR_WIDTH3_FIFO_DEPTH8_test_1 ( W_CLK, W_RST, 
        R_CLK, R_RST, w_inc, r_inc, WR_DATA, RD_DATA, w_full, r_empty, 
        test_si2, test_si1, test_so2, test_so1, test_se );
  input [7:0] WR_DATA;
  output [7:0] RD_DATA;
  input W_CLK, W_RST, R_CLK, R_RST, w_inc, r_inc, test_si2, test_si1, test_se;
  output w_full, r_empty, test_so2, test_so1;
  wire   n1, n2, n3, n4, n5;
  wire   [2:0] w_adder;
  wire   [2:0] r_adder;
  wire   [3:0] rq2_wptr;
  wire   [3:0] r_ptr;
  wire   [3:0] wq2_rptr;
  wire   [3:0] w_ptr;
  assign test_so2 = w_ptr[3];

  INVX2M U1 ( .A(n4), .Y(n3) );
  INVX2M U2 ( .A(W_RST), .Y(n4) );
  INVX2M U3 ( .A(n2), .Y(n1) );
  INVX2M U4 ( .A(R_RST), .Y(n2) );
  FIFO_MEM_DATA_WIDTH8_ADDR_WIDTH3_FIFO_DEPTH8_test_1 fifo_mem_inst ( .W_CLK(
        W_CLK), .W_RST(n3), .w_adder(w_adder), .r_adder(r_adder), .w_full(
        w_full), .w_inc(w_inc), .WR_DATA(WR_DATA), .RD_DATA(RD_DATA), 
        .test_si2(test_si2), .test_si1(wq2_rptr[3]), .test_so2(n5), .test_so1(
        test_so1), .test_se(test_se) );
  FIFO_RD_ADDR_WIDTH3_test_1 fifo_rd_inst ( .R_CLK(R_CLK), .R_RST(n1), .r_inc(
        r_inc), .rq2_wptr(rq2_wptr), .r_empty(r_empty), .r_adder(r_adder), 
        .r_ptr(r_ptr), .test_si(n5), .test_se(test_se) );
  FIFO_WR_ADDR_WIDTH3_test_1 fifo_wr_inst ( .W_CLK(W_CLK), .W_RST(n3), .w_inc(
        w_inc), .wq2_rptr(wq2_rptr), .w_full(w_full), .w_adder(w_adder), 
        .w_ptr(w_ptr), .test_si(r_ptr[3]), .test_se(test_se) );
  DF_SYNC_ADDR_WIDTH3_test_1 df_sync_inst ( .W_CLK(W_CLK), .W_RST(n3), .R_CLK(
        R_CLK), .R_RST(n1), .w_ptr(w_ptr), .r_ptr(r_ptr), .wq2_rptr(wq2_rptr), 
        .rq2_wptr(rq2_wptr), .test_si(test_si1), .test_se(test_se) );
endmodule


module PULSE_GEN_test_1 ( clk, rst_n, ASYNC, pulse_sig, test_si, test_so, 
        test_se );
  input clk, rst_n, ASYNC, test_si, test_se;
  output pulse_sig, test_so;
  wire   pls_flop, rcv_flop;
  assign test_so = rcv_flop;

  SDFFRQX2M rcv_flop_reg ( .D(ASYNC), .SI(pls_flop), .SE(test_se), .CK(clk), 
        .RN(rst_n), .Q(rcv_flop) );
  SDFFRQX2M pls_flop_reg ( .D(rcv_flop), .SI(test_si), .SE(test_se), .CK(clk), 
        .RN(rst_n), .Q(pls_flop) );
  NOR2BX2M U5 ( .AN(rcv_flop), .B(pls_flop), .Y(pulse_sig) );
endmodule


module CLK_divider_0_DW01_inc_0 ( A, SUM );
  input [7:0] A;
  output [7:0] SUM;

  wire   [7:2] carry;

  ADDHX1M U1_1_6 ( .A(A[6]), .B(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  ADDHX1M U1_1_5 ( .A(A[5]), .B(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  ADDHX1M U1_1_4 ( .A(A[4]), .B(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  ADDHX1M U1_1_3 ( .A(A[3]), .B(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  ADDHX1M U1_1_2 ( .A(A[2]), .B(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  ADDHX1M U1_1_1 ( .A(A[1]), .B(A[0]), .CO(carry[2]), .S(SUM[1]) );
  CLKXOR2X2M U1 ( .A(carry[7]), .B(A[7]), .Y(SUM[7]) );
  CLKINVX1M U2 ( .A(A[0]), .Y(SUM[0]) );
endmodule


module CLK_divider_test_1 ( ref_clk, clk_en, rst, div_ratio, div_clk, test_si, 
        test_so, test_se );
  input [7:0] div_ratio;
  input ref_clk, clk_en, rst, test_si, test_se;
  output div_clk, test_so;
  wire   N3, div_clk_internal, flag, N17, N18, N19, N20, N21, N22, N23, N24,
         N38, N39, N40, N41, N42, N43, N44, N45, n33, n34, \add_24/carry[7] ,
         \add_24/carry[6] , \add_24/carry[5] , \add_24/carry[4] ,
         \add_24/carry[3] , \add_24/carry[2] , \add_24/carry[1] , n1, n2, n3,
         n4, n5, n6, n7, n8, n9, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48;
  wire   [7:0] half_period_1;
  wire   [7:0] half_period_2;
  wire   [7:0] counter;
  assign test_so = flag;

  SDFFSQX2M div_clk_internal_reg ( .D(n34), .SI(counter[7]), .SE(test_se), 
        .CK(ref_clk), .SN(rst), .Q(div_clk_internal) );
  SDFFRQX2M flag_reg ( .D(n33), .SI(div_clk_internal), .SE(test_se), .CK(
        ref_clk), .RN(rst), .Q(flag) );
  SDFFRQX2M \counter_reg[7]  ( .D(N45), .SI(counter[6]), .SE(test_se), .CK(
        ref_clk), .RN(rst), .Q(counter[7]) );
  SDFFRQX2M \counter_reg[0]  ( .D(N38), .SI(test_si), .SE(test_se), .CK(
        ref_clk), .RN(rst), .Q(counter[0]) );
  SDFFRQX2M \counter_reg[6]  ( .D(N44), .SI(counter[5]), .SE(test_se), .CK(
        ref_clk), .RN(rst), .Q(counter[6]) );
  SDFFRQX2M \counter_reg[5]  ( .D(N43), .SI(counter[4]), .SE(test_se), .CK(
        ref_clk), .RN(rst), .Q(counter[5]) );
  SDFFRQX2M \counter_reg[4]  ( .D(N42), .SI(counter[3]), .SE(test_se), .CK(
        ref_clk), .RN(rst), .Q(counter[4]) );
  SDFFRQX2M \counter_reg[3]  ( .D(N41), .SI(counter[2]), .SE(test_se), .CK(
        ref_clk), .RN(rst), .Q(counter[3]) );
  SDFFRQX2M \counter_reg[2]  ( .D(N40), .SI(counter[1]), .SE(test_se), .CK(
        ref_clk), .RN(rst), .Q(counter[2]) );
  SDFFRQX2M \counter_reg[1]  ( .D(N39), .SI(counter[0]), .SE(test_se), .CK(
        ref_clk), .RN(rst), .Q(counter[1]) );
  OR2X2M U5 ( .A(div_ratio[2]), .B(div_ratio[1]), .Y(n1) );
  MX2X2M U6 ( .A(ref_clk), .B(div_clk_internal), .S0(N3), .Y(div_clk) );
  CLKXOR2X2M U7 ( .A(half_period_1[7]), .B(\add_24/carry[7] ), .Y(
        half_period_2[7]) );
  AND2X1M U8 ( .A(half_period_1[6]), .B(\add_24/carry[6] ), .Y(
        \add_24/carry[7] ) );
  CLKXOR2X2M U15 ( .A(half_period_1[6]), .B(\add_24/carry[6] ), .Y(
        half_period_2[6]) );
  AND2X1M U18 ( .A(half_period_1[5]), .B(\add_24/carry[5] ), .Y(
        \add_24/carry[6] ) );
  CLKXOR2X2M U19 ( .A(half_period_1[5]), .B(\add_24/carry[5] ), .Y(
        half_period_2[5]) );
  AND2X1M U20 ( .A(half_period_1[4]), .B(\add_24/carry[4] ), .Y(
        \add_24/carry[5] ) );
  CLKXOR2X2M U21 ( .A(half_period_1[4]), .B(\add_24/carry[4] ), .Y(
        half_period_2[4]) );
  AND2X1M U22 ( .A(half_period_1[3]), .B(\add_24/carry[3] ), .Y(
        \add_24/carry[4] ) );
  CLKXOR2X2M U23 ( .A(half_period_1[3]), .B(\add_24/carry[3] ), .Y(
        half_period_2[3]) );
  AND2X1M U24 ( .A(half_period_1[2]), .B(\add_24/carry[2] ), .Y(
        \add_24/carry[3] ) );
  CLKXOR2X2M U25 ( .A(half_period_1[2]), .B(\add_24/carry[2] ), .Y(
        half_period_2[2]) );
  AND2X1M U26 ( .A(half_period_1[1]), .B(\add_24/carry[1] ), .Y(
        \add_24/carry[2] ) );
  CLKXOR2X2M U27 ( .A(half_period_1[1]), .B(\add_24/carry[1] ), .Y(
        half_period_2[1]) );
  AND2X1M U28 ( .A(div_ratio[0]), .B(half_period_1[0]), .Y(\add_24/carry[1] )
         );
  CLKXOR2X2M U29 ( .A(div_ratio[0]), .B(half_period_1[0]), .Y(half_period_2[0]) );
  CLKINVX1M U30 ( .A(div_ratio[1]), .Y(half_period_1[0]) );
  OAI2BB1X1M U31 ( .A0N(div_ratio[1]), .A1N(div_ratio[2]), .B0(n1), .Y(
        half_period_1[1]) );
  OR2X1M U32 ( .A(n1), .B(div_ratio[3]), .Y(n2) );
  OAI2BB1X1M U33 ( .A0N(n1), .A1N(div_ratio[3]), .B0(n2), .Y(half_period_1[2])
         );
  OR2X1M U34 ( .A(n2), .B(div_ratio[4]), .Y(n3) );
  OAI2BB1X1M U35 ( .A0N(n2), .A1N(div_ratio[4]), .B0(n3), .Y(half_period_1[3])
         );
  OR2X1M U36 ( .A(n3), .B(div_ratio[5]), .Y(n4) );
  OAI2BB1X1M U37 ( .A0N(n3), .A1N(div_ratio[5]), .B0(n4), .Y(half_period_1[4])
         );
  XNOR2X1M U38 ( .A(div_ratio[6]), .B(n4), .Y(half_period_1[5]) );
  NOR3X1M U39 ( .A(div_ratio[6]), .B(div_ratio[7]), .C(n4), .Y(
        half_period_1[7]) );
  OAI21X1M U40 ( .A0(div_ratio[6]), .A1(n4), .B0(div_ratio[7]), .Y(n5) );
  NAND2BX1M U41 ( .AN(half_period_1[7]), .B(n5), .Y(half_period_1[6]) );
  CLKXOR2X2M U42 ( .A(div_clk_internal), .B(n6), .Y(n34) );
  AOI21X1M U43 ( .A0(n7), .A1(n8), .B0(n9), .Y(n6) );
  NOR2X1M U44 ( .A(n20), .B(n9), .Y(n33) );
  CLKXOR2X2M U45 ( .A(n7), .B(flag), .Y(n20) );
  NOR2BX1M U46 ( .AN(N24), .B(n21), .Y(N45) );
  NOR2BX1M U47 ( .AN(N23), .B(n21), .Y(N44) );
  NOR2BX1M U48 ( .AN(N22), .B(n21), .Y(N43) );
  NOR2BX1M U49 ( .AN(N21), .B(n21), .Y(N42) );
  NOR2BX1M U50 ( .AN(N20), .B(n21), .Y(N41) );
  NOR2BX1M U51 ( .AN(N19), .B(n21), .Y(N40) );
  NOR2BX1M U52 ( .AN(N18), .B(n21), .Y(N39) );
  NOR2BX1M U53 ( .AN(N17), .B(n21), .Y(N38) );
  NAND3BX1M U54 ( .AN(n9), .B(n8), .C(n7), .Y(n21) );
  CLKNAND2X2M U55 ( .A(n22), .B(div_ratio[0]), .Y(n7) );
  MXI2X1M U56 ( .A(n23), .B(n24), .S0(flag), .Y(n22) );
  CLKNAND2X2M U57 ( .A(n25), .B(n26), .Y(n24) );
  NOR4X1M U58 ( .A(n27), .B(n28), .C(n29), .D(n30), .Y(n26) );
  CLKXOR2X2M U59 ( .A(half_period_2[3]), .B(counter[3]), .Y(n30) );
  CLKXOR2X2M U60 ( .A(half_period_2[2]), .B(counter[2]), .Y(n29) );
  CLKXOR2X2M U61 ( .A(half_period_2[1]), .B(counter[1]), .Y(n28) );
  CLKXOR2X2M U62 ( .A(half_period_2[0]), .B(counter[0]), .Y(n27) );
  NOR4X1M U63 ( .A(n31), .B(n32), .C(n35), .D(n36), .Y(n25) );
  CLKXOR2X2M U64 ( .A(half_period_2[7]), .B(counter[7]), .Y(n36) );
  CLKXOR2X2M U65 ( .A(half_period_2[6]), .B(counter[6]), .Y(n35) );
  CLKXOR2X2M U66 ( .A(half_period_2[5]), .B(counter[5]), .Y(n32) );
  CLKXOR2X2M U67 ( .A(half_period_2[4]), .B(counter[4]), .Y(n31) );
  OR2X1M U68 ( .A(n23), .B(div_ratio[0]), .Y(n8) );
  CLKNAND2X2M U69 ( .A(n37), .B(n38), .Y(n23) );
  NOR4X1M U70 ( .A(n39), .B(n40), .C(n41), .D(n42), .Y(n38) );
  CLKXOR2X2M U71 ( .A(half_period_1[3]), .B(counter[3]), .Y(n42) );
  CLKXOR2X2M U72 ( .A(half_period_1[2]), .B(counter[2]), .Y(n41) );
  CLKXOR2X2M U73 ( .A(half_period_1[1]), .B(counter[1]), .Y(n40) );
  CLKXOR2X2M U74 ( .A(half_period_1[0]), .B(counter[0]), .Y(n39) );
  NOR4X1M U75 ( .A(n43), .B(n44), .C(n45), .D(n46), .Y(n37) );
  CLKXOR2X2M U76 ( .A(half_period_1[7]), .B(counter[7]), .Y(n46) );
  CLKXOR2X2M U77 ( .A(half_period_1[6]), .B(counter[6]), .Y(n45) );
  CLKXOR2X2M U78 ( .A(half_period_1[5]), .B(counter[5]), .Y(n44) );
  CLKXOR2X2M U79 ( .A(half_period_1[4]), .B(counter[4]), .Y(n43) );
  NOR2BX1M U80 ( .AN(rst), .B(n9), .Y(N3) );
  OAI2BB1X1M U81 ( .A0N(n47), .A1N(n48), .B0(clk_en), .Y(n9) );
  NOR4X1M U82 ( .A(div_ratio[7]), .B(div_ratio[6]), .C(div_ratio[5]), .D(
        div_ratio[4]), .Y(n48) );
  NOR3X1M U83 ( .A(div_ratio[1]), .B(div_ratio[3]), .C(div_ratio[2]), .Y(n47)
         );
  CLK_divider_0_DW01_inc_0 add_47 ( .A(counter), .SUM({N24, N23, N22, N21, N20, 
        N19, N18, N17}) );
endmodule


module CLKDIV_MUX ( IN, OUT );
  input [5:0] IN;
  output [7:0] OUT;
  wire   n5, n6, n7, n8, n9, n14, n15, n16, n17;

  NAND4BX1M U11 ( .AN(IN[4]), .B(IN[3]), .C(n15), .D(n14), .Y(n6) );
  NAND4BX1M U12 ( .AN(IN[3]), .B(IN[4]), .C(n15), .D(n14), .Y(n7) );
  NOR3X2M U13 ( .A(n7), .B(IN[1]), .C(IN[0]), .Y(OUT[1]) );
  OAI211X2M U14 ( .A0(n8), .A1(n9), .B0(n17), .C0(n16), .Y(OUT[0]) );
  NOR4X1M U15 ( .A(IN[5]), .B(IN[4]), .C(IN[3]), .D(n15), .Y(n8) );
  NAND2X2M U16 ( .A(n7), .B(n6), .Y(n9) );
  NOR4X1M U17 ( .A(n5), .B(IN[3]), .C(IN[5]), .D(IN[4]), .Y(OUT[3]) );
  NAND3X2M U18 ( .A(n17), .B(n16), .C(IN[2]), .Y(n5) );
  NOR3X2M U19 ( .A(n6), .B(IN[1]), .C(IN[0]), .Y(OUT[2]) );
  INVX2M U20 ( .A(IN[2]), .Y(n15) );
  INVX2M U21 ( .A(IN[1]), .Y(n16) );
  INVX2M U22 ( .A(IN[0]), .Y(n17) );
  INVX2M U23 ( .A(IN[5]), .Y(n14) );
  INVX2M U3 ( .A(1'b1), .Y(OUT[4]) );
  INVX2M U5 ( .A(1'b1), .Y(OUT[5]) );
  INVX2M U7 ( .A(1'b1), .Y(OUT[6]) );
  INVX2M U9 ( .A(1'b1), .Y(OUT[7]) );
endmodule


module CLK_divider_1_DW01_inc_0 ( A, SUM );
  input [7:0] A;
  output [7:0] SUM;

  wire   [7:2] carry;

  ADDHX1M U1_1_6 ( .A(A[6]), .B(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  ADDHX1M U1_1_5 ( .A(A[5]), .B(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  ADDHX1M U1_1_4 ( .A(A[4]), .B(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  ADDHX1M U1_1_3 ( .A(A[3]), .B(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  ADDHX1M U1_1_2 ( .A(A[2]), .B(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  ADDHX1M U1_1_1 ( .A(A[1]), .B(A[0]), .CO(carry[2]), .S(SUM[1]) );
  CLKXOR2X2M U1 ( .A(carry[7]), .B(A[7]), .Y(SUM[7]) );
  CLKINVX1M U2 ( .A(A[0]), .Y(SUM[0]) );
endmodule


module CLK_divider_test_0 ( ref_clk, clk_en, rst, div_ratio, div_clk, test_si, 
        test_so, test_se );
  input [7:0] div_ratio;
  input ref_clk, clk_en, rst, test_si, test_se;
  output div_clk, test_so;
  wire   N3, div_clk_internal, flag, N17, N18, N19, N20, N21, N22, N23, N24,
         N38, N39, N40, N41, N42, N43, N44, N45, \add_24/carry[7] ,
         \add_24/carry[6] , \add_24/carry[5] , \add_24/carry[4] ,
         \add_24/carry[3] , \add_24/carry[2] , \add_24/carry[1] , n2, n3, n4,
         n5, n6, n7, n8, n9, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29,
         n30, n31, n32, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45,
         n46, n47, n48, n49, n50, n51;
  wire   [7:0] half_period_1;
  wire   [7:0] half_period_2;
  wire   [7:0] counter;
  assign test_so = flag;

  SDFFRQX2M flag_reg ( .D(n51), .SI(div_clk_internal), .SE(test_se), .CK(
        ref_clk), .RN(rst), .Q(flag) );
  SDFFRQX2M \counter_reg[7]  ( .D(N45), .SI(counter[6]), .SE(test_se), .CK(
        ref_clk), .RN(rst), .Q(counter[7]) );
  SDFFRQX2M \counter_reg[0]  ( .D(N38), .SI(test_si), .SE(test_se), .CK(
        ref_clk), .RN(rst), .Q(counter[0]) );
  SDFFRQX2M \counter_reg[6]  ( .D(N44), .SI(counter[5]), .SE(test_se), .CK(
        ref_clk), .RN(rst), .Q(counter[6]) );
  SDFFRQX2M \counter_reg[5]  ( .D(N43), .SI(counter[4]), .SE(test_se), .CK(
        ref_clk), .RN(rst), .Q(counter[5]) );
  SDFFRQX2M \counter_reg[4]  ( .D(N42), .SI(counter[3]), .SE(test_se), .CK(
        ref_clk), .RN(rst), .Q(counter[4]) );
  SDFFRQX2M \counter_reg[3]  ( .D(N41), .SI(counter[2]), .SE(test_se), .CK(
        ref_clk), .RN(rst), .Q(counter[3]) );
  SDFFRQX2M \counter_reg[2]  ( .D(N40), .SI(counter[1]), .SE(test_se), .CK(
        ref_clk), .RN(rst), .Q(counter[2]) );
  SDFFRQX2M \counter_reg[1]  ( .D(N39), .SI(counter[0]), .SE(test_se), .CK(
        ref_clk), .RN(rst), .Q(counter[1]) );
  SDFFSQX1M div_clk_internal_reg ( .D(n50), .SI(counter[7]), .SE(test_se), 
        .CK(ref_clk), .SN(rst), .Q(div_clk_internal) );
  OR2X2M U6 ( .A(div_ratio[2]), .B(div_ratio[1]), .Y(n2) );
  MX2X2M U7 ( .A(ref_clk), .B(div_clk_internal), .S0(N3), .Y(div_clk) );
  CLKXOR2X2M U8 ( .A(half_period_1[7]), .B(\add_24/carry[7] ), .Y(
        half_period_2[7]) );
  AND2X1M U15 ( .A(half_period_1[6]), .B(\add_24/carry[6] ), .Y(
        \add_24/carry[7] ) );
  CLKXOR2X2M U18 ( .A(half_period_1[6]), .B(\add_24/carry[6] ), .Y(
        half_period_2[6]) );
  AND2X1M U19 ( .A(half_period_1[5]), .B(\add_24/carry[5] ), .Y(
        \add_24/carry[6] ) );
  CLKXOR2X2M U20 ( .A(half_period_1[5]), .B(\add_24/carry[5] ), .Y(
        half_period_2[5]) );
  AND2X1M U21 ( .A(half_period_1[4]), .B(\add_24/carry[4] ), .Y(
        \add_24/carry[5] ) );
  CLKXOR2X2M U22 ( .A(half_period_1[4]), .B(\add_24/carry[4] ), .Y(
        half_period_2[4]) );
  AND2X1M U23 ( .A(half_period_1[3]), .B(\add_24/carry[3] ), .Y(
        \add_24/carry[4] ) );
  CLKXOR2X2M U24 ( .A(half_period_1[3]), .B(\add_24/carry[3] ), .Y(
        half_period_2[3]) );
  AND2X1M U25 ( .A(half_period_1[2]), .B(\add_24/carry[2] ), .Y(
        \add_24/carry[3] ) );
  CLKXOR2X2M U26 ( .A(half_period_1[2]), .B(\add_24/carry[2] ), .Y(
        half_period_2[2]) );
  AND2X1M U27 ( .A(half_period_1[1]), .B(\add_24/carry[1] ), .Y(
        \add_24/carry[2] ) );
  CLKXOR2X2M U28 ( .A(half_period_1[1]), .B(\add_24/carry[1] ), .Y(
        half_period_2[1]) );
  AND2X1M U29 ( .A(div_ratio[0]), .B(half_period_1[0]), .Y(\add_24/carry[1] )
         );
  CLKXOR2X2M U30 ( .A(div_ratio[0]), .B(half_period_1[0]), .Y(half_period_2[0]) );
  CLKINVX1M U31 ( .A(div_ratio[1]), .Y(half_period_1[0]) );
  OAI2BB1X1M U32 ( .A0N(div_ratio[1]), .A1N(div_ratio[2]), .B0(n2), .Y(
        half_period_1[1]) );
  OR2X1M U33 ( .A(n2), .B(div_ratio[3]), .Y(n3) );
  OAI2BB1X1M U34 ( .A0N(n2), .A1N(div_ratio[3]), .B0(n3), .Y(half_period_1[2])
         );
  OR2X1M U35 ( .A(n3), .B(div_ratio[4]), .Y(n4) );
  OAI2BB1X1M U36 ( .A0N(n3), .A1N(div_ratio[4]), .B0(n4), .Y(half_period_1[3])
         );
  OR2X1M U37 ( .A(n4), .B(div_ratio[5]), .Y(n5) );
  OAI2BB1X1M U38 ( .A0N(n4), .A1N(div_ratio[5]), .B0(n5), .Y(half_period_1[4])
         );
  XNOR2X1M U39 ( .A(div_ratio[6]), .B(n5), .Y(half_period_1[5]) );
  NOR3X1M U40 ( .A(div_ratio[6]), .B(div_ratio[7]), .C(n5), .Y(
        half_period_1[7]) );
  OAI21X1M U41 ( .A0(div_ratio[6]), .A1(n5), .B0(div_ratio[7]), .Y(n6) );
  NAND2BX1M U42 ( .AN(half_period_1[7]), .B(n6), .Y(half_period_1[6]) );
  CLKXOR2X2M U43 ( .A(div_clk_internal), .B(n7), .Y(n50) );
  AOI21X1M U44 ( .A0(n8), .A1(n9), .B0(n20), .Y(n7) );
  NOR2X1M U45 ( .A(n21), .B(n20), .Y(n51) );
  CLKXOR2X2M U46 ( .A(n8), .B(flag), .Y(n21) );
  NOR2BX1M U47 ( .AN(N24), .B(n22), .Y(N45) );
  NOR2BX1M U48 ( .AN(N23), .B(n22), .Y(N44) );
  NOR2BX1M U49 ( .AN(N22), .B(n22), .Y(N43) );
  NOR2BX1M U50 ( .AN(N21), .B(n22), .Y(N42) );
  NOR2BX1M U51 ( .AN(N20), .B(n22), .Y(N41) );
  NOR2BX1M U52 ( .AN(N19), .B(n22), .Y(N40) );
  NOR2BX1M U53 ( .AN(N18), .B(n22), .Y(N39) );
  NOR2BX1M U54 ( .AN(N17), .B(n22), .Y(N38) );
  NAND3BX1M U55 ( .AN(n20), .B(n9), .C(n8), .Y(n22) );
  CLKNAND2X2M U56 ( .A(n23), .B(div_ratio[0]), .Y(n8) );
  MXI2X1M U57 ( .A(n24), .B(n25), .S0(flag), .Y(n23) );
  CLKNAND2X2M U58 ( .A(n26), .B(n27), .Y(n25) );
  NOR4X1M U59 ( .A(n28), .B(n29), .C(n30), .D(n31), .Y(n27) );
  CLKXOR2X2M U60 ( .A(half_period_2[3]), .B(counter[3]), .Y(n31) );
  CLKXOR2X2M U61 ( .A(half_period_2[2]), .B(counter[2]), .Y(n30) );
  CLKXOR2X2M U62 ( .A(half_period_2[1]), .B(counter[1]), .Y(n29) );
  CLKXOR2X2M U63 ( .A(half_period_2[0]), .B(counter[0]), .Y(n28) );
  NOR4X1M U64 ( .A(n32), .B(n35), .C(n36), .D(n37), .Y(n26) );
  CLKXOR2X2M U65 ( .A(half_period_2[7]), .B(counter[7]), .Y(n37) );
  CLKXOR2X2M U66 ( .A(half_period_2[6]), .B(counter[6]), .Y(n36) );
  CLKXOR2X2M U67 ( .A(half_period_2[5]), .B(counter[5]), .Y(n35) );
  CLKXOR2X2M U68 ( .A(half_period_2[4]), .B(counter[4]), .Y(n32) );
  OR2X1M U69 ( .A(n24), .B(div_ratio[0]), .Y(n9) );
  CLKNAND2X2M U70 ( .A(n38), .B(n39), .Y(n24) );
  NOR4X1M U71 ( .A(n40), .B(n41), .C(n42), .D(n43), .Y(n39) );
  CLKXOR2X2M U72 ( .A(half_period_1[3]), .B(counter[3]), .Y(n43) );
  CLKXOR2X2M U73 ( .A(half_period_1[2]), .B(counter[2]), .Y(n42) );
  CLKXOR2X2M U74 ( .A(half_period_1[1]), .B(counter[1]), .Y(n41) );
  CLKXOR2X2M U75 ( .A(half_period_1[0]), .B(counter[0]), .Y(n40) );
  NOR4X1M U76 ( .A(n44), .B(n45), .C(n46), .D(n47), .Y(n38) );
  CLKXOR2X2M U77 ( .A(half_period_1[7]), .B(counter[7]), .Y(n47) );
  CLKXOR2X2M U78 ( .A(half_period_1[6]), .B(counter[6]), .Y(n46) );
  CLKXOR2X2M U79 ( .A(half_period_1[5]), .B(counter[5]), .Y(n45) );
  CLKXOR2X2M U80 ( .A(half_period_1[4]), .B(counter[4]), .Y(n44) );
  NOR2BX1M U81 ( .AN(rst), .B(n20), .Y(N3) );
  OAI2BB1X1M U82 ( .A0N(n48), .A1N(n49), .B0(clk_en), .Y(n20) );
  NOR4X1M U83 ( .A(div_ratio[7]), .B(div_ratio[6]), .C(div_ratio[5]), .D(
        div_ratio[4]), .Y(n49) );
  NOR3X1M U84 ( .A(div_ratio[1]), .B(div_ratio[3]), .C(div_ratio[2]), .Y(n48)
         );
  CLK_divider_1_DW01_inc_0 add_47 ( .A(counter), .SUM({N24, N23, N22, N21, N20, 
        N19, N18, N17}) );
endmodule


module FSM_test_1 ( Data_Valid, PAR_EN, ser_done, CLK, RST, mux_sel, ser_en, 
        busy, test_si, test_so, test_se );
  output [1:0] mux_sel;
  input Data_Valid, PAR_EN, ser_done, CLK, RST, test_si, test_se;
  output ser_en, busy, test_so;
  wire   n9, n10, n11, n12, n13, n5, n6, n7, n8, n14;
  wire   [2:0] current_state;
  wire   [2:0] next_state;
  assign test_so = current_state[2];

  SDFFRQX2M \current_state_reg[2]  ( .D(next_state[2]), .SI(n8), .SE(test_se), 
        .CK(CLK), .RN(RST), .Q(current_state[2]) );
  SDFFRQX2M \current_state_reg[0]  ( .D(next_state[0]), .SI(test_si), .SE(
        test_se), .CK(CLK), .RN(RST), .Q(current_state[0]) );
  SDFFRQX2M \current_state_reg[1]  ( .D(next_state[1]), .SI(n6), .SE(test_se), 
        .CK(CLK), .RN(RST), .Q(current_state[1]) );
  INVX2M U6 ( .A(busy), .Y(n7) );
  INVX2M U7 ( .A(n9), .Y(ser_en) );
  NOR2X2M U8 ( .A(n8), .B(current_state[2]), .Y(busy) );
  INVX2M U9 ( .A(current_state[1]), .Y(n8) );
  OAI33X2M U10 ( .A0(n6), .A1(current_state[2]), .A2(current_state[1]), .B0(n7), .B1(current_state[0]), .B2(n10), .Y(next_state[1]) );
  INVX2M U11 ( .A(current_state[0]), .Y(n6) );
  OAI31X1M U12 ( .A0(n14), .A1(n5), .A2(n9), .B0(n11), .Y(next_state[0]) );
  INVX2M U13 ( .A(PAR_EN), .Y(n14) );
  NAND3X2M U14 ( .A(n12), .B(n8), .C(Data_Valid), .Y(n11) );
  NOR2X2M U15 ( .A(current_state[0]), .B(current_state[2]), .Y(n12) );
  NOR2X2M U16 ( .A(n5), .B(PAR_EN), .Y(n10) );
  NAND2X2M U17 ( .A(current_state[1]), .B(n12), .Y(n9) );
  AOI2BB1X2M U18 ( .A0N(n10), .A1N(current_state[0]), .B0(n7), .Y(
        next_state[2]) );
  INVX2M U19 ( .A(ser_done), .Y(n5) );
  NAND2BX2M U20 ( .AN(current_state[2]), .B(n13), .Y(mux_sel[0]) );
  XNOR2X2M U21 ( .A(n8), .B(current_state[0]), .Y(n13) );
  BUFX2M U22 ( .A(busy), .Y(mux_sel[1]) );
endmodule


module MUX ( mux_sel, ser_data, par_bit, TX_OUT );
  input [1:0] mux_sel;
  input ser_data, par_bit;
  output TX_OUT;
  wire   n2, n3, n1;

  OAI21X4M U3 ( .A0(n2), .A1(n1), .B0(n3), .Y(TX_OUT) );
  NAND3X2M U4 ( .A(mux_sel[1]), .B(n1), .C(ser_data), .Y(n3) );
  NOR2BX2M U5 ( .AN(mux_sel[1]), .B(par_bit), .Y(n2) );
  INVX2M U6 ( .A(mux_sel[0]), .Y(n1) );
endmodule


module ParityCalc_WIDTH8_test_1 ( P_DATA, CLK, RST, busy, Data_Valid, PAR_EN, 
        PAR_TYP, par_bit, test_si, test_se );
  input [7:0] P_DATA;
  input CLK, RST, busy, Data_Valid, PAR_EN, PAR_TYP, test_si, test_se;
  output par_bit;
  wire   n1, n3, n4, n5, n6, n7, n9, n11, n13, n15, n17, n19, n21, n23, n25,
         n2;
  wire   [7:0] DATA;

  SDFFRQX2M par_bit_reg ( .D(n9), .SI(DATA[7]), .SE(test_se), .CK(CLK), .RN(
        RST), .Q(par_bit) );
  SDFFRQX2M \DATA_reg[5]  ( .D(n21), .SI(DATA[4]), .SE(test_se), .CK(CLK), 
        .RN(RST), .Q(DATA[5]) );
  SDFFRQX2M \DATA_reg[1]  ( .D(n13), .SI(DATA[0]), .SE(test_se), .CK(CLK), 
        .RN(RST), .Q(DATA[1]) );
  SDFFRQX2M \DATA_reg[4]  ( .D(n19), .SI(DATA[3]), .SE(test_se), .CK(CLK), 
        .RN(RST), .Q(DATA[4]) );
  SDFFRQX2M \DATA_reg[0]  ( .D(n11), .SI(test_si), .SE(test_se), .CK(CLK), 
        .RN(RST), .Q(DATA[0]) );
  SDFFRQX2M \DATA_reg[2]  ( .D(n15), .SI(DATA[1]), .SE(test_se), .CK(CLK), 
        .RN(RST), .Q(DATA[2]) );
  SDFFRQX2M \DATA_reg[3]  ( .D(n17), .SI(DATA[2]), .SE(test_se), .CK(CLK), 
        .RN(RST), .Q(DATA[3]) );
  SDFFRQX2M \DATA_reg[6]  ( .D(n23), .SI(DATA[5]), .SE(test_se), .CK(CLK), 
        .RN(RST), .Q(DATA[6]) );
  SDFFRQX2M \DATA_reg[7]  ( .D(n25), .SI(DATA[6]), .SE(test_se), .CK(CLK), 
        .RN(RST), .Q(DATA[7]) );
  NOR2BX2M U2 ( .AN(Data_Valid), .B(busy), .Y(n7) );
  XNOR2X2M U3 ( .A(DATA[2]), .B(DATA[3]), .Y(n5) );
  XOR3XLM U4 ( .A(DATA[5]), .B(DATA[4]), .C(n6), .Y(n3) );
  CLKXOR2X2M U5 ( .A(DATA[7]), .B(DATA[6]), .Y(n6) );
  OAI2BB2X1M U6 ( .B0(n1), .B1(n2), .A0N(par_bit), .A1N(n2), .Y(n9) );
  INVX2M U7 ( .A(PAR_EN), .Y(n2) );
  XOR3XLM U8 ( .A(n3), .B(PAR_TYP), .C(n4), .Y(n1) );
  XOR3XLM U9 ( .A(DATA[1]), .B(DATA[0]), .C(n5), .Y(n4) );
  AO2B2X2M U10 ( .B0(P_DATA[0]), .B1(n7), .A0(DATA[0]), .A1N(n7), .Y(n11) );
  AO2B2X2M U11 ( .B0(P_DATA[1]), .B1(n7), .A0(DATA[1]), .A1N(n7), .Y(n13) );
  AO2B2X2M U12 ( .B0(P_DATA[2]), .B1(n7), .A0(DATA[2]), .A1N(n7), .Y(n15) );
  AO2B2X2M U13 ( .B0(P_DATA[3]), .B1(n7), .A0(DATA[3]), .A1N(n7), .Y(n17) );
  AO2B2X2M U14 ( .B0(P_DATA[4]), .B1(n7), .A0(DATA[4]), .A1N(n7), .Y(n19) );
  AO2B2X2M U15 ( .B0(P_DATA[5]), .B1(n7), .A0(DATA[5]), .A1N(n7), .Y(n21) );
  AO2B2X2M U16 ( .B0(P_DATA[6]), .B1(n7), .A0(DATA[6]), .A1N(n7), .Y(n23) );
  AO2B2X2M U17 ( .B0(P_DATA[7]), .B1(n7), .A0(DATA[7]), .A1N(n7), .Y(n25) );
endmodule


module Serializer_DATA_WIDTH8_test_1 ( P_DATA, Data_Valid, CLK, RST, Enable, 
        busy, ser_done, ser_data, test_si, test_se );
  input [7:0] P_DATA;
  input Data_Valid, CLK, RST, Enable, busy, test_si, test_se;
  output ser_done, ser_data;
  wire   N31, N32, N33, N34, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27,
         n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n15, n16,
         n17, n40, n43, n44;
  wire   [7:0] DATA_V;
  wire   [3:0] counter;

  SDFFRQX2M \DATA_V_reg[0]  ( .D(n32), .SI(test_si), .SE(n44), .CK(CLK), .RN(
        RST), .Q(DATA_V[0]) );
  SDFFRQX2M \DATA_V_reg[6]  ( .D(n34), .SI(DATA_V[5]), .SE(n44), .CK(CLK), 
        .RN(RST), .Q(DATA_V[6]) );
  SDFFRQX2M \DATA_V_reg[5]  ( .D(n35), .SI(DATA_V[4]), .SE(n44), .CK(CLK), 
        .RN(RST), .Q(DATA_V[5]) );
  SDFFRQX2M \DATA_V_reg[4]  ( .D(n36), .SI(DATA_V[3]), .SE(n44), .CK(CLK), 
        .RN(RST), .Q(DATA_V[4]) );
  SDFFRQX2M \DATA_V_reg[3]  ( .D(n37), .SI(DATA_V[2]), .SE(n44), .CK(CLK), 
        .RN(RST), .Q(DATA_V[3]) );
  SDFFRQX2M \DATA_V_reg[2]  ( .D(n38), .SI(DATA_V[1]), .SE(n44), .CK(CLK), 
        .RN(RST), .Q(DATA_V[2]) );
  SDFFRQX2M \DATA_V_reg[1]  ( .D(n39), .SI(DATA_V[0]), .SE(n44), .CK(CLK), 
        .RN(RST), .Q(DATA_V[1]) );
  SDFFRQX2M \DATA_V_reg[7]  ( .D(n33), .SI(DATA_V[6]), .SE(n44), .CK(CLK), 
        .RN(RST), .Q(DATA_V[7]) );
  SDFFRQX2M ser_done_reg ( .D(N31), .SI(ser_data), .SE(n44), .CK(CLK), .RN(RST), .Q(ser_done) );
  SDFFRQX2M \counter_reg[2]  ( .D(N34), .SI(n16), .SE(n44), .CK(CLK), .RN(RST), 
        .Q(counter[2]) );
  SDFFRQX2M \counter_reg[1]  ( .D(N33), .SI(counter[0]), .SE(n44), .CK(CLK), 
        .RN(RST), .Q(counter[1]) );
  SDFFRQX2M \counter_reg[0]  ( .D(N32), .SI(DATA_V[7]), .SE(n44), .CK(CLK), 
        .RN(RST), .Q(counter[0]) );
  SDFFSQX1M ser_data_reg ( .D(DATA_V[0]), .SI(counter[2]), .SE(n44), .CK(CLK), 
        .SN(RST), .Q(ser_data) );
  NOR2X2M U17 ( .A(n40), .B(n21), .Y(n20) );
  NOR2X2M U18 ( .A(n21), .B(n20), .Y(n18) );
  INVX2M U19 ( .A(Enable), .Y(n40) );
  NOR2BX2M U20 ( .AN(Data_Valid), .B(busy), .Y(n21) );
  OAI2BB1X2M U21 ( .A0N(DATA_V[0]), .A1N(n18), .B0(n19), .Y(n32) );
  AOI22X1M U22 ( .A0(DATA_V[1]), .A1(n20), .B0(P_DATA[0]), .B1(n21), .Y(n19)
         );
  OAI2BB1X2M U23 ( .A0N(DATA_V[1]), .A1N(n18), .B0(n27), .Y(n39) );
  AOI22X1M U24 ( .A0(DATA_V[2]), .A1(n20), .B0(P_DATA[1]), .B1(n21), .Y(n27)
         );
  OAI2BB1X2M U25 ( .A0N(n18), .A1N(DATA_V[2]), .B0(n26), .Y(n38) );
  AOI22X1M U26 ( .A0(DATA_V[3]), .A1(n20), .B0(P_DATA[2]), .B1(n21), .Y(n26)
         );
  OAI2BB1X2M U27 ( .A0N(n18), .A1N(DATA_V[3]), .B0(n25), .Y(n37) );
  AOI22X1M U28 ( .A0(DATA_V[4]), .A1(n20), .B0(P_DATA[3]), .B1(n21), .Y(n25)
         );
  OAI2BB1X2M U29 ( .A0N(n18), .A1N(DATA_V[4]), .B0(n24), .Y(n36) );
  AOI22X1M U30 ( .A0(DATA_V[5]), .A1(n20), .B0(P_DATA[4]), .B1(n21), .Y(n24)
         );
  OAI2BB1X2M U31 ( .A0N(n18), .A1N(DATA_V[5]), .B0(n23), .Y(n35) );
  AOI22X1M U32 ( .A0(DATA_V[6]), .A1(n20), .B0(P_DATA[5]), .B1(n21), .Y(n23)
         );
  OAI2BB1X2M U33 ( .A0N(n18), .A1N(DATA_V[6]), .B0(n22), .Y(n34) );
  AOI22X1M U34 ( .A0(DATA_V[7]), .A1(n20), .B0(P_DATA[6]), .B1(n21), .Y(n22)
         );
  AO22X1M U35 ( .A0(n18), .A1(DATA_V[7]), .B0(P_DATA[7]), .B1(n21), .Y(n33) );
  OAI32X1M U36 ( .A0(n29), .A1(n15), .A2(n16), .B0(n30), .B1(n17), .Y(N34) );
  NAND2X2M U37 ( .A(Enable), .B(n17), .Y(n29) );
  AOI21X2M U38 ( .A0(Enable), .A1(n16), .B0(N32), .Y(n30) );
  INVX2M U39 ( .A(counter[2]), .Y(n17) );
  NOR2X2M U40 ( .A(n40), .B(counter[0]), .Y(N32) );
  NOR2X2M U41 ( .A(n28), .B(n40), .Y(N31) );
  NAND3X2M U42 ( .A(counter[1]), .B(counter[0]), .C(counter[2]), .Y(n28) );
  NOR2X2M U43 ( .A(n31), .B(n40), .Y(N33) );
  CLKXOR2X2M U44 ( .A(n15), .B(counter[1]), .Y(n31) );
  INVX2M U45 ( .A(counter[0]), .Y(n15) );
  INVX2M U46 ( .A(counter[1]), .Y(n16) );
  INVXLM U47 ( .A(test_se), .Y(n43) );
  INVXLM U48 ( .A(n43), .Y(n44) );
endmodule


module UART_TX_DATA_WIDTH8_test_1 ( P_DATA, PAR_EN, Data_Valid, PAR_TYP, CLK, 
        RST, TX_OUT, busy, test_si, test_so, test_se );
  input [7:0] P_DATA;
  input PAR_EN, Data_Valid, PAR_TYP, CLK, RST, test_si, test_se;
  output TX_OUT, busy, test_so;
  wire   ser_done, ser_en, ser_data, par_bit, n1, n2, n3;
  wire   [1:0] mux_sel;
  assign test_so = ser_done;

  INVX2M U1 ( .A(n2), .Y(n1) );
  INVX2M U2 ( .A(RST), .Y(n2) );
  FSM_test_1 fsm_inst ( .Data_Valid(Data_Valid), .PAR_EN(PAR_EN), .ser_done(
        ser_done), .CLK(CLK), .RST(n1), .mux_sel(mux_sel), .ser_en(ser_en), 
        .busy(busy), .test_si(par_bit), .test_so(n3), .test_se(test_se) );
  MUX mux_inst ( .mux_sel(mux_sel), .ser_data(ser_data), .par_bit(par_bit), 
        .TX_OUT(TX_OUT) );
  ParityCalc_WIDTH8_test_1 Parity_Gen ( .P_DATA(P_DATA), .CLK(CLK), .RST(n1), 
        .busy(busy), .Data_Valid(Data_Valid), .PAR_EN(PAR_EN), .PAR_TYP(
        PAR_TYP), .par_bit(par_bit), .test_si(test_si), .test_se(test_se) );
  Serializer_DATA_WIDTH8_test_1 u_Serializer ( .P_DATA(P_DATA), .Data_Valid(
        Data_Valid), .CLK(CLK), .RST(n1), .Enable(ser_en), .busy(busy), 
        .ser_done(ser_done), .ser_data(ser_data), .test_si(n3), .test_se(
        test_se) );
endmodule


module FSM_RX_test_1 ( CLK, RST, RX_IN, PAR_EN, bit_done, bit_cnt, edge_cnt, 
        par_error, strt_glitch, stp_error, data_samp_en, enable, par_chk_en, 
        strt_chk_en, stp_chk_en, deser_en, data_valid, test_si, test_so, 
        test_se );
  input [3:0] bit_cnt;
  input [5:0] edge_cnt;
  input CLK, RST, RX_IN, PAR_EN, bit_done, par_error, strt_glitch, stp_error,
         test_si, test_se;
  output data_samp_en, enable, par_chk_en, strt_chk_en, stp_chk_en, deser_en,
         data_valid, test_so;
  wire   n9, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19, n5, n6, n7, n8,
         n20;
  wire   [2:0] current_state;
  wire   [2:0] next_state;
  assign test_so = current_state[2];

  SDFFRQX2M \current_state_reg[1]  ( .D(next_state[1]), .SI(n6), .SE(test_se), 
        .CK(CLK), .RN(RST), .Q(current_state[1]) );
  SDFFRQX2M \current_state_reg[2]  ( .D(next_state[2]), .SI(current_state[1]), 
        .SE(test_se), .CK(CLK), .RN(RST), .Q(current_state[2]) );
  SDFFRQX2M \current_state_reg[0]  ( .D(next_state[0]), .SI(test_si), .SE(
        test_se), .CK(CLK), .RN(RST), .Q(current_state[0]) );
  INVX2M U6 ( .A(n13), .Y(n7) );
  NOR3X2M U7 ( .A(n5), .B(n6), .C(n11), .Y(par_chk_en) );
  NOR2X2M U8 ( .A(n5), .B(n7), .Y(stp_chk_en) );
  NOR2X2M U9 ( .A(n9), .B(current_state[0]), .Y(n13) );
  NAND2X2M U10 ( .A(current_state[2]), .B(n8), .Y(n9) );
  NAND2BX2M U11 ( .AN(current_state[2]), .B(current_state[1]), .Y(n11) );
  INVX2M U12 ( .A(current_state[0]), .Y(n6) );
  INVX2M U13 ( .A(current_state[1]), .Y(n8) );
  OAI32X1M U14 ( .A0(n14), .A1(n6), .A2(n5), .B0(n15), .B1(n11), .Y(
        next_state[1]) );
  OR3X2M U15 ( .A(strt_glitch), .B(current_state[2]), .C(current_state[1]), 
        .Y(n14) );
  NOR2X2M U16 ( .A(n16), .B(n5), .Y(n15) );
  AOI2B1X1M U17 ( .A1N(n10), .A0(n20), .B0(current_state[0]), .Y(n16) );
  OAI21BX1M U18 ( .A0(current_state[2]), .A1(n17), .B0N(stp_chk_en), .Y(
        next_state[0]) );
  AOI22X1M U19 ( .A0(n18), .A1(n6), .B0(current_state[0]), .B1(n5), .Y(n17) );
  OAI32X1M U20 ( .A0(n20), .A1(n8), .A2(n10), .B0(current_state[1]), .B1(RX_IN), .Y(n18) );
  OAI31X1M U21 ( .A0(n10), .A1(PAR_EN), .A2(n11), .B0(n12), .Y(next_state[2])
         );
  NOR2X2M U22 ( .A(par_chk_en), .B(n13), .Y(n12) );
  NOR3X2M U23 ( .A(n11), .B(current_state[0]), .C(n5), .Y(deser_en) );
  NOR4X1M U24 ( .A(stp_error), .B(par_error), .C(n6), .D(n9), .Y(data_valid)
         );
  NAND4X2M U25 ( .A(bit_cnt[3]), .B(bit_cnt[0]), .C(n19), .D(bit_done), .Y(n10) );
  NOR2X2M U26 ( .A(bit_cnt[2]), .B(bit_cnt[1]), .Y(n19) );
  INVX2M U27 ( .A(bit_done), .Y(n5) );
  INVX2M U28 ( .A(PAR_EN), .Y(n20) );
  AND3X2M U29 ( .A(n9), .B(current_state[0]), .C(n8), .Y(strt_chk_en) );
  BUFX2M U30 ( .A(enable), .Y(data_samp_en) );
  OAI211X2M U31 ( .A0(current_state[2]), .A1(n6), .B0(n11), .C0(n7), .Y(enable) );
endmodule


module edge_bit_count_test_1 ( CLK, RST, enable, Prescale, edge_cnt, bit_cnt, 
        bit_done, test_si, test_so, test_se );
  input [5:0] Prescale;
  output [5:0] edge_cnt;
  output [3:0] bit_cnt;
  input CLK, RST, enable, test_si, test_se;
  output bit_done, test_so;
  wire   prev_enable, N8, N9, N10, N11, N12, N13, N14, N15, N24, N25, N26, N27,
         N28, N41, N42, N43, N44, N45, N46, N47, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, \add_35/carry[5] , \add_35/carry[4] ,
         \add_35/carry[3] , \add_35/carry[2] , n1, n2, n3, n4, n17, n18, n19,
         n20, n33, n34, n35, n36, n37, n38, n39, n40, n41, n44, n45;
  assign test_so = prev_enable;

  SDFFRQX2M \bit_cnt_reg[3]  ( .D(n29), .SI(n40), .SE(n45), .CK(CLK), .RN(RST), 
        .Q(bit_cnt[3]) );
  SDFFRQX2M bit_done_reg ( .D(N41), .SI(bit_cnt[3]), .SE(n45), .CK(CLK), .RN(
        RST), .Q(bit_done) );
  SDFFRQX2M prev_enable_reg ( .D(enable), .SI(edge_cnt[5]), .SE(n45), .CK(CLK), 
        .RN(RST), .Q(prev_enable) );
  SDFFRQX2M \bit_cnt_reg[2]  ( .D(n30), .SI(n39), .SE(n45), .CK(CLK), .RN(RST), 
        .Q(bit_cnt[2]) );
  SDFFRQX2M \bit_cnt_reg[1]  ( .D(n31), .SI(bit_cnt[0]), .SE(n45), .CK(CLK), 
        .RN(RST), .Q(bit_cnt[1]) );
  SDFFRQX2M \bit_cnt_reg[0]  ( .D(n32), .SI(test_si), .SE(n45), .CK(CLK), .RN(
        RST), .Q(bit_cnt[0]) );
  SDFFRQX2M \edge_cnt_reg[5]  ( .D(N47), .SI(edge_cnt[4]), .SE(n45), .CK(CLK), 
        .RN(RST), .Q(edge_cnt[5]) );
  SDFFRQX2M \edge_cnt_reg[0]  ( .D(N42), .SI(bit_done), .SE(n45), .CK(CLK), 
        .RN(RST), .Q(edge_cnt[0]) );
  SDFFRQX2M \edge_cnt_reg[4]  ( .D(N46), .SI(edge_cnt[3]), .SE(n45), .CK(CLK), 
        .RN(RST), .Q(edge_cnt[4]) );
  SDFFRQX2M \edge_cnt_reg[1]  ( .D(N43), .SI(edge_cnt[0]), .SE(n45), .CK(CLK), 
        .RN(RST), .Q(edge_cnt[1]) );
  SDFFRQX2M \edge_cnt_reg[2]  ( .D(N44), .SI(edge_cnt[1]), .SE(n45), .CK(CLK), 
        .RN(RST), .Q(edge_cnt[2]) );
  SDFFRQX2M \edge_cnt_reg[3]  ( .D(N45), .SI(edge_cnt[2]), .SE(n45), .CK(CLK), 
        .RN(RST), .Q(edge_cnt[3]) );
  INVX2M U6 ( .A(N41), .Y(n38) );
  NOR2X2M U7 ( .A(n27), .B(n41), .Y(N41) );
  AND2X2M U17 ( .A(N27), .B(n28), .Y(N46) );
  AND2X2M U18 ( .A(N26), .B(n28), .Y(N45) );
  AND2X2M U19 ( .A(N25), .B(n28), .Y(N44) );
  AND2X2M U20 ( .A(N24), .B(n28), .Y(N43) );
  INVX2M U21 ( .A(enable), .Y(n41) );
  NOR3BX2M U22 ( .AN(prev_enable), .B(n41), .C(N15), .Y(n28) );
  OAI32X1M U23 ( .A0(n23), .A1(bit_cnt[2]), .A2(n39), .B0(n24), .B1(n40), .Y(
        n30) );
  INVX2M U24 ( .A(bit_cnt[2]), .Y(n40) );
  AOI21X2M U25 ( .A0(N41), .A1(n39), .B0(n25), .Y(n24) );
  INVX2M U26 ( .A(bit_cnt[1]), .Y(n39) );
  NAND2X2M U27 ( .A(prev_enable), .B(N15), .Y(n27) );
  NAND3X2M U28 ( .A(enable), .B(n27), .C(prev_enable), .Y(n26) );
  OAI2B2X1M U29 ( .A1N(bit_cnt[0]), .A0(n26), .B0(bit_cnt[0]), .B1(n38), .Y(
        n32) );
  OAI21X2M U30 ( .A0(bit_cnt[0]), .A1(n38), .B0(n26), .Y(n25) );
  NOR3BX2M U31 ( .AN(prev_enable), .B(n21), .C(n41), .Y(n29) );
  CLKXOR2X2M U32 ( .A(n22), .B(bit_cnt[3]), .Y(n21) );
  NAND4X1M U33 ( .A(bit_cnt[2]), .B(N15), .C(bit_cnt[1]), .D(bit_cnt[0]), .Y(
        n22) );
  OAI2B2X1M U34 ( .A1N(n28), .A0(edge_cnt[0]), .B0(prev_enable), .B1(n41), .Y(
        N42) );
  OAI2BB2X1M U35 ( .B0(bit_cnt[1]), .B1(n23), .A0N(n25), .A1N(bit_cnt[1]), .Y(
        n31) );
  OR2X2M U36 ( .A(Prescale[1]), .B(Prescale[0]), .Y(n1) );
  NAND2X2M U37 ( .A(N41), .B(bit_cnt[0]), .Y(n23) );
  AND2X2M U38 ( .A(N28), .B(n28), .Y(N47) );
  ADDHX1M U39 ( .A(edge_cnt[2]), .B(\add_35/carry[2] ), .CO(\add_35/carry[3] ), 
        .S(N25) );
  ADDHX1M U40 ( .A(edge_cnt[3]), .B(\add_35/carry[3] ), .CO(\add_35/carry[4] ), 
        .S(N26) );
  ADDHX1M U41 ( .A(edge_cnt[1]), .B(edge_cnt[0]), .CO(\add_35/carry[2] ), .S(
        N24) );
  ADDHX1M U42 ( .A(edge_cnt[4]), .B(\add_35/carry[4] ), .CO(\add_35/carry[5] ), 
        .S(N27) );
  CLKINVX1M U43 ( .A(Prescale[0]), .Y(N8) );
  OAI2BB1X1M U44 ( .A0N(Prescale[0]), .A1N(Prescale[1]), .B0(n1), .Y(N9) );
  OR2X1M U45 ( .A(n1), .B(Prescale[2]), .Y(n2) );
  OAI2BB1X1M U46 ( .A0N(n1), .A1N(Prescale[2]), .B0(n2), .Y(N10) );
  OR2X1M U47 ( .A(n2), .B(Prescale[3]), .Y(n3) );
  OAI2BB1X1M U48 ( .A0N(n2), .A1N(Prescale[3]), .B0(n3), .Y(N11) );
  OR2X1M U49 ( .A(n3), .B(Prescale[4]), .Y(n4) );
  OAI2BB1X1M U50 ( .A0N(n3), .A1N(Prescale[4]), .B0(n4), .Y(N12) );
  NOR2X1M U51 ( .A(n4), .B(Prescale[5]), .Y(N14) );
  AO21XLM U52 ( .A0(n4), .A1(Prescale[5]), .B0(N14), .Y(N13) );
  CLKXOR2X2M U53 ( .A(\add_35/carry[5] ), .B(edge_cnt[5]), .Y(N28) );
  NOR2BX1M U54 ( .AN(N8), .B(edge_cnt[0]), .Y(n17) );
  OAI2B2X1M U55 ( .A1N(edge_cnt[1]), .A0(n17), .B0(N9), .B1(n17), .Y(n33) );
  XNOR2X1M U56 ( .A(N13), .B(edge_cnt[5]), .Y(n20) );
  NOR2BX1M U57 ( .AN(edge_cnt[0]), .B(N8), .Y(n18) );
  OAI2B2X1M U58 ( .A1N(N9), .A0(n18), .B0(edge_cnt[1]), .B1(n18), .Y(n19) );
  NAND4BX1M U59 ( .AN(N14), .B(n33), .C(n20), .D(n19), .Y(n37) );
  CLKXOR2X2M U60 ( .A(N12), .B(edge_cnt[4]), .Y(n36) );
  CLKXOR2X2M U61 ( .A(N10), .B(edge_cnt[2]), .Y(n35) );
  CLKXOR2X2M U62 ( .A(N11), .B(edge_cnt[3]), .Y(n34) );
  NOR4X1M U63 ( .A(n37), .B(n36), .C(n35), .D(n34), .Y(N15) );
  INVXLM U64 ( .A(test_se), .Y(n44) );
  INVXLM U65 ( .A(n44), .Y(n45) );
endmodule


module data_sampling_test_1 ( CLK, RST, RX_IN, data_samp_en, Prescale, 
        edge_cnt, sampled_bit, test_si, test_se );
  input [5:0] Prescale;
  input [5:0] edge_cnt;
  input CLK, RST, RX_IN, data_samp_en, test_si, test_se;
  output sampled_bit;
  wire   sample_reg1, sample_reg2, sample_reg3, n22, n23, n24, n25,
         \add_14/carry[4] , \add_14/carry[3] , \add_14/carry[2] , n1, n2, n3,
         n4, n5, n6, n7, n8, n9, n10, n15, n16, n17, n18, n19, n20, n21, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46;
  wire   [5:0] sample1;
  wire   [5:0] sample3;

  SDFFRQX2M sample_reg2_reg ( .D(n24), .SI(n4), .SE(test_se), .CK(CLK), .RN(
        RST), .Q(sample_reg2) );
  SDFFRQX2M sample_reg1_reg ( .D(n25), .SI(test_si), .SE(test_se), .CK(CLK), 
        .RN(RST), .Q(sample_reg1) );
  SDFFRQX2M sample_reg3_reg ( .D(n23), .SI(n9), .SE(test_se), .CK(CLK), .RN(
        RST), .Q(sample_reg3) );
  SDFFRQX2M sampled_bit_reg ( .D(n22), .SI(sample_reg3), .SE(test_se), .CK(CLK), .RN(RST), .Q(sampled_bit) );
  OR2X2M U4 ( .A(Prescale[2]), .B(Prescale[1]), .Y(n1) );
  ADDHX1M U5 ( .A(Prescale[4]), .B(\add_14/carry[3] ), .CO(\add_14/carry[4] ), 
        .S(sample3[3]) );
  ADDHX1M U6 ( .A(Prescale[3]), .B(\add_14/carry[2] ), .CO(\add_14/carry[3] ), 
        .S(sample3[2]) );
  ADDHX1M U7 ( .A(Prescale[2]), .B(Prescale[1]), .CO(\add_14/carry[2] ), .S(
        sample3[1]) );
  ADDHX1M U8 ( .A(Prescale[5]), .B(\add_14/carry[4] ), .CO(sample3[5]), .S(
        sample3[4]) );
  CLKINVX1M U12 ( .A(Prescale[1]), .Y(sample1[0]) );
  OAI2BB1X1M U13 ( .A0N(Prescale[1]), .A1N(Prescale[2]), .B0(n1), .Y(
        sample1[1]) );
  OR2X1M U14 ( .A(n1), .B(Prescale[3]), .Y(n2) );
  OAI2BB1X1M U15 ( .A0N(n1), .A1N(Prescale[3]), .B0(n2), .Y(sample1[2]) );
  XNOR2X1M U16 ( .A(Prescale[4]), .B(n2), .Y(sample1[3]) );
  NOR3X1M U17 ( .A(Prescale[4]), .B(Prescale[5]), .C(n2), .Y(sample1[5]) );
  OAI21X1M U18 ( .A0(Prescale[4]), .A1(n2), .B0(Prescale[5]), .Y(n3) );
  NAND2BX1M U19 ( .AN(sample1[5]), .B(n3), .Y(sample1[4]) );
  MXI2X1M U20 ( .A(n4), .B(n5), .S0(n6), .Y(n25) );
  NOR2X1M U21 ( .A(n7), .B(n8), .Y(n6) );
  MXI2X1M U22 ( .A(n9), .B(n5), .S0(n10), .Y(n24) );
  NOR4X1M U23 ( .A(n15), .B(n16), .C(n17), .D(n8), .Y(n10) );
  OR3X1M U24 ( .A(n18), .B(n19), .C(n20), .Y(n15) );
  CLKINVX1M U25 ( .A(RX_IN), .Y(n5) );
  CLKMX2X2M U26 ( .A(sample_reg3), .B(RX_IN), .S0(n21), .Y(n23) );
  CLKMX2X2M U27 ( .A(sampled_bit), .B(n26), .S0(n21), .Y(n22) );
  AND4X1M U28 ( .A(n27), .B(n28), .C(n29), .D(n30), .Y(n21) );
  NOR4X1M U29 ( .A(n31), .B(n32), .C(n33), .D(n34), .Y(n30) );
  CLKXOR2X2M U30 ( .A(sample3[5]), .B(edge_cnt[5]), .Y(n34) );
  CLKXOR2X2M U31 ( .A(sample3[4]), .B(edge_cnt[4]), .Y(n33) );
  CLKXOR2X2M U32 ( .A(sample3[3]), .B(edge_cnt[3]), .Y(n32) );
  CLKXOR2X2M U33 ( .A(sample3[2]), .B(edge_cnt[2]), .Y(n31) );
  NOR3X1M U34 ( .A(n8), .B(n17), .C(n35), .Y(n29) );
  NOR4X1M U35 ( .A(n16), .B(n19), .C(n20), .D(n18), .Y(n35) );
  CLKXOR2X2M U36 ( .A(edge_cnt[3]), .B(Prescale[4]), .Y(n18) );
  NAND3BX1M U37 ( .AN(edge_cnt[5]), .B(n36), .C(n37), .Y(n20) );
  XNOR2X1M U38 ( .A(edge_cnt[0]), .B(Prescale[1]), .Y(n37) );
  XNOR2X1M U39 ( .A(edge_cnt[1]), .B(Prescale[2]), .Y(n36) );
  XNOR2X1M U40 ( .A(n38), .B(Prescale[5]), .Y(n19) );
  CLKINVX1M U41 ( .A(edge_cnt[4]), .Y(n38) );
  CLKXOR2X2M U42 ( .A(edge_cnt[2]), .B(Prescale[3]), .Y(n16) );
  CLKINVX1M U43 ( .A(n7), .Y(n17) );
  NAND4X1M U44 ( .A(n39), .B(n40), .C(n41), .D(n42), .Y(n7) );
  NOR3X1M U45 ( .A(n43), .B(n44), .C(n45), .Y(n42) );
  CLKXOR2X2M U46 ( .A(sample1[4]), .B(edge_cnt[4]), .Y(n45) );
  CLKXOR2X2M U47 ( .A(sample1[1]), .B(edge_cnt[1]), .Y(n44) );
  CLKXOR2X2M U48 ( .A(sample1[0]), .B(edge_cnt[0]), .Y(n43) );
  XNOR2X1M U49 ( .A(edge_cnt[2]), .B(sample1[2]), .Y(n41) );
  XNOR2X1M U50 ( .A(edge_cnt[3]), .B(sample1[3]), .Y(n40) );
  XNOR2X1M U51 ( .A(edge_cnt[5]), .B(sample1[5]), .Y(n39) );
  CLKINVX1M U52 ( .A(data_samp_en), .Y(n8) );
  XNOR2X1M U53 ( .A(edge_cnt[0]), .B(sample1[0]), .Y(n28) );
  XNOR2X1M U54 ( .A(edge_cnt[1]), .B(sample3[1]), .Y(n27) );
  OAI21X1M U55 ( .A0(n4), .A1(n9), .B0(n46), .Y(n26) );
  OAI21X1M U56 ( .A0(sample_reg1), .A1(sample_reg2), .B0(sample_reg3), .Y(n46)
         );
  CLKINVX1M U57 ( .A(sample_reg2), .Y(n9) );
  CLKINVX1M U58 ( .A(sample_reg1), .Y(n4) );
endmodule


module deserializer_DATA_WIDTH8_test_1 ( CLK, RST, deser_en, sampled_bit, 
        P_DATA, test_si, test_so, test_se );
  output [7:0] P_DATA;
  input CLK, RST, deser_en, sampled_bit, test_si, test_se;
  output test_so;
  wire   n10, n12, n14, n16, n18, n20, n22, n24, n1, n2, n3, n4, n5, n6, n7,
         n8, n25;
  assign test_so = n2;

  SDFFRQX2M \P_DATA_reg[0]  ( .D(n10), .SI(test_si), .SE(test_se), .CK(CLK), 
        .RN(RST), .Q(P_DATA[0]) );
  SDFFRQX2M \P_DATA_reg[5]  ( .D(n20), .SI(n5), .SE(test_se), .CK(CLK), .RN(
        RST), .Q(P_DATA[5]) );
  SDFFRQX2M \P_DATA_reg[1]  ( .D(n12), .SI(P_DATA[0]), .SE(test_se), .CK(CLK), 
        .RN(RST), .Q(P_DATA[1]) );
  SDFFRQX2M \P_DATA_reg[4]  ( .D(n18), .SI(n6), .SE(test_se), .CK(CLK), .RN(
        RST), .Q(P_DATA[4]) );
  SDFFRQX2M \P_DATA_reg[7]  ( .D(n24), .SI(n3), .SE(test_se), .CK(CLK), .RN(
        RST), .Q(P_DATA[7]) );
  SDFFRQX2M \P_DATA_reg[3]  ( .D(n16), .SI(n7), .SE(test_se), .CK(CLK), .RN(
        RST), .Q(P_DATA[3]) );
  SDFFRQX2M \P_DATA_reg[6]  ( .D(n22), .SI(n4), .SE(test_se), .CK(CLK), .RN(
        RST), .Q(P_DATA[6]) );
  SDFFRQX2M \P_DATA_reg[2]  ( .D(n14), .SI(n8), .SE(test_se), .CK(CLK), .RN(
        RST), .Q(P_DATA[2]) );
  OAI22X1M U2 ( .A0(n25), .A1(n7), .B0(n1), .B1(n8), .Y(n12) );
  OAI22X1M U3 ( .A0(n25), .A1(n6), .B0(n1), .B1(n7), .Y(n14) );
  OAI22X1M U4 ( .A0(n25), .A1(n5), .B0(n1), .B1(n6), .Y(n16) );
  OAI22X1M U5 ( .A0(n25), .A1(n4), .B0(n1), .B1(n5), .Y(n18) );
  OAI22X1M U6 ( .A0(n25), .A1(n3), .B0(n1), .B1(n4), .Y(n20) );
  OAI22X1M U7 ( .A0(n25), .A1(n2), .B0(n1), .B1(n3), .Y(n22) );
  INVX2M U8 ( .A(n1), .Y(n25) );
  BUFX2M U9 ( .A(deser_en), .Y(n1) );
  OAI2BB2X1M U10 ( .B0(n1), .B1(n2), .A0N(sampled_bit), .A1N(n1), .Y(n24) );
  OAI2BB2X1M U11 ( .B0(n8), .B1(n25), .A0N(P_DATA[0]), .A1N(n25), .Y(n10) );
  INVX2M U12 ( .A(P_DATA[2]), .Y(n7) );
  INVX2M U13 ( .A(P_DATA[6]), .Y(n3) );
  INVX2M U14 ( .A(P_DATA[7]), .Y(n2) );
  INVX2M U15 ( .A(P_DATA[3]), .Y(n6) );
  INVX2M U16 ( .A(P_DATA[1]), .Y(n8) );
  INVX2M U17 ( .A(P_DATA[4]), .Y(n5) );
  INVX2M U26 ( .A(P_DATA[5]), .Y(n4) );
endmodule


module parity_check_DATA_WIDTH8_test_1 ( CLK, RST, P_DATA, PAR_TYP, par_chk_en, 
        sampled_bit, par_error, test_si, test_se );
  input [7:0] P_DATA;
  input CLK, RST, PAR_TYP, par_chk_en, sampled_bit, test_si, test_se;
  output par_error;
  wire   n1, n3, n4, n5, n6, n7, n9, n2;

  SDFFRQX2M par_error_reg ( .D(n9), .SI(test_si), .SE(test_se), .CK(CLK), .RN(
        RST), .Q(par_error) );
  XOR3XLM U2 ( .A(P_DATA[5]), .B(P_DATA[4]), .C(n6), .Y(n4) );
  XNOR2X2M U3 ( .A(P_DATA[7]), .B(P_DATA[6]), .Y(n6) );
  XOR3XLM U4 ( .A(P_DATA[1]), .B(P_DATA[0]), .C(n7), .Y(n3) );
  XNOR2X2M U5 ( .A(P_DATA[3]), .B(P_DATA[2]), .Y(n7) );
  OAI2BB2X1M U6 ( .B0(n1), .B1(n2), .A0N(par_error), .A1N(n2), .Y(n9) );
  INVX2M U7 ( .A(par_chk_en), .Y(n2) );
  XOR3XLM U8 ( .A(n3), .B(n4), .C(n5), .Y(n1) );
  XNOR2X2M U9 ( .A(sampled_bit), .B(PAR_TYP), .Y(n5) );
endmodule


module start_check_test_1 ( CLK, RST, strt_chk_en, sampled_bit, strt_glitch, 
        test_se );
  input CLK, RST, strt_chk_en, sampled_bit, test_se;
  output strt_glitch;
  wire   N4;

  SDFFRQX2M strt_glitch_reg ( .D(N4), .SI(sampled_bit), .SE(test_se), .CK(CLK), 
        .RN(RST), .Q(strt_glitch) );
  AND2X2M U4 ( .A(strt_chk_en), .B(sampled_bit), .Y(N4) );
endmodule


module stop_check_test_1 ( CLK, RST, stp_chk_en, sampled_bit, stp_error, 
        test_si, test_se );
  input CLK, RST, stp_chk_en, sampled_bit, test_si, test_se;
  output stp_error;
  wire   n3, n1;

  SDFFRQX2M stp_error_reg ( .D(n3), .SI(test_si), .SE(test_se), .CK(CLK), .RN(
        RST), .Q(stp_error) );
  OAI2BB2X1M U2 ( .B0(sampled_bit), .B1(n1), .A0N(stp_error), .A1N(n1), .Y(n3)
         );
  INVX2M U3 ( .A(stp_chk_en), .Y(n1) );
endmodule


module UART_RX_DATA_WIDTH8_test_1 ( CLK, RST, RX_IN, PAR_EN, PAR_TYP, Prescale, 
        P_DATA, data_valid, par_error, strt_glitch, stp_error, test_si2, 
        test_si1, test_se );
  input [5:0] Prescale;
  output [7:0] P_DATA;
  input CLK, RST, RX_IN, PAR_EN, PAR_TYP, test_si2, test_si1, test_se;
  output data_valid, par_error, strt_glitch, stp_error;
  wire   bit_done, data_samp_en, enable, par_chk_en, strt_chk_en, stp_chk_en,
         deser_en, sampled_bit, n1, n2, n3, n4, n5;
  wire   [3:0] bit_cnt;
  wire   [5:0] edge_cnt;

  INVX2M U1 ( .A(n2), .Y(n1) );
  INVX2M U2 ( .A(RST), .Y(n2) );
  FSM_RX_test_1 fsm_inst ( .CLK(CLK), .RST(n1), .RX_IN(RX_IN), .PAR_EN(PAR_EN), 
        .bit_done(bit_done), .bit_cnt(bit_cnt), .edge_cnt(edge_cnt), 
        .par_error(par_error), .strt_glitch(strt_glitch), .stp_error(stp_error), .data_samp_en(data_samp_en), .enable(enable), .par_chk_en(par_chk_en), 
        .strt_chk_en(strt_chk_en), .stp_chk_en(stp_chk_en), .deser_en(deser_en), .data_valid(data_valid), .test_si(n4), .test_so(n3), .test_se(test_se) );
  edge_bit_count_test_1 counter_inst ( .CLK(CLK), .RST(n1), .enable(enable), 
        .Prescale(Prescale), .edge_cnt(edge_cnt), .bit_cnt(bit_cnt), 
        .bit_done(bit_done), .test_si(test_si1), .test_so(n5), .test_se(
        test_se) );
  data_sampling_test_1 sampling_inst ( .CLK(CLK), .RST(n1), .RX_IN(RX_IN), 
        .data_samp_en(data_samp_en), .Prescale(Prescale), .edge_cnt(edge_cnt), 
        .sampled_bit(sampled_bit), .test_si(par_error), .test_se(test_se) );
  deserializer_DATA_WIDTH8_test_1 deser_inst ( .CLK(CLK), .RST(n1), .deser_en(
        deser_en), .sampled_bit(sampled_bit), .P_DATA(P_DATA), .test_si(n5), 
        .test_so(n4), .test_se(test_se) );
  parity_check_DATA_WIDTH8_test_1 par_chk ( .CLK(CLK), .RST(n1), .P_DATA(
        P_DATA), .PAR_TYP(PAR_TYP), .par_chk_en(par_chk_en), .sampled_bit(
        sampled_bit), .par_error(par_error), .test_si(n3), .test_se(test_se)
         );
  start_check_test_1 strt_chk ( .CLK(CLK), .RST(n1), .strt_chk_en(strt_chk_en), 
        .sampled_bit(sampled_bit), .strt_glitch(strt_glitch), .test_se(test_se) );
  stop_check_test_1 stp_chk ( .CLK(CLK), .RST(n1), .stp_chk_en(stp_chk_en), 
        .sampled_bit(sampled_bit), .stp_error(stp_error), .test_si(test_si2), 
        .test_se(test_se) );
endmodule


module UART_DATA_WIDTH8_test_1 ( TX_CLK, RX_CLK, RST, PAR_TYP, PAR_EN, 
        Prescale, TX_IN_P, TX_IN_V, RX_IN_S, TX_OUT_S, TX_OUT_V, RX_OUT_V, 
        RX_OUT_P, parity_error, framing_error, test_si, test_se );
  input [5:0] Prescale;
  input [7:0] TX_IN_P;
  output [7:0] RX_OUT_P;
  input TX_CLK, RX_CLK, RST, PAR_TYP, PAR_EN, TX_IN_V, RX_IN_S, test_si,
         test_se;
  output TX_OUT_S, TX_OUT_V, RX_OUT_V, parity_error, framing_error;
  wire   n1, n2, n3, n4;

  INVX2M U1 ( .A(n2), .Y(n1) );
  INVX2M U2 ( .A(RST), .Y(n2) );
  UART_TX_DATA_WIDTH8_test_1 UART_TX_inst ( .P_DATA(TX_IN_P), .PAR_EN(PAR_EN), 
        .Data_Valid(TX_IN_V), .PAR_TYP(PAR_TYP), .CLK(TX_CLK), .RST(n1), 
        .TX_OUT(TX_OUT_S), .busy(TX_OUT_V), .test_si(n4), .test_so(n3), 
        .test_se(test_se) );
  UART_RX_DATA_WIDTH8_test_1 UART_RX_inst ( .CLK(RX_CLK), .RST(n1), .RX_IN(
        RX_IN_S), .PAR_EN(PAR_EN), .PAR_TYP(PAR_TYP), .Prescale(Prescale), 
        .P_DATA(RX_OUT_P), .data_valid(RX_OUT_V), .par_error(parity_error), 
        .strt_glitch(n4), .stp_error(framing_error), .test_si2(n3), .test_si1(
        test_si), .test_se(test_se) );
endmodule


module RegFile_WIDTH8_DEPTH8_ADDR4_test_1 ( clk, rst, Address, WrData, WrEn, 
        RdEn, RdData, RdData_valid, REG0, REG1, REG2, REG3, test_si2, test_si1, 
        test_so1, test_se );
  input [3:0] Address;
  input [7:0] WrData;
  output [7:0] RdData;
  output [7:0] REG0;
  output [7:0] REG1;
  output [7:0] REG2;
  output [7:0] REG3;
  input clk, rst, WrEn, RdEn, test_si2, test_si1, test_se;
  output RdData_valid, test_so1;
  wire   N11, N12, N13, \regArr[7][7] , \regArr[7][6] , \regArr[7][5] ,
         \regArr[7][4] , \regArr[7][3] , \regArr[7][2] , \regArr[7][1] ,
         \regArr[7][0] , \regArr[6][7] , \regArr[6][6] , \regArr[6][5] ,
         \regArr[6][4] , \regArr[6][3] , \regArr[6][2] , \regArr[6][1] ,
         \regArr[6][0] , \regArr[5][7] , \regArr[5][6] , \regArr[5][5] ,
         \regArr[5][4] , \regArr[5][3] , \regArr[5][2] , \regArr[5][1] ,
         \regArr[5][0] , \regArr[4][7] , \regArr[4][6] , \regArr[4][5] ,
         \regArr[4][4] , \regArr[4][3] , \regArr[4][2] , \regArr[4][1] ,
         \regArr[4][0] , N27, N28, N29, N30, N31, N32, N33, N34, n86, n87, n88,
         n89, n90, n91, n92, n93, n94, n95, n96, n97, n98, n99, n100, n101,
         n102, n103, n104, n105, n106, n107, n108, n109, n110, n111, n112,
         n113, n114, n115, n116, n117, n118, n119, n120, n121, n122, n123,
         n124, n125, n126, n127, n128, n129, n130, n131, n132, n133, n134,
         n135, n136, n137, n138, n139, n140, n141, n142, n143, n144, n145,
         n146, n147, n148, n149, n150, n151, n152, n153, n154, n155, n156,
         n157, n158, n159, n160, n161, n162, n163, n164, n165, n166, n167,
         n168, n169, n170, n171, n74, n75, n76, n77, n78, n79, n80, n81, n82,
         n83, n84, n85, n172, n173, n174, n175, n176, n177, n178, n179, n180,
         n181, n182, n183, n184, n185, n186, n187, n188, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n206, n207, n208, n209;
  assign N11 = Address[0];
  assign N12 = Address[1];
  assign N13 = Address[2];
  assign test_so1 = \regArr[7][7] ;

  SDFFRQX2M \regArr_reg[5][7]  ( .D(n155), .SI(\regArr[5][6] ), .SE(n207), 
        .CK(clk), .RN(n189), .Q(\regArr[5][7] ) );
  SDFFRQX2M \regArr_reg[5][6]  ( .D(n154), .SI(\regArr[5][5] ), .SE(test_se), 
        .CK(clk), .RN(n189), .Q(\regArr[5][6] ) );
  SDFFRQX2M \regArr_reg[5][5]  ( .D(n153), .SI(\regArr[5][4] ), .SE(n209), 
        .CK(clk), .RN(n189), .Q(\regArr[5][5] ) );
  SDFFRQX2M \regArr_reg[5][4]  ( .D(n152), .SI(\regArr[5][3] ), .SE(n208), 
        .CK(clk), .RN(n188), .Q(\regArr[5][4] ) );
  SDFFRQX2M \regArr_reg[5][3]  ( .D(n151), .SI(\regArr[5][2] ), .SE(n207), 
        .CK(clk), .RN(n188), .Q(\regArr[5][3] ) );
  SDFFRQX2M \regArr_reg[5][2]  ( .D(n150), .SI(\regArr[5][1] ), .SE(test_se), 
        .CK(clk), .RN(n188), .Q(\regArr[5][2] ) );
  SDFFRQX2M \regArr_reg[5][1]  ( .D(n149), .SI(\regArr[5][0] ), .SE(n209), 
        .CK(clk), .RN(n188), .Q(\regArr[5][1] ) );
  SDFFRQX2M \regArr_reg[5][0]  ( .D(n148), .SI(\regArr[4][7] ), .SE(n208), 
        .CK(clk), .RN(n188), .Q(\regArr[5][0] ) );
  SDFFRQX2M \regArr_reg[7][7]  ( .D(n171), .SI(\regArr[7][6] ), .SE(n207), 
        .CK(clk), .RN(n185), .Q(\regArr[7][7] ) );
  SDFFRQX2M \regArr_reg[7][6]  ( .D(n170), .SI(\regArr[7][5] ), .SE(test_se), 
        .CK(clk), .RN(n190), .Q(\regArr[7][6] ) );
  SDFFRQX2M \regArr_reg[7][5]  ( .D(n169), .SI(\regArr[7][4] ), .SE(n209), 
        .CK(clk), .RN(n190), .Q(\regArr[7][5] ) );
  SDFFRQX2M \regArr_reg[7][4]  ( .D(n168), .SI(\regArr[7][3] ), .SE(n208), 
        .CK(clk), .RN(n190), .Q(\regArr[7][4] ) );
  SDFFRQX2M \regArr_reg[7][3]  ( .D(n167), .SI(\regArr[7][2] ), .SE(n207), 
        .CK(clk), .RN(n190), .Q(\regArr[7][3] ) );
  SDFFRQX2M \regArr_reg[7][2]  ( .D(n166), .SI(\regArr[7][1] ), .SE(test_se), 
        .CK(clk), .RN(n189), .Q(\regArr[7][2] ) );
  SDFFRQX2M \regArr_reg[7][1]  ( .D(n165), .SI(\regArr[7][0] ), .SE(n209), 
        .CK(clk), .RN(n189), .Q(\regArr[7][1] ) );
  SDFFRQX2M \regArr_reg[7][0]  ( .D(n164), .SI(\regArr[6][7] ), .SE(n208), 
        .CK(clk), .RN(n189), .Q(\regArr[7][0] ) );
  SDFFRQX2M \regArr_reg[6][7]  ( .D(n163), .SI(\regArr[6][6] ), .SE(n207), 
        .CK(clk), .RN(n189), .Q(\regArr[6][7] ) );
  SDFFRQX2M \regArr_reg[6][6]  ( .D(n162), .SI(\regArr[6][5] ), .SE(test_se), 
        .CK(clk), .RN(n189), .Q(\regArr[6][6] ) );
  SDFFRQX2M \regArr_reg[6][5]  ( .D(n161), .SI(\regArr[6][4] ), .SE(n209), 
        .CK(clk), .RN(n189), .Q(\regArr[6][5] ) );
  SDFFRQX2M \regArr_reg[6][4]  ( .D(n160), .SI(\regArr[6][3] ), .SE(n208), 
        .CK(clk), .RN(n189), .Q(\regArr[6][4] ) );
  SDFFRQX2M \regArr_reg[6][3]  ( .D(n159), .SI(\regArr[6][2] ), .SE(n207), 
        .CK(clk), .RN(n189), .Q(\regArr[6][3] ) );
  SDFFRQX2M \regArr_reg[6][2]  ( .D(n158), .SI(\regArr[6][1] ), .SE(test_se), 
        .CK(clk), .RN(n189), .Q(\regArr[6][2] ) );
  SDFFRQX2M \regArr_reg[6][1]  ( .D(n157), .SI(\regArr[6][0] ), .SE(n209), 
        .CK(clk), .RN(n189), .Q(\regArr[6][1] ) );
  SDFFRQX2M \regArr_reg[6][0]  ( .D(n156), .SI(\regArr[5][7] ), .SE(n208), 
        .CK(clk), .RN(n189), .Q(\regArr[6][0] ) );
  SDFFRQX2M \regArr_reg[4][7]  ( .D(n147), .SI(\regArr[4][6] ), .SE(n207), 
        .CK(clk), .RN(n188), .Q(\regArr[4][7] ) );
  SDFFRQX2M \regArr_reg[4][6]  ( .D(n146), .SI(\regArr[4][5] ), .SE(test_se), 
        .CK(clk), .RN(n188), .Q(\regArr[4][6] ) );
  SDFFRQX2M \regArr_reg[4][5]  ( .D(n145), .SI(\regArr[4][4] ), .SE(n209), 
        .CK(clk), .RN(n188), .Q(\regArr[4][5] ) );
  SDFFRQX2M \regArr_reg[4][4]  ( .D(n144), .SI(\regArr[4][3] ), .SE(n208), 
        .CK(clk), .RN(n188), .Q(\regArr[4][4] ) );
  SDFFRQX2M \regArr_reg[4][3]  ( .D(n143), .SI(\regArr[4][2] ), .SE(n207), 
        .CK(clk), .RN(n188), .Q(\regArr[4][3] ) );
  SDFFRQX2M \regArr_reg[4][2]  ( .D(n142), .SI(\regArr[4][1] ), .SE(test_se), 
        .CK(clk), .RN(n188), .Q(\regArr[4][2] ) );
  SDFFRQX2M \regArr_reg[4][1]  ( .D(n141), .SI(\regArr[4][0] ), .SE(n209), 
        .CK(clk), .RN(n188), .Q(\regArr[4][1] ) );
  SDFFRQX2M \regArr_reg[4][0]  ( .D(n140), .SI(REG3[7]), .SE(n208), .CK(clk), 
        .RN(n188), .Q(\regArr[4][0] ) );
  SDFFRQX2M \RdData_reg[7]  ( .D(n107), .SI(RdData[6]), .SE(n207), .CK(clk), 
        .RN(n185), .Q(RdData[7]) );
  SDFFRQX2M \RdData_reg[6]  ( .D(n106), .SI(RdData[5]), .SE(test_se), .CK(clk), 
        .RN(n185), .Q(RdData[6]) );
  SDFFRQX2M \RdData_reg[5]  ( .D(n105), .SI(RdData[4]), .SE(n209), .CK(clk), 
        .RN(n185), .Q(RdData[5]) );
  SDFFRQX2M \RdData_reg[4]  ( .D(n104), .SI(RdData[3]), .SE(n208), .CK(clk), 
        .RN(n185), .Q(RdData[4]) );
  SDFFRQX2M \RdData_reg[3]  ( .D(n103), .SI(RdData[2]), .SE(n207), .CK(clk), 
        .RN(n185), .Q(RdData[3]) );
  SDFFRQX2M \RdData_reg[2]  ( .D(n102), .SI(RdData[1]), .SE(test_se), .CK(clk), 
        .RN(n185), .Q(RdData[2]) );
  SDFFRQX2M \RdData_reg[1]  ( .D(n101), .SI(RdData[0]), .SE(n209), .CK(clk), 
        .RN(n185), .Q(RdData[1]) );
  SDFFRQX2M \RdData_reg[0]  ( .D(n100), .SI(test_si1), .SE(n208), .CK(clk), 
        .RN(n185), .Q(RdData[0]) );
  SDFFRQX2M \regArr_reg[1][7]  ( .D(n123), .SI(REG1[6]), .SE(n207), .CK(clk), 
        .RN(n187), .Q(REG1[7]) );
  SDFFRQX2M \regArr_reg[1][6]  ( .D(n122), .SI(REG1[5]), .SE(test_se), .CK(clk), .RN(n186), .Q(REG1[6]) );
  SDFFRQX2M \regArr_reg[1][1]  ( .D(n117), .SI(REG1[0]), .SE(n209), .CK(clk), 
        .RN(n186), .Q(REG1[1]) );
  SDFFRQX2M \regArr_reg[0][7]  ( .D(n115), .SI(REG0[6]), .SE(n208), .CK(clk), 
        .RN(n186), .Q(REG0[7]) );
  SDFFRQX2M \regArr_reg[0][6]  ( .D(n114), .SI(test_si2), .SE(n207), .CK(clk), 
        .RN(n186), .Q(REG0[6]) );
  SDFFRQX2M \regArr_reg[0][5]  ( .D(n113), .SI(REG0[4]), .SE(test_se), .CK(clk), .RN(n186), .Q(REG0[5]) );
  SDFFRQX2M \regArr_reg[0][4]  ( .D(n112), .SI(REG0[3]), .SE(n209), .CK(clk), 
        .RN(n186), .Q(REG0[4]) );
  SDFFRQX2M \regArr_reg[0][3]  ( .D(n111), .SI(REG0[2]), .SE(n208), .CK(clk), 
        .RN(n186), .Q(REG0[3]) );
  SDFFRQX2M \regArr_reg[0][2]  ( .D(n110), .SI(REG0[1]), .SE(n207), .CK(clk), 
        .RN(n186), .Q(REG0[2]) );
  SDFFRQX2M \regArr_reg[0][1]  ( .D(n109), .SI(REG0[0]), .SE(test_se), .CK(clk), .RN(n186), .Q(REG0[1]) );
  SDFFRQX2M \regArr_reg[0][0]  ( .D(n108), .SI(RdData_valid), .SE(n209), .CK(
        clk), .RN(n185), .Q(REG0[0]) );
  SDFFRQX2M \regArr_reg[2][1]  ( .D(n125), .SI(REG2[0]), .SE(n208), .CK(clk), 
        .RN(n187), .Q(REG2[1]) );
  SDFFSQX2M \regArr_reg[2][0]  ( .D(n124), .SI(REG1[7]), .SE(test_se), .CK(clk), .SN(n185), .Q(REG2[0]) );
  SDFFRQX2M \regArr_reg[1][4]  ( .D(n120), .SI(REG1[3]), .SE(n207), .CK(clk), 
        .RN(n186), .Q(REG1[4]) );
  SDFFRQX2M \regArr_reg[1][5]  ( .D(n121), .SI(REG1[4]), .SE(test_se), .CK(clk), .RN(n186), .Q(REG1[5]) );
  SDFFRQX2M RdData_valid_reg ( .D(n99), .SI(RdData[7]), .SE(n209), .CK(clk), 
        .RN(n187), .Q(RdData_valid) );
  SDFFSQX2M \regArr_reg[3][5]  ( .D(n137), .SI(REG3[4]), .SE(n209), .CK(clk), 
        .SN(n185), .Q(REG3[5]) );
  SDFFRQX2M \regArr_reg[3][3]  ( .D(n135), .SI(REG3[2]), .SE(n208), .CK(clk), 
        .RN(n187), .Q(REG3[3]) );
  SDFFRQX2M \regArr_reg[3][4]  ( .D(n136), .SI(REG3[3]), .SE(n207), .CK(clk), 
        .RN(n187), .Q(REG3[4]) );
  SDFFRQX2M \regArr_reg[3][7]  ( .D(n139), .SI(REG3[6]), .SE(test_se), .CK(clk), .RN(n188), .Q(REG3[7]) );
  SDFFRQX2M \regArr_reg[3][6]  ( .D(n138), .SI(REG3[5]), .SE(n209), .CK(clk), 
        .RN(n187), .Q(REG3[6]) );
  SDFFRQX2M \regArr_reg[3][0]  ( .D(n132), .SI(REG2[7]), .SE(n208), .CK(clk), 
        .RN(n187), .Q(REG3[0]) );
  SDFFRQX2M \regArr_reg[3][2]  ( .D(n134), .SI(REG3[1]), .SE(n207), .CK(clk), 
        .RN(n187), .Q(REG3[2]) );
  SDFFRQX2M \regArr_reg[3][1]  ( .D(n133), .SI(REG3[0]), .SE(test_se), .CK(clk), .RN(n187), .Q(REG3[1]) );
  SDFFRQX2M \regArr_reg[2][4]  ( .D(n128), .SI(REG2[3]), .SE(n209), .CK(clk), 
        .RN(n187), .Q(REG2[4]) );
  SDFFRQX2M \regArr_reg[2][2]  ( .D(n126), .SI(REG2[1]), .SE(n208), .CK(clk), 
        .RN(n187), .Q(REG2[2]) );
  SDFFRQX2M \regArr_reg[2][3]  ( .D(n127), .SI(REG2[2]), .SE(n207), .CK(clk), 
        .RN(n187), .Q(REG2[3]) );
  SDFFSQX2M \regArr_reg[2][7]  ( .D(n131), .SI(REG2[6]), .SE(n208), .CK(clk), 
        .SN(n185), .Q(REG2[7]) );
  SDFFRQX2M \regArr_reg[2][5]  ( .D(n129), .SI(REG2[4]), .SE(test_se), .CK(clk), .RN(n187), .Q(REG2[5]) );
  SDFFRQX2M \regArr_reg[2][6]  ( .D(n130), .SI(REG2[5]), .SE(n209), .CK(clk), 
        .RN(n187), .Q(REG2[6]) );
  SDFFRQX2M \regArr_reg[1][2]  ( .D(n118), .SI(REG1[1]), .SE(n208), .CK(clk), 
        .RN(n186), .Q(REG1[2]) );
  SDFFRQX2M \regArr_reg[1][3]  ( .D(n119), .SI(REG1[2]), .SE(n207), .CK(clk), 
        .RN(n186), .Q(REG1[3]) );
  SDFFRQX2M \regArr_reg[1][0]  ( .D(n116), .SI(REG0[7]), .SE(test_se), .CK(clk), .RN(n186), .Q(REG1[0]) );
  INVX2M U76 ( .A(n87), .Y(n191) );
  NAND3X2M U77 ( .A(n201), .B(n202), .C(n95), .Y(n94) );
  NAND3X2M U78 ( .A(n201), .B(n202), .C(n89), .Y(n88) );
  NOR2X2M U79 ( .A(n192), .B(RdEn), .Y(n86) );
  INVX2M U80 ( .A(WrEn), .Y(n192) );
  NAND2X2M U81 ( .A(RdEn), .B(n192), .Y(n87) );
  BUFX2M U82 ( .A(n183), .Y(n186) );
  BUFX2M U83 ( .A(n183), .Y(n187) );
  BUFX2M U84 ( .A(n184), .Y(n188) );
  BUFX2M U85 ( .A(n184), .Y(n189) );
  BUFX2M U86 ( .A(n183), .Y(n185) );
  BUFX2M U87 ( .A(n184), .Y(n190) );
  BUFX4M U88 ( .A(N11), .Y(n176) );
  NOR2BX2M U89 ( .AN(n93), .B(N13), .Y(n89) );
  INVX2M U90 ( .A(N11), .Y(n201) );
  INVX2M U91 ( .A(N12), .Y(n202) );
  AND2X2M U92 ( .A(N13), .B(n93), .Y(n95) );
  BUFX2M U93 ( .A(n90), .Y(n182) );
  NAND3X2M U94 ( .A(n89), .B(n202), .C(N11), .Y(n90) );
  BUFX2M U95 ( .A(n98), .Y(n177) );
  NAND3X2M U96 ( .A(N12), .B(N11), .C(n95), .Y(n98) );
  BUFX2M U97 ( .A(n92), .Y(n180) );
  NAND3X2M U98 ( .A(N11), .B(n89), .C(N12), .Y(n92) );
  BUFX2M U99 ( .A(n96), .Y(n179) );
  NAND3X2M U100 ( .A(N11), .B(n202), .C(n95), .Y(n96) );
  BUFX2M U101 ( .A(n91), .Y(n181) );
  NAND3X2M U102 ( .A(n89), .B(n201), .C(N12), .Y(n91) );
  BUFX2M U103 ( .A(n97), .Y(n178) );
  NAND3X2M U104 ( .A(N12), .B(n201), .C(n95), .Y(n97) );
  BUFX2M U105 ( .A(rst), .Y(n184) );
  BUFX2M U106 ( .A(rst), .Y(n183) );
  AO22X1M U107 ( .A0(N34), .A1(n191), .B0(RdData[0]), .B1(n87), .Y(n100) );
  MX2X2M U108 ( .A(n75), .B(n74), .S0(N13), .Y(N34) );
  MX4X1M U109 ( .A(REG0[0]), .B(REG1[0]), .C(REG2[0]), .D(REG3[0]), .S0(n176), 
        .S1(N12), .Y(n75) );
  MX4X1M U110 ( .A(\regArr[4][0] ), .B(\regArr[5][0] ), .C(\regArr[6][0] ), 
        .D(\regArr[7][0] ), .S0(n176), .S1(N12), .Y(n74) );
  AO22X1M U111 ( .A0(N33), .A1(n191), .B0(RdData[1]), .B1(n87), .Y(n101) );
  MX2X2M U112 ( .A(n77), .B(n76), .S0(N13), .Y(N33) );
  MX4X1M U113 ( .A(REG0[1]), .B(REG1[1]), .C(REG2[1]), .D(REG3[1]), .S0(n176), 
        .S1(N12), .Y(n77) );
  MX4X1M U114 ( .A(\regArr[4][1] ), .B(\regArr[5][1] ), .C(\regArr[6][1] ), 
        .D(\regArr[7][1] ), .S0(n176), .S1(N12), .Y(n76) );
  AO22X1M U115 ( .A0(N32), .A1(n191), .B0(RdData[2]), .B1(n87), .Y(n102) );
  MX2X2M U116 ( .A(n79), .B(n78), .S0(N13), .Y(N32) );
  MX4X1M U117 ( .A(REG0[2]), .B(REG1[2]), .C(REG2[2]), .D(REG3[2]), .S0(n176), 
        .S1(N12), .Y(n79) );
  MX4X1M U118 ( .A(\regArr[4][2] ), .B(\regArr[5][2] ), .C(\regArr[6][2] ), 
        .D(\regArr[7][2] ), .S0(n176), .S1(N12), .Y(n78) );
  AO22X1M U119 ( .A0(N31), .A1(n191), .B0(RdData[3]), .B1(n87), .Y(n103) );
  MX2X2M U120 ( .A(n81), .B(n80), .S0(N13), .Y(N31) );
  MX4X1M U121 ( .A(REG0[3]), .B(REG1[3]), .C(REG2[3]), .D(REG3[3]), .S0(n176), 
        .S1(N12), .Y(n81) );
  MX4X1M U122 ( .A(\regArr[4][3] ), .B(\regArr[5][3] ), .C(\regArr[6][3] ), 
        .D(\regArr[7][3] ), .S0(n176), .S1(N12), .Y(n80) );
  AO22X1M U123 ( .A0(N30), .A1(n191), .B0(RdData[4]), .B1(n87), .Y(n104) );
  MX2X2M U124 ( .A(n83), .B(n82), .S0(N13), .Y(N30) );
  MX4X1M U125 ( .A(REG0[4]), .B(REG1[4]), .C(REG2[4]), .D(REG3[4]), .S0(n176), 
        .S1(N12), .Y(n83) );
  MX4X1M U126 ( .A(\regArr[4][4] ), .B(\regArr[5][4] ), .C(\regArr[6][4] ), 
        .D(\regArr[7][4] ), .S0(n176), .S1(N12), .Y(n82) );
  AO22X1M U127 ( .A0(N29), .A1(n191), .B0(RdData[5]), .B1(n87), .Y(n105) );
  MX2X2M U128 ( .A(n85), .B(n84), .S0(N13), .Y(N29) );
  MX4X1M U129 ( .A(REG0[5]), .B(REG1[5]), .C(REG2[5]), .D(REG3[5]), .S0(n176), 
        .S1(N12), .Y(n85) );
  MX4X1M U130 ( .A(\regArr[4][5] ), .B(\regArr[5][5] ), .C(\regArr[6][5] ), 
        .D(\regArr[7][5] ), .S0(n176), .S1(N12), .Y(n84) );
  AO22X1M U131 ( .A0(N28), .A1(n191), .B0(RdData[6]), .B1(n87), .Y(n106) );
  MX2X2M U132 ( .A(n173), .B(n172), .S0(N13), .Y(N28) );
  MX4X1M U133 ( .A(REG0[6]), .B(REG1[6]), .C(REG2[6]), .D(REG3[6]), .S0(n176), 
        .S1(N12), .Y(n173) );
  MX4X1M U134 ( .A(\regArr[4][6] ), .B(\regArr[5][6] ), .C(\regArr[6][6] ), 
        .D(\regArr[7][6] ), .S0(n176), .S1(N12), .Y(n172) );
  AO22X1M U135 ( .A0(N27), .A1(n191), .B0(RdData[7]), .B1(n87), .Y(n107) );
  MX2X2M U136 ( .A(n175), .B(n174), .S0(N13), .Y(N27) );
  MX4X1M U137 ( .A(REG0[7]), .B(REG1[7]), .C(REG2[7]), .D(REG3[7]), .S0(n176), 
        .S1(N12), .Y(n175) );
  MX4X1M U138 ( .A(\regArr[4][7] ), .B(\regArr[5][7] ), .C(\regArr[6][7] ), 
        .D(\regArr[7][7] ), .S0(n176), .S1(N12), .Y(n174) );
  OAI2BB2X1M U139 ( .B0(n88), .B1(n193), .A0N(REG0[0]), .A1N(n88), .Y(n108) );
  OAI2BB2X1M U140 ( .B0(n88), .B1(n194), .A0N(REG0[1]), .A1N(n88), .Y(n109) );
  OAI2BB2X1M U141 ( .B0(n88), .B1(n195), .A0N(REG0[2]), .A1N(n88), .Y(n110) );
  OAI2BB2X1M U142 ( .B0(n88), .B1(n196), .A0N(REG0[3]), .A1N(n88), .Y(n111) );
  OAI2BB2X1M U143 ( .B0(n88), .B1(n197), .A0N(REG0[4]), .A1N(n88), .Y(n112) );
  OAI2BB2X1M U144 ( .B0(n88), .B1(n198), .A0N(REG0[5]), .A1N(n88), .Y(n113) );
  OAI2BB2X1M U145 ( .B0(n88), .B1(n199), .A0N(REG0[6]), .A1N(n88), .Y(n114) );
  OAI2BB2X1M U146 ( .B0(n88), .B1(n200), .A0N(REG0[7]), .A1N(n88), .Y(n115) );
  OAI2BB2X1M U147 ( .B0(n193), .B1(n94), .A0N(\regArr[4][0] ), .A1N(n94), .Y(
        n140) );
  OAI2BB2X1M U148 ( .B0(n194), .B1(n94), .A0N(\regArr[4][1] ), .A1N(n94), .Y(
        n141) );
  OAI2BB2X1M U149 ( .B0(n195), .B1(n94), .A0N(\regArr[4][2] ), .A1N(n94), .Y(
        n142) );
  OAI2BB2X1M U150 ( .B0(n196), .B1(n94), .A0N(\regArr[4][3] ), .A1N(n94), .Y(
        n143) );
  OAI2BB2X1M U151 ( .B0(n197), .B1(n94), .A0N(\regArr[4][4] ), .A1N(n94), .Y(
        n144) );
  OAI2BB2X1M U152 ( .B0(n198), .B1(n94), .A0N(\regArr[4][5] ), .A1N(n94), .Y(
        n145) );
  OAI2BB2X1M U153 ( .B0(n199), .B1(n94), .A0N(\regArr[4][6] ), .A1N(n94), .Y(
        n146) );
  OAI2BB2X1M U154 ( .B0(n200), .B1(n94), .A0N(\regArr[4][7] ), .A1N(n94), .Y(
        n147) );
  OAI2BB2X1M U155 ( .B0(n193), .B1(n182), .A0N(REG1[0]), .A1N(n182), .Y(n116)
         );
  OAI2BB2X1M U156 ( .B0(n194), .B1(n182), .A0N(REG1[1]), .A1N(n182), .Y(n117)
         );
  OAI2BB2X1M U157 ( .B0(n195), .B1(n182), .A0N(REG1[2]), .A1N(n182), .Y(n118)
         );
  OAI2BB2X1M U158 ( .B0(n196), .B1(n182), .A0N(REG1[3]), .A1N(n182), .Y(n119)
         );
  OAI2BB2X1M U159 ( .B0(n197), .B1(n182), .A0N(REG1[4]), .A1N(n182), .Y(n120)
         );
  OAI2BB2X1M U160 ( .B0(n198), .B1(n182), .A0N(REG1[5]), .A1N(n182), .Y(n121)
         );
  OAI2BB2X1M U161 ( .B0(n199), .B1(n182), .A0N(REG1[6]), .A1N(n182), .Y(n122)
         );
  OAI2BB2X1M U162 ( .B0(n200), .B1(n182), .A0N(REG1[7]), .A1N(n182), .Y(n123)
         );
  OAI2BB2X1M U163 ( .B0(n194), .B1(n181), .A0N(REG2[1]), .A1N(n181), .Y(n125)
         );
  OAI2BB2X1M U164 ( .B0(n195), .B1(n181), .A0N(REG2[2]), .A1N(n181), .Y(n126)
         );
  OAI2BB2X1M U165 ( .B0(n196), .B1(n181), .A0N(REG2[3]), .A1N(n181), .Y(n127)
         );
  OAI2BB2X1M U166 ( .B0(n197), .B1(n181), .A0N(REG2[4]), .A1N(n181), .Y(n128)
         );
  OAI2BB2X1M U167 ( .B0(n198), .B1(n181), .A0N(REG2[5]), .A1N(n181), .Y(n129)
         );
  OAI2BB2X1M U168 ( .B0(n199), .B1(n181), .A0N(REG2[6]), .A1N(n181), .Y(n130)
         );
  OAI2BB2X1M U169 ( .B0(n193), .B1(n180), .A0N(REG3[0]), .A1N(n180), .Y(n132)
         );
  OAI2BB2X1M U170 ( .B0(n194), .B1(n180), .A0N(REG3[1]), .A1N(n180), .Y(n133)
         );
  OAI2BB2X1M U171 ( .B0(n195), .B1(n180), .A0N(REG3[2]), .A1N(n180), .Y(n134)
         );
  OAI2BB2X1M U172 ( .B0(n196), .B1(n180), .A0N(REG3[3]), .A1N(n180), .Y(n135)
         );
  OAI2BB2X1M U173 ( .B0(n197), .B1(n180), .A0N(REG3[4]), .A1N(n180), .Y(n136)
         );
  OAI2BB2X1M U174 ( .B0(n199), .B1(n180), .A0N(REG3[6]), .A1N(n180), .Y(n138)
         );
  OAI2BB2X1M U175 ( .B0(n200), .B1(n180), .A0N(REG3[7]), .A1N(n180), .Y(n139)
         );
  OAI2BB2X1M U176 ( .B0(n193), .B1(n179), .A0N(\regArr[5][0] ), .A1N(n179), 
        .Y(n148) );
  OAI2BB2X1M U177 ( .B0(n194), .B1(n179), .A0N(\regArr[5][1] ), .A1N(n179), 
        .Y(n149) );
  OAI2BB2X1M U178 ( .B0(n195), .B1(n179), .A0N(\regArr[5][2] ), .A1N(n179), 
        .Y(n150) );
  OAI2BB2X1M U179 ( .B0(n196), .B1(n179), .A0N(\regArr[5][3] ), .A1N(n179), 
        .Y(n151) );
  OAI2BB2X1M U180 ( .B0(n197), .B1(n179), .A0N(\regArr[5][4] ), .A1N(n179), 
        .Y(n152) );
  OAI2BB2X1M U181 ( .B0(n198), .B1(n179), .A0N(\regArr[5][5] ), .A1N(n179), 
        .Y(n153) );
  OAI2BB2X1M U182 ( .B0(n199), .B1(n179), .A0N(\regArr[5][6] ), .A1N(n179), 
        .Y(n154) );
  OAI2BB2X1M U183 ( .B0(n200), .B1(n179), .A0N(\regArr[5][7] ), .A1N(n179), 
        .Y(n155) );
  OAI2BB2X1M U184 ( .B0(n193), .B1(n178), .A0N(\regArr[6][0] ), .A1N(n178), 
        .Y(n156) );
  OAI2BB2X1M U185 ( .B0(n194), .B1(n178), .A0N(\regArr[6][1] ), .A1N(n178), 
        .Y(n157) );
  OAI2BB2X1M U186 ( .B0(n195), .B1(n178), .A0N(\regArr[6][2] ), .A1N(n178), 
        .Y(n158) );
  OAI2BB2X1M U187 ( .B0(n196), .B1(n178), .A0N(\regArr[6][3] ), .A1N(n178), 
        .Y(n159) );
  OAI2BB2X1M U188 ( .B0(n197), .B1(n178), .A0N(\regArr[6][4] ), .A1N(n178), 
        .Y(n160) );
  OAI2BB2X1M U189 ( .B0(n198), .B1(n178), .A0N(\regArr[6][5] ), .A1N(n178), 
        .Y(n161) );
  OAI2BB2X1M U190 ( .B0(n199), .B1(n178), .A0N(\regArr[6][6] ), .A1N(n178), 
        .Y(n162) );
  OAI2BB2X1M U191 ( .B0(n200), .B1(n178), .A0N(\regArr[6][7] ), .A1N(n178), 
        .Y(n163) );
  OAI2BB2X1M U192 ( .B0(n193), .B1(n177), .A0N(\regArr[7][0] ), .A1N(n177), 
        .Y(n164) );
  OAI2BB2X1M U193 ( .B0(n194), .B1(n177), .A0N(\regArr[7][1] ), .A1N(n177), 
        .Y(n165) );
  OAI2BB2X1M U194 ( .B0(n195), .B1(n177), .A0N(\regArr[7][2] ), .A1N(n177), 
        .Y(n166) );
  OAI2BB2X1M U195 ( .B0(n196), .B1(n177), .A0N(\regArr[7][3] ), .A1N(n177), 
        .Y(n167) );
  OAI2BB2X1M U196 ( .B0(n197), .B1(n177), .A0N(\regArr[7][4] ), .A1N(n177), 
        .Y(n168) );
  OAI2BB2X1M U197 ( .B0(n198), .B1(n177), .A0N(\regArr[7][5] ), .A1N(n177), 
        .Y(n169) );
  OAI2BB2X1M U198 ( .B0(n199), .B1(n177), .A0N(\regArr[7][6] ), .A1N(n177), 
        .Y(n170) );
  OAI2BB2X1M U199 ( .B0(n200), .B1(n177), .A0N(\regArr[7][7] ), .A1N(n177), 
        .Y(n171) );
  OAI2BB2X1M U200 ( .B0(n193), .B1(n181), .A0N(REG2[0]), .A1N(n181), .Y(n124)
         );
  OAI2BB2X1M U201 ( .B0(n200), .B1(n181), .A0N(REG2[7]), .A1N(n181), .Y(n131)
         );
  OAI2BB2X1M U202 ( .B0(n198), .B1(n180), .A0N(REG3[5]), .A1N(n180), .Y(n137)
         );
  NOR2BX2M U203 ( .AN(n86), .B(Address[3]), .Y(n93) );
  INVX2M U204 ( .A(WrData[0]), .Y(n193) );
  INVX2M U205 ( .A(WrData[1]), .Y(n194) );
  INVX2M U206 ( .A(WrData[2]), .Y(n195) );
  INVX2M U207 ( .A(WrData[3]), .Y(n196) );
  INVX2M U208 ( .A(WrData[4]), .Y(n197) );
  INVX2M U209 ( .A(WrData[5]), .Y(n198) );
  INVX2M U210 ( .A(WrData[6]), .Y(n199) );
  INVX2M U211 ( .A(WrData[7]), .Y(n200) );
  OAI2B1X2M U212 ( .A1N(RdData_valid), .A0(n86), .B0(n87), .Y(n99) );
  INVXLM U213 ( .A(test_se), .Y(n206) );
  INVXLM U214 ( .A(n206), .Y(n207) );
  INVXLM U215 ( .A(n206), .Y(n208) );
  INVXLM U216 ( .A(n206), .Y(n209) );
endmodule


module ALU_OPER_WIDTH8_OUT_WIDTH16_DW_div_uns_0 ( a, b, quotient, remainder, 
        divide_by_0 );
  input [7:0] a;
  input [7:0] b;
  output [7:0] quotient;
  output [7:0] remainder;
  output divide_by_0;
  wire   \u_div/SumTmp[1][0] , \u_div/SumTmp[1][1] , \u_div/SumTmp[1][2] ,
         \u_div/SumTmp[1][3] , \u_div/SumTmp[1][4] , \u_div/SumTmp[1][5] ,
         \u_div/SumTmp[1][6] , \u_div/SumTmp[2][0] , \u_div/SumTmp[2][1] ,
         \u_div/SumTmp[2][2] , \u_div/SumTmp[2][3] , \u_div/SumTmp[2][4] ,
         \u_div/SumTmp[2][5] , \u_div/SumTmp[3][0] , \u_div/SumTmp[3][1] ,
         \u_div/SumTmp[3][2] , \u_div/SumTmp[3][3] , \u_div/SumTmp[3][4] ,
         \u_div/SumTmp[4][0] , \u_div/SumTmp[4][1] , \u_div/SumTmp[4][2] ,
         \u_div/SumTmp[4][3] , \u_div/SumTmp[5][0] , \u_div/SumTmp[5][1] ,
         \u_div/SumTmp[5][2] , \u_div/SumTmp[6][0] , \u_div/SumTmp[6][1] ,
         \u_div/SumTmp[7][0] , \u_div/CryTmp[0][1] , \u_div/CryTmp[0][2] ,
         \u_div/CryTmp[0][3] , \u_div/CryTmp[0][4] , \u_div/CryTmp[0][5] ,
         \u_div/CryTmp[0][6] , \u_div/CryTmp[0][7] , \u_div/CryTmp[1][1] ,
         \u_div/CryTmp[1][2] , \u_div/CryTmp[1][3] , \u_div/CryTmp[1][4] ,
         \u_div/CryTmp[1][5] , \u_div/CryTmp[1][6] , \u_div/CryTmp[1][7] ,
         \u_div/CryTmp[2][1] , \u_div/CryTmp[2][2] , \u_div/CryTmp[2][3] ,
         \u_div/CryTmp[2][4] , \u_div/CryTmp[2][5] , \u_div/CryTmp[2][6] ,
         \u_div/CryTmp[3][1] , \u_div/CryTmp[3][2] , \u_div/CryTmp[3][3] ,
         \u_div/CryTmp[3][4] , \u_div/CryTmp[3][5] , \u_div/CryTmp[4][1] ,
         \u_div/CryTmp[4][2] , \u_div/CryTmp[4][3] , \u_div/CryTmp[4][4] ,
         \u_div/CryTmp[5][1] , \u_div/CryTmp[5][2] , \u_div/CryTmp[5][3] ,
         \u_div/CryTmp[6][1] , \u_div/CryTmp[6][2] , \u_div/CryTmp[7][1] ,
         \u_div/PartRem[1][1] , \u_div/PartRem[1][2] , \u_div/PartRem[1][3] ,
         \u_div/PartRem[1][4] , \u_div/PartRem[1][5] , \u_div/PartRem[1][6] ,
         \u_div/PartRem[1][7] , \u_div/PartRem[2][1] , \u_div/PartRem[2][2] ,
         \u_div/PartRem[2][3] , \u_div/PartRem[2][4] , \u_div/PartRem[2][5] ,
         \u_div/PartRem[2][6] , \u_div/PartRem[3][1] , \u_div/PartRem[3][2] ,
         \u_div/PartRem[3][3] , \u_div/PartRem[3][4] , \u_div/PartRem[3][5] ,
         \u_div/PartRem[4][1] , \u_div/PartRem[4][2] , \u_div/PartRem[4][3] ,
         \u_div/PartRem[4][4] , \u_div/PartRem[5][1] , \u_div/PartRem[5][2] ,
         \u_div/PartRem[5][3] , \u_div/PartRem[6][1] , \u_div/PartRem[6][2] ,
         \u_div/PartRem[7][1] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11,
         n12, n13, n14, n15, n16, n17, n18, n19, n20, n21;

  ADDFX2M \u_div/u_fa_PartRem_0_2_5  ( .A(\u_div/PartRem[3][5] ), .B(n13), 
        .CI(\u_div/CryTmp[2][5] ), .CO(\u_div/CryTmp[2][6] ), .S(
        \u_div/SumTmp[2][5] ) );
  ADDFX2M \u_div/u_fa_PartRem_0_4_3  ( .A(\u_div/PartRem[5][3] ), .B(n15), 
        .CI(\u_div/CryTmp[4][3] ), .CO(\u_div/CryTmp[4][4] ), .S(
        \u_div/SumTmp[4][3] ) );
  ADDFX2M \u_div/u_fa_PartRem_0_5_2  ( .A(\u_div/PartRem[6][2] ), .B(n16), 
        .CI(\u_div/CryTmp[5][2] ), .CO(\u_div/CryTmp[5][3] ), .S(
        \u_div/SumTmp[5][2] ) );
  ADDFX2M \u_div/u_fa_PartRem_0_6_1  ( .A(\u_div/PartRem[7][1] ), .B(n17), 
        .CI(\u_div/CryTmp[6][1] ), .CO(\u_div/CryTmp[6][2] ), .S(
        \u_div/SumTmp[6][1] ) );
  ADDFX2M \u_div/u_fa_PartRem_0_3_4  ( .A(\u_div/PartRem[4][4] ), .B(n14), 
        .CI(\u_div/CryTmp[3][4] ), .CO(\u_div/CryTmp[3][5] ), .S(
        \u_div/SumTmp[3][4] ) );
  ADDFX2M \u_div/u_fa_PartRem_0_0_6  ( .A(\u_div/PartRem[1][6] ), .B(n12), 
        .CI(\u_div/CryTmp[0][6] ), .CO(\u_div/CryTmp[0][7] ) );
  ADDFX2M \u_div/u_fa_PartRem_0_0_7  ( .A(\u_div/PartRem[1][7] ), .B(n11), 
        .CI(\u_div/CryTmp[0][7] ), .CO(quotient[0]) );
  ADDFX2M \u_div/u_fa_PartRem_0_1_1  ( .A(\u_div/PartRem[2][1] ), .B(n17), 
        .CI(\u_div/CryTmp[1][1] ), .CO(\u_div/CryTmp[1][2] ), .S(
        \u_div/SumTmp[1][1] ) );
  ADDFX2M \u_div/u_fa_PartRem_0_2_1  ( .A(\u_div/PartRem[3][1] ), .B(n17), 
        .CI(\u_div/CryTmp[2][1] ), .CO(\u_div/CryTmp[2][2] ), .S(
        \u_div/SumTmp[2][1] ) );
  ADDFX2M \u_div/u_fa_PartRem_0_3_1  ( .A(\u_div/PartRem[4][1] ), .B(n17), 
        .CI(\u_div/CryTmp[3][1] ), .CO(\u_div/CryTmp[3][2] ), .S(
        \u_div/SumTmp[3][1] ) );
  ADDFX2M \u_div/u_fa_PartRem_0_4_1  ( .A(\u_div/PartRem[5][1] ), .B(n17), 
        .CI(\u_div/CryTmp[4][1] ), .CO(\u_div/CryTmp[4][2] ), .S(
        \u_div/SumTmp[4][1] ) );
  ADDFX2M \u_div/u_fa_PartRem_0_5_1  ( .A(\u_div/PartRem[6][1] ), .B(n17), 
        .CI(\u_div/CryTmp[5][1] ), .CO(\u_div/CryTmp[5][2] ), .S(
        \u_div/SumTmp[5][1] ) );
  ADDFX2M \u_div/u_fa_PartRem_0_0_3  ( .A(\u_div/PartRem[1][3] ), .B(n15), 
        .CI(\u_div/CryTmp[0][3] ), .CO(\u_div/CryTmp[0][4] ) );
  ADDFX2M \u_div/u_fa_PartRem_0_0_4  ( .A(\u_div/PartRem[1][4] ), .B(n14), 
        .CI(\u_div/CryTmp[0][4] ), .CO(\u_div/CryTmp[0][5] ) );
  ADDFX2M \u_div/u_fa_PartRem_0_0_5  ( .A(\u_div/PartRem[1][5] ), .B(n13), 
        .CI(\u_div/CryTmp[0][5] ), .CO(\u_div/CryTmp[0][6] ) );
  ADDFX2M \u_div/u_fa_PartRem_0_1_4  ( .A(\u_div/PartRem[2][4] ), .B(n14), 
        .CI(\u_div/CryTmp[1][4] ), .CO(\u_div/CryTmp[1][5] ), .S(
        \u_div/SumTmp[1][4] ) );
  ADDFX2M \u_div/u_fa_PartRem_0_0_1  ( .A(\u_div/PartRem[1][1] ), .B(n17), 
        .CI(\u_div/CryTmp[0][1] ), .CO(\u_div/CryTmp[0][2] ) );
  ADDFX2M \u_div/u_fa_PartRem_0_0_2  ( .A(\u_div/PartRem[1][2] ), .B(n16), 
        .CI(\u_div/CryTmp[0][2] ), .CO(\u_div/CryTmp[0][3] ) );
  ADDFX2M \u_div/u_fa_PartRem_0_1_3  ( .A(\u_div/PartRem[2][3] ), .B(n15), 
        .CI(\u_div/CryTmp[1][3] ), .CO(\u_div/CryTmp[1][4] ), .S(
        \u_div/SumTmp[1][3] ) );
  ADDFX2M \u_div/u_fa_PartRem_0_1_5  ( .A(\u_div/PartRem[2][5] ), .B(n13), 
        .CI(\u_div/CryTmp[1][5] ), .CO(\u_div/CryTmp[1][6] ), .S(
        \u_div/SumTmp[1][5] ) );
  ADDFX2M \u_div/u_fa_PartRem_0_1_2  ( .A(\u_div/PartRem[2][2] ), .B(n16), 
        .CI(\u_div/CryTmp[1][2] ), .CO(\u_div/CryTmp[1][3] ), .S(
        \u_div/SumTmp[1][2] ) );
  ADDFX2M \u_div/u_fa_PartRem_0_2_4  ( .A(\u_div/PartRem[3][4] ), .B(n14), 
        .CI(\u_div/CryTmp[2][4] ), .CO(\u_div/CryTmp[2][5] ), .S(
        \u_div/SumTmp[2][4] ) );
  ADDFX2M \u_div/u_fa_PartRem_0_2_3  ( .A(\u_div/PartRem[3][3] ), .B(n15), 
        .CI(\u_div/CryTmp[2][3] ), .CO(\u_div/CryTmp[2][4] ), .S(
        \u_div/SumTmp[2][3] ) );
  ADDFX2M \u_div/u_fa_PartRem_0_2_2  ( .A(\u_div/PartRem[3][2] ), .B(n16), 
        .CI(\u_div/CryTmp[2][2] ), .CO(\u_div/CryTmp[2][3] ), .S(
        \u_div/SumTmp[2][2] ) );
  ADDFX2M \u_div/u_fa_PartRem_0_3_3  ( .A(\u_div/PartRem[4][3] ), .B(n15), 
        .CI(\u_div/CryTmp[3][3] ), .CO(\u_div/CryTmp[3][4] ), .S(
        \u_div/SumTmp[3][3] ) );
  ADDFX2M \u_div/u_fa_PartRem_0_3_2  ( .A(\u_div/PartRem[4][2] ), .B(n16), 
        .CI(\u_div/CryTmp[3][2] ), .CO(\u_div/CryTmp[3][3] ), .S(
        \u_div/SumTmp[3][2] ) );
  ADDFX2M \u_div/u_fa_PartRem_0_4_2  ( .A(\u_div/PartRem[5][2] ), .B(n16), 
        .CI(\u_div/CryTmp[4][2] ), .CO(\u_div/CryTmp[4][3] ), .S(
        \u_div/SumTmp[4][2] ) );
  ADDFX2M \u_div/u_fa_PartRem_0_1_6  ( .A(\u_div/PartRem[2][6] ), .B(n12), 
        .CI(\u_div/CryTmp[1][6] ), .CO(\u_div/CryTmp[1][7] ), .S(
        \u_div/SumTmp[1][6] ) );
  INVX2M U1 ( .A(b[0]), .Y(n18) );
  XNOR2X2M U2 ( .A(n18), .B(a[7]), .Y(\u_div/SumTmp[7][0] ) );
  XNOR2X2M U3 ( .A(n18), .B(a[6]), .Y(\u_div/SumTmp[6][0] ) );
  XNOR2X2M U4 ( .A(n18), .B(a[5]), .Y(\u_div/SumTmp[5][0] ) );
  XNOR2X2M U5 ( .A(n18), .B(a[4]), .Y(\u_div/SumTmp[4][0] ) );
  XNOR2X2M U6 ( .A(n18), .B(a[3]), .Y(\u_div/SumTmp[3][0] ) );
  XNOR2X2M U7 ( .A(n18), .B(a[2]), .Y(\u_div/SumTmp[2][0] ) );
  XNOR2X2M U8 ( .A(n18), .B(a[1]), .Y(\u_div/SumTmp[1][0] ) );
  OR2X2M U9 ( .A(n18), .B(a[7]), .Y(\u_div/CryTmp[7][1] ) );
  INVX2M U10 ( .A(b[1]), .Y(n17) );
  NAND2X2M U11 ( .A(n2), .B(n10), .Y(\u_div/CryTmp[0][1] ) );
  NAND2X2M U12 ( .A(n2), .B(n3), .Y(\u_div/CryTmp[5][1] ) );
  INVX2M U13 ( .A(a[5]), .Y(n3) );
  INVX2M U14 ( .A(n18), .Y(n2) );
  NAND2X2M U15 ( .A(n4), .B(n5), .Y(\u_div/CryTmp[4][1] ) );
  INVX2M U16 ( .A(a[4]), .Y(n5) );
  INVX2M U17 ( .A(n18), .Y(n4) );
  NAND2X2M U18 ( .A(n6), .B(n7), .Y(\u_div/CryTmp[3][1] ) );
  INVX2M U19 ( .A(a[3]), .Y(n7) );
  INVX2M U20 ( .A(n18), .Y(n6) );
  NAND2X2M U21 ( .A(n6), .B(n8), .Y(\u_div/CryTmp[2][1] ) );
  INVX2M U22 ( .A(a[2]), .Y(n8) );
  NAND2X2M U23 ( .A(n4), .B(n9), .Y(\u_div/CryTmp[1][1] ) );
  INVX2M U24 ( .A(a[1]), .Y(n9) );
  NAND2X2M U25 ( .A(n2), .B(n1), .Y(\u_div/CryTmp[6][1] ) );
  INVX2M U26 ( .A(a[6]), .Y(n1) );
  INVX2M U27 ( .A(b[6]), .Y(n12) );
  INVX2M U28 ( .A(a[0]), .Y(n10) );
  INVX2M U29 ( .A(b[7]), .Y(n11) );
  INVX2M U30 ( .A(b[2]), .Y(n16) );
  INVX2M U31 ( .A(b[3]), .Y(n15) );
  INVX2M U32 ( .A(b[4]), .Y(n14) );
  INVX2M U33 ( .A(b[5]), .Y(n13) );
  CLKMX2X2M U34 ( .A(\u_div/PartRem[2][6] ), .B(\u_div/SumTmp[1][6] ), .S0(
        quotient[1]), .Y(\u_div/PartRem[1][7] ) );
  CLKMX2X2M U35 ( .A(\u_div/PartRem[3][5] ), .B(\u_div/SumTmp[2][5] ), .S0(
        quotient[2]), .Y(\u_div/PartRem[2][6] ) );
  CLKMX2X2M U36 ( .A(\u_div/PartRem[4][4] ), .B(\u_div/SumTmp[3][4] ), .S0(
        quotient[3]), .Y(\u_div/PartRem[3][5] ) );
  CLKMX2X2M U37 ( .A(\u_div/PartRem[5][3] ), .B(\u_div/SumTmp[4][3] ), .S0(
        quotient[4]), .Y(\u_div/PartRem[4][4] ) );
  CLKMX2X2M U38 ( .A(\u_div/PartRem[6][2] ), .B(\u_div/SumTmp[5][2] ), .S0(
        quotient[5]), .Y(\u_div/PartRem[5][3] ) );
  CLKMX2X2M U39 ( .A(\u_div/PartRem[7][1] ), .B(\u_div/SumTmp[6][1] ), .S0(
        quotient[6]), .Y(\u_div/PartRem[6][2] ) );
  CLKMX2X2M U40 ( .A(a[7]), .B(\u_div/SumTmp[7][0] ), .S0(quotient[7]), .Y(
        \u_div/PartRem[7][1] ) );
  CLKMX2X2M U41 ( .A(\u_div/PartRem[2][5] ), .B(\u_div/SumTmp[1][5] ), .S0(
        quotient[1]), .Y(\u_div/PartRem[1][6] ) );
  CLKMX2X2M U42 ( .A(\u_div/PartRem[3][4] ), .B(\u_div/SumTmp[2][4] ), .S0(
        quotient[2]), .Y(\u_div/PartRem[2][5] ) );
  CLKMX2X2M U43 ( .A(\u_div/PartRem[4][3] ), .B(\u_div/SumTmp[3][3] ), .S0(
        quotient[3]), .Y(\u_div/PartRem[3][4] ) );
  CLKMX2X2M U44 ( .A(\u_div/PartRem[5][2] ), .B(\u_div/SumTmp[4][2] ), .S0(
        quotient[4]), .Y(\u_div/PartRem[4][3] ) );
  CLKMX2X2M U45 ( .A(\u_div/PartRem[6][1] ), .B(\u_div/SumTmp[5][1] ), .S0(
        quotient[5]), .Y(\u_div/PartRem[5][2] ) );
  CLKMX2X2M U46 ( .A(a[6]), .B(\u_div/SumTmp[6][0] ), .S0(quotient[6]), .Y(
        \u_div/PartRem[6][1] ) );
  CLKMX2X2M U47 ( .A(\u_div/PartRem[2][4] ), .B(\u_div/SumTmp[1][4] ), .S0(
        quotient[1]), .Y(\u_div/PartRem[1][5] ) );
  CLKMX2X2M U48 ( .A(\u_div/PartRem[3][3] ), .B(\u_div/SumTmp[2][3] ), .S0(
        quotient[2]), .Y(\u_div/PartRem[2][4] ) );
  CLKMX2X2M U49 ( .A(\u_div/PartRem[4][2] ), .B(\u_div/SumTmp[3][2] ), .S0(
        quotient[3]), .Y(\u_div/PartRem[3][3] ) );
  CLKMX2X2M U50 ( .A(\u_div/PartRem[5][1] ), .B(\u_div/SumTmp[4][1] ), .S0(
        quotient[4]), .Y(\u_div/PartRem[4][2] ) );
  CLKMX2X2M U51 ( .A(a[5]), .B(\u_div/SumTmp[5][0] ), .S0(quotient[5]), .Y(
        \u_div/PartRem[5][1] ) );
  CLKMX2X2M U52 ( .A(\u_div/PartRem[2][3] ), .B(\u_div/SumTmp[1][3] ), .S0(
        quotient[1]), .Y(\u_div/PartRem[1][4] ) );
  CLKMX2X2M U53 ( .A(\u_div/PartRem[3][2] ), .B(\u_div/SumTmp[2][2] ), .S0(
        quotient[2]), .Y(\u_div/PartRem[2][3] ) );
  CLKMX2X2M U54 ( .A(\u_div/PartRem[4][1] ), .B(\u_div/SumTmp[3][1] ), .S0(
        quotient[3]), .Y(\u_div/PartRem[3][2] ) );
  CLKMX2X2M U55 ( .A(a[4]), .B(\u_div/SumTmp[4][0] ), .S0(quotient[4]), .Y(
        \u_div/PartRem[4][1] ) );
  CLKMX2X2M U56 ( .A(\u_div/PartRem[2][2] ), .B(\u_div/SumTmp[1][2] ), .S0(
        quotient[1]), .Y(\u_div/PartRem[1][3] ) );
  CLKMX2X2M U57 ( .A(\u_div/PartRem[3][1] ), .B(\u_div/SumTmp[2][1] ), .S0(
        quotient[2]), .Y(\u_div/PartRem[2][2] ) );
  CLKMX2X2M U58 ( .A(a[3]), .B(\u_div/SumTmp[3][0] ), .S0(quotient[3]), .Y(
        \u_div/PartRem[3][1] ) );
  CLKMX2X2M U59 ( .A(\u_div/PartRem[2][1] ), .B(\u_div/SumTmp[1][1] ), .S0(
        quotient[1]), .Y(\u_div/PartRem[1][2] ) );
  CLKMX2X2M U60 ( .A(a[2]), .B(\u_div/SumTmp[2][0] ), .S0(quotient[2]), .Y(
        \u_div/PartRem[2][1] ) );
  CLKMX2X2M U61 ( .A(a[1]), .B(\u_div/SumTmp[1][0] ), .S0(quotient[1]), .Y(
        \u_div/PartRem[1][1] ) );
  AND4X1M U62 ( .A(\u_div/CryTmp[7][1] ), .B(n19), .C(n17), .D(n16), .Y(
        quotient[7]) );
  AND3X1M U63 ( .A(n19), .B(n16), .C(\u_div/CryTmp[6][2] ), .Y(quotient[6]) );
  AND2X1M U64 ( .A(\u_div/CryTmp[5][3] ), .B(n19), .Y(quotient[5]) );
  AND2X1M U65 ( .A(n20), .B(n15), .Y(n19) );
  AND2X1M U66 ( .A(\u_div/CryTmp[4][4] ), .B(n20), .Y(quotient[4]) );
  AND3X1M U67 ( .A(n21), .B(n14), .C(n13), .Y(n20) );
  AND3X1M U68 ( .A(n21), .B(n13), .C(\u_div/CryTmp[3][5] ), .Y(quotient[3]) );
  AND2X1M U69 ( .A(\u_div/CryTmp[2][6] ), .B(n21), .Y(quotient[2]) );
  NOR2X1M U70 ( .A(b[6]), .B(b[7]), .Y(n21) );
  AND2X1M U71 ( .A(\u_div/CryTmp[1][7] ), .B(n11), .Y(quotient[1]) );
endmodule


module ALU_OPER_WIDTH8_OUT_WIDTH16_DW01_sub_0 ( A, B, CI, DIFF, CO );
  input [8:0] A;
  input [8:0] B;
  output [8:0] DIFF;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9;
  wire   [9:0] carry;

  ADDFX2M U2_5 ( .A(A[5]), .B(n4), .CI(carry[5]), .CO(carry[6]), .S(DIFF[5])
         );
  ADDFX2M U2_4 ( .A(A[4]), .B(n5), .CI(carry[4]), .CO(carry[5]), .S(DIFF[4])
         );
  ADDFX2M U2_3 ( .A(A[3]), .B(n6), .CI(carry[3]), .CO(carry[4]), .S(DIFF[3])
         );
  ADDFX2M U2_2 ( .A(A[2]), .B(n7), .CI(carry[2]), .CO(carry[3]), .S(DIFF[2])
         );
  ADDFX2M U2_7 ( .A(A[7]), .B(n2), .CI(carry[7]), .CO(carry[8]), .S(DIFF[7])
         );
  ADDFX2M U2_1 ( .A(A[1]), .B(n8), .CI(carry[1]), .CO(carry[2]), .S(DIFF[1])
         );
  ADDFX2M U2_6 ( .A(A[6]), .B(n3), .CI(carry[6]), .CO(carry[7]), .S(DIFF[6])
         );
  XNOR2X2M U1 ( .A(n9), .B(A[0]), .Y(DIFF[0]) );
  INVX2M U2 ( .A(B[6]), .Y(n3) );
  INVX2M U3 ( .A(B[1]), .Y(n8) );
  NAND2X2M U4 ( .A(B[0]), .B(n1), .Y(carry[1]) );
  INVX2M U5 ( .A(A[0]), .Y(n1) );
  INVX2M U6 ( .A(B[7]), .Y(n2) );
  INVX2M U7 ( .A(B[0]), .Y(n9) );
  INVX2M U8 ( .A(B[2]), .Y(n7) );
  INVX2M U9 ( .A(B[3]), .Y(n6) );
  INVX2M U10 ( .A(B[4]), .Y(n5) );
  INVX2M U11 ( .A(B[5]), .Y(n4) );
  CLKINVX1M U12 ( .A(carry[8]), .Y(DIFF[8]) );
endmodule


module ALU_OPER_WIDTH8_OUT_WIDTH16_DW01_add_0 ( A, B, CI, SUM, CO );
  input [8:0] A;
  input [8:0] B;
  output [8:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [8:1] carry;

  ADDFX2M U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2M U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFX2M U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX2M U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX2M U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX2M U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(SUM[8]), .S(SUM[7]) );
  ADDFX2M U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  AND2X2M U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  CLKXOR2X2M U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module ALU_OPER_WIDTH8_OUT_WIDTH16_DW01_add_1 ( A, B, CI, SUM, CO );
  input [13:0] A;
  input [13:0] B;
  output [13:0] SUM;
  input CI;
  output CO;
  wire   n1, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19, n20,
         n21, n22, n23, n24, n25, n26, n27;

  AOI21BX2M U2 ( .A0(n18), .A1(A[12]), .B0N(n19), .Y(n1) );
  NAND2X2M U3 ( .A(A[7]), .B(B[7]), .Y(n15) );
  XNOR2X2M U4 ( .A(A[7]), .B(n8), .Y(SUM[7]) );
  INVX2M U5 ( .A(B[7]), .Y(n8) );
  XNOR2X2M U6 ( .A(B[13]), .B(n1), .Y(SUM[13]) );
  INVX2M U7 ( .A(A[6]), .Y(n9) );
  INVX2M U8 ( .A(n9), .Y(SUM[6]) );
  BUFX2M U9 ( .A(A[0]), .Y(SUM[0]) );
  BUFX2M U10 ( .A(A[1]), .Y(SUM[1]) );
  BUFX2M U11 ( .A(A[2]), .Y(SUM[2]) );
  BUFX2M U12 ( .A(A[3]), .Y(SUM[3]) );
  BUFX2M U13 ( .A(A[4]), .Y(SUM[4]) );
  BUFX2M U14 ( .A(A[5]), .Y(SUM[5]) );
  XNOR2X1M U15 ( .A(n10), .B(n11), .Y(SUM[9]) );
  NOR2X1M U16 ( .A(n12), .B(n13), .Y(n11) );
  CLKXOR2X2M U17 ( .A(n14), .B(n15), .Y(SUM[8]) );
  NAND2BX1M U18 ( .AN(n16), .B(n17), .Y(n14) );
  OAI21X1M U19 ( .A0(A[12]), .A1(n18), .B0(B[12]), .Y(n19) );
  XOR3XLM U20 ( .A(B[12]), .B(A[12]), .C(n18), .Y(SUM[12]) );
  OAI21BX1M U21 ( .A0(n20), .A1(n21), .B0N(n22), .Y(n18) );
  XNOR2X1M U22 ( .A(n21), .B(n23), .Y(SUM[11]) );
  NOR2X1M U23 ( .A(n22), .B(n20), .Y(n23) );
  NOR2X1M U24 ( .A(B[11]), .B(A[11]), .Y(n20) );
  AND2X1M U25 ( .A(B[11]), .B(A[11]), .Y(n22) );
  OA21X1M U26 ( .A0(n24), .A1(n25), .B0(n26), .Y(n21) );
  CLKXOR2X2M U27 ( .A(n27), .B(n25), .Y(SUM[10]) );
  AOI2BB1X1M U28 ( .A0N(n10), .A1N(n13), .B0(n12), .Y(n25) );
  AND2X1M U29 ( .A(B[9]), .B(A[9]), .Y(n12) );
  NOR2X1M U30 ( .A(B[9]), .B(A[9]), .Y(n13) );
  OA21X1M U31 ( .A0(n15), .A1(n16), .B0(n17), .Y(n10) );
  CLKNAND2X2M U32 ( .A(B[8]), .B(A[8]), .Y(n17) );
  NOR2X1M U33 ( .A(B[8]), .B(A[8]), .Y(n16) );
  NAND2BX1M U34 ( .AN(n24), .B(n26), .Y(n27) );
  CLKNAND2X2M U35 ( .A(B[10]), .B(A[10]), .Y(n26) );
  NOR2X1M U36 ( .A(B[10]), .B(A[10]), .Y(n24) );
endmodule


module ALU_OPER_WIDTH8_OUT_WIDTH16_DW02_mult_0 ( A, B, TC, PRODUCT );
  input [7:0] A;
  input [7:0] B;
  output [15:0] PRODUCT;
  input TC;
  wire   \ab[7][7] , \ab[7][6] , \ab[7][5] , \ab[7][4] , \ab[7][3] ,
         \ab[7][2] , \ab[7][1] , \ab[7][0] , \ab[6][7] , \ab[6][6] ,
         \ab[6][5] , \ab[6][4] , \ab[6][3] , \ab[6][2] , \ab[6][1] ,
         \ab[6][0] , \ab[5][7] , \ab[5][6] , \ab[5][5] , \ab[5][4] ,
         \ab[5][3] , \ab[5][2] , \ab[5][1] , \ab[5][0] , \ab[4][7] ,
         \ab[4][6] , \ab[4][5] , \ab[4][4] , \ab[4][3] , \ab[4][2] ,
         \ab[4][1] , \ab[4][0] , \ab[3][7] , \ab[3][6] , \ab[3][5] ,
         \ab[3][4] , \ab[3][3] , \ab[3][2] , \ab[3][1] , \ab[3][0] ,
         \ab[2][7] , \ab[2][6] , \ab[2][5] , \ab[2][4] , \ab[2][3] ,
         \ab[2][2] , \ab[2][1] , \ab[2][0] , \ab[1][7] , \ab[1][6] ,
         \ab[1][5] , \ab[1][4] , \ab[1][3] , \ab[1][2] , \ab[1][1] ,
         \ab[1][0] , \ab[0][7] , \ab[0][6] , \ab[0][5] , \ab[0][4] ,
         \ab[0][3] , \ab[0][2] , \ab[0][1] , \CARRYB[7][6] , \CARRYB[7][5] ,
         \CARRYB[7][4] , \CARRYB[7][3] , \CARRYB[7][2] , \CARRYB[7][1] ,
         \CARRYB[7][0] , \CARRYB[6][6] , \CARRYB[6][5] , \CARRYB[6][4] ,
         \CARRYB[6][3] , \CARRYB[6][2] , \CARRYB[6][1] , \CARRYB[6][0] ,
         \CARRYB[5][6] , \CARRYB[5][5] , \CARRYB[5][4] , \CARRYB[5][3] ,
         \CARRYB[5][2] , \CARRYB[5][1] , \CARRYB[5][0] , \CARRYB[4][6] ,
         \CARRYB[4][5] , \CARRYB[4][4] , \CARRYB[4][3] , \CARRYB[4][2] ,
         \CARRYB[4][1] , \CARRYB[4][0] , \CARRYB[3][6] , \CARRYB[3][5] ,
         \CARRYB[3][4] , \CARRYB[3][3] , \CARRYB[3][2] , \CARRYB[3][1] ,
         \CARRYB[3][0] , \CARRYB[2][6] , \CARRYB[2][5] , \CARRYB[2][4] ,
         \CARRYB[2][3] , \CARRYB[2][2] , \CARRYB[2][1] , \CARRYB[2][0] ,
         \SUMB[7][6] , \SUMB[7][5] , \SUMB[7][4] , \SUMB[7][3] , \SUMB[7][2] ,
         \SUMB[7][1] , \SUMB[7][0] , \SUMB[6][6] , \SUMB[6][5] , \SUMB[6][4] ,
         \SUMB[6][3] , \SUMB[6][2] , \SUMB[6][1] , \SUMB[5][6] , \SUMB[5][5] ,
         \SUMB[5][4] , \SUMB[5][3] , \SUMB[5][2] , \SUMB[5][1] , \SUMB[4][6] ,
         \SUMB[4][5] , \SUMB[4][4] , \SUMB[4][3] , \SUMB[4][2] , \SUMB[4][1] ,
         \SUMB[3][6] , \SUMB[3][5] , \SUMB[3][4] , \SUMB[3][3] , \SUMB[3][2] ,
         \SUMB[3][1] , \SUMB[2][6] , \SUMB[2][5] , \SUMB[2][4] , \SUMB[2][3] ,
         \SUMB[2][2] , \SUMB[2][1] , \SUMB[1][6] , \SUMB[1][5] , \SUMB[1][4] ,
         \SUMB[1][3] , \SUMB[1][2] , \SUMB[1][1] , \A1[12] , \A1[11] ,
         \A1[10] , \A1[9] , \A1[8] , \A1[7] , \A1[6] , \A1[4] , \A1[3] ,
         \A1[2] , \A1[1] , \A1[0] , n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39;

  ADDFX2M S1_6_0 ( .A(\ab[6][0] ), .B(\CARRYB[5][0] ), .CI(\SUMB[5][1] ), .CO(
        \CARRYB[6][0] ), .S(\A1[4] ) );
  ADDFX2M S1_5_0 ( .A(\ab[5][0] ), .B(\CARRYB[4][0] ), .CI(\SUMB[4][1] ), .CO(
        \CARRYB[5][0] ), .S(\A1[3] ) );
  ADDFX2M S1_4_0 ( .A(\ab[4][0] ), .B(\CARRYB[3][0] ), .CI(\SUMB[3][1] ), .CO(
        \CARRYB[4][0] ), .S(\A1[2] ) );
  ADDFX2M S1_3_0 ( .A(\ab[3][0] ), .B(\CARRYB[2][0] ), .CI(\SUMB[2][1] ), .CO(
        \CARRYB[3][0] ), .S(\A1[1] ) );
  ADDFX2M S2_6_5 ( .A(\ab[6][5] ), .B(\CARRYB[5][5] ), .CI(\SUMB[5][6] ), .CO(
        \CARRYB[6][5] ), .S(\SUMB[6][5] ) );
  ADDFX2M S2_6_4 ( .A(\ab[6][4] ), .B(\CARRYB[5][4] ), .CI(\SUMB[5][5] ), .CO(
        \CARRYB[6][4] ), .S(\SUMB[6][4] ) );
  ADDFX2M S2_5_5 ( .A(\ab[5][5] ), .B(\CARRYB[4][5] ), .CI(\SUMB[4][6] ), .CO(
        \CARRYB[5][5] ), .S(\SUMB[5][5] ) );
  ADDFX2M S2_6_3 ( .A(\ab[6][3] ), .B(\CARRYB[5][3] ), .CI(\SUMB[5][4] ), .CO(
        \CARRYB[6][3] ), .S(\SUMB[6][3] ) );
  ADDFX2M S2_5_4 ( .A(\ab[5][4] ), .B(\CARRYB[4][4] ), .CI(\SUMB[4][5] ), .CO(
        \CARRYB[5][4] ), .S(\SUMB[5][4] ) );
  ADDFX2M S2_6_2 ( .A(\ab[6][2] ), .B(\CARRYB[5][2] ), .CI(\SUMB[5][3] ), .CO(
        \CARRYB[6][2] ), .S(\SUMB[6][2] ) );
  ADDFX2M S2_4_5 ( .A(\ab[4][5] ), .B(\CARRYB[3][5] ), .CI(\SUMB[3][6] ), .CO(
        \CARRYB[4][5] ), .S(\SUMB[4][5] ) );
  ADDFX2M S2_5_2 ( .A(\ab[5][2] ), .B(\CARRYB[4][2] ), .CI(\SUMB[4][3] ), .CO(
        \CARRYB[5][2] ), .S(\SUMB[5][2] ) );
  ADDFX2M S2_5_3 ( .A(\ab[5][3] ), .B(\CARRYB[4][3] ), .CI(\SUMB[4][4] ), .CO(
        \CARRYB[5][3] ), .S(\SUMB[5][3] ) );
  ADDFX2M S2_4_2 ( .A(\ab[4][2] ), .B(\CARRYB[3][2] ), .CI(\SUMB[3][3] ), .CO(
        \CARRYB[4][2] ), .S(\SUMB[4][2] ) );
  ADDFX2M S2_4_3 ( .A(\ab[4][3] ), .B(\CARRYB[3][3] ), .CI(\SUMB[3][4] ), .CO(
        \CARRYB[4][3] ), .S(\SUMB[4][3] ) );
  ADDFX2M S2_4_4 ( .A(\ab[4][4] ), .B(\CARRYB[3][4] ), .CI(\SUMB[3][5] ), .CO(
        \CARRYB[4][4] ), .S(\SUMB[4][4] ) );
  ADDFX2M S2_3_2 ( .A(\ab[3][2] ), .B(\CARRYB[2][2] ), .CI(\SUMB[2][3] ), .CO(
        \CARRYB[3][2] ), .S(\SUMB[3][2] ) );
  ADDFX2M S2_3_3 ( .A(\ab[3][3] ), .B(\CARRYB[2][3] ), .CI(\SUMB[2][4] ), .CO(
        \CARRYB[3][3] ), .S(\SUMB[3][3] ) );
  ADDFX2M S2_3_4 ( .A(\ab[3][4] ), .B(\CARRYB[2][4] ), .CI(\SUMB[2][5] ), .CO(
        \CARRYB[3][4] ), .S(\SUMB[3][4] ) );
  ADDFX2M S2_3_5 ( .A(\ab[3][5] ), .B(\CARRYB[2][5] ), .CI(\SUMB[2][6] ), .CO(
        \CARRYB[3][5] ), .S(\SUMB[3][5] ) );
  ADDFX2M S1_2_0 ( .A(\ab[2][0] ), .B(n9), .CI(\SUMB[1][1] ), .CO(
        \CARRYB[2][0] ), .S(\A1[0] ) );
  ADDFX2M S2_2_2 ( .A(\ab[2][2] ), .B(n8), .CI(\SUMB[1][3] ), .CO(
        \CARRYB[2][2] ), .S(\SUMB[2][2] ) );
  ADDFX2M S2_2_3 ( .A(\ab[2][3] ), .B(n7), .CI(\SUMB[1][4] ), .CO(
        \CARRYB[2][3] ), .S(\SUMB[2][3] ) );
  ADDFX2M S2_2_4 ( .A(\ab[2][4] ), .B(n6), .CI(\SUMB[1][5] ), .CO(
        \CARRYB[2][4] ), .S(\SUMB[2][4] ) );
  ADDFX2M S2_2_5 ( .A(\ab[2][5] ), .B(n5), .CI(\SUMB[1][6] ), .CO(
        \CARRYB[2][5] ), .S(\SUMB[2][5] ) );
  ADDFX2M S4_0 ( .A(\ab[7][0] ), .B(\CARRYB[6][0] ), .CI(\SUMB[6][1] ), .CO(
        \CARRYB[7][0] ), .S(\SUMB[7][0] ) );
  ADDFX2M S4_5 ( .A(\ab[7][5] ), .B(\CARRYB[6][5] ), .CI(\SUMB[6][6] ), .CO(
        \CARRYB[7][5] ), .S(\SUMB[7][5] ) );
  ADDFX2M S4_4 ( .A(\ab[7][4] ), .B(\CARRYB[6][4] ), .CI(\SUMB[6][5] ), .CO(
        \CARRYB[7][4] ), .S(\SUMB[7][4] ) );
  ADDFX2M S4_3 ( .A(\ab[7][3] ), .B(\CARRYB[6][3] ), .CI(\SUMB[6][4] ), .CO(
        \CARRYB[7][3] ), .S(\SUMB[7][3] ) );
  ADDFX2M S4_2 ( .A(\ab[7][2] ), .B(\CARRYB[6][2] ), .CI(\SUMB[6][3] ), .CO(
        \CARRYB[7][2] ), .S(\SUMB[7][2] ) );
  ADDFX2M S2_6_1 ( .A(\ab[6][1] ), .B(\CARRYB[5][1] ), .CI(\SUMB[5][2] ), .CO(
        \CARRYB[6][1] ), .S(\SUMB[6][1] ) );
  ADDFX2M S2_5_1 ( .A(\ab[5][1] ), .B(\CARRYB[4][1] ), .CI(\SUMB[4][2] ), .CO(
        \CARRYB[5][1] ), .S(\SUMB[5][1] ) );
  ADDFX2M S2_4_1 ( .A(\ab[4][1] ), .B(\CARRYB[3][1] ), .CI(\SUMB[3][2] ), .CO(
        \CARRYB[4][1] ), .S(\SUMB[4][1] ) );
  ADDFX2M S2_3_1 ( .A(\ab[3][1] ), .B(\CARRYB[2][1] ), .CI(\SUMB[2][2] ), .CO(
        \CARRYB[3][1] ), .S(\SUMB[3][1] ) );
  ADDFX2M S3_6_6 ( .A(\ab[6][6] ), .B(\CARRYB[5][6] ), .CI(\ab[5][7] ), .CO(
        \CARRYB[6][6] ), .S(\SUMB[6][6] ) );
  ADDFX2M S3_5_6 ( .A(\ab[5][6] ), .B(\CARRYB[4][6] ), .CI(\ab[4][7] ), .CO(
        \CARRYB[5][6] ), .S(\SUMB[5][6] ) );
  ADDFX2M S3_4_6 ( .A(\ab[4][6] ), .B(\CARRYB[3][6] ), .CI(\ab[3][7] ), .CO(
        \CARRYB[4][6] ), .S(\SUMB[4][6] ) );
  ADDFX2M S3_3_6 ( .A(\ab[3][6] ), .B(\CARRYB[2][6] ), .CI(\ab[2][7] ), .CO(
        \CARRYB[3][6] ), .S(\SUMB[3][6] ) );
  ADDFX2M S3_2_6 ( .A(\ab[2][6] ), .B(n4), .CI(\ab[1][7] ), .CO(\CARRYB[2][6] ), .S(\SUMB[2][6] ) );
  ADDFX2M S2_2_1 ( .A(\ab[2][1] ), .B(n3), .CI(\SUMB[1][2] ), .CO(
        \CARRYB[2][1] ), .S(\SUMB[2][1] ) );
  ADDFX2M S5_6 ( .A(\ab[7][6] ), .B(\CARRYB[6][6] ), .CI(\ab[6][7] ), .CO(
        \CARRYB[7][6] ), .S(\SUMB[7][6] ) );
  ADDFX2M S4_1 ( .A(\ab[7][1] ), .B(\CARRYB[6][1] ), .CI(\SUMB[6][2] ), .CO(
        \CARRYB[7][1] ), .S(\SUMB[7][1] ) );
  AND2X2M U2 ( .A(\ab[0][2] ), .B(\ab[1][1] ), .Y(n3) );
  AND2X2M U3 ( .A(\ab[0][7] ), .B(\ab[1][6] ), .Y(n4) );
  AND2X2M U4 ( .A(\ab[0][6] ), .B(\ab[1][5] ), .Y(n5) );
  AND2X2M U5 ( .A(\ab[0][5] ), .B(\ab[1][4] ), .Y(n6) );
  AND2X2M U6 ( .A(\ab[0][4] ), .B(\ab[1][3] ), .Y(n7) );
  AND2X2M U7 ( .A(\ab[0][3] ), .B(\ab[1][2] ), .Y(n8) );
  AND2X2M U8 ( .A(\ab[0][1] ), .B(\ab[1][0] ), .Y(n9) );
  AND2X2M U9 ( .A(\CARRYB[7][6] ), .B(\ab[7][7] ), .Y(n10) );
  CLKXOR2X2M U10 ( .A(\CARRYB[7][6] ), .B(\ab[7][7] ), .Y(\A1[12] ) );
  INVX2M U11 ( .A(\ab[0][7] ), .Y(n23) );
  INVX2M U12 ( .A(\ab[0][6] ), .Y(n22) );
  CLKXOR2X2M U13 ( .A(\CARRYB[7][1] ), .B(\SUMB[7][2] ), .Y(\A1[7] ) );
  CLKXOR2X2M U14 ( .A(\ab[1][0] ), .B(\ab[0][1] ), .Y(PRODUCT[1]) );
  CLKXOR2X2M U15 ( .A(\CARRYB[7][2] ), .B(\SUMB[7][3] ), .Y(\A1[8] ) );
  CLKXOR2X2M U16 ( .A(\CARRYB[7][4] ), .B(\SUMB[7][5] ), .Y(\A1[10] ) );
  CLKXOR2X2M U17 ( .A(\CARRYB[7][3] ), .B(\SUMB[7][4] ), .Y(\A1[9] ) );
  CLKXOR2X2M U18 ( .A(\CARRYB[7][5] ), .B(\SUMB[7][6] ), .Y(\A1[11] ) );
  INVX2M U19 ( .A(\ab[0][5] ), .Y(n21) );
  INVX2M U20 ( .A(\ab[0][4] ), .Y(n20) );
  INVX2M U21 ( .A(\ab[0][3] ), .Y(n19) );
  INVX2M U22 ( .A(\ab[0][2] ), .Y(n18) );
  XNOR2X2M U23 ( .A(\ab[1][2] ), .B(n19), .Y(\SUMB[1][2] ) );
  XNOR2X2M U24 ( .A(\CARRYB[7][0] ), .B(n17), .Y(\A1[6] ) );
  INVX2M U25 ( .A(\SUMB[7][1] ), .Y(n17) );
  AND2X2M U26 ( .A(\CARRYB[7][0] ), .B(\SUMB[7][1] ), .Y(n11) );
  AND2X2M U27 ( .A(\CARRYB[7][1] ), .B(\SUMB[7][2] ), .Y(n12) );
  AND2X2M U28 ( .A(\CARRYB[7][3] ), .B(\SUMB[7][4] ), .Y(n13) );
  AND2X2M U29 ( .A(\CARRYB[7][5] ), .B(\SUMB[7][6] ), .Y(n14) );
  AND2X2M U30 ( .A(\CARRYB[7][2] ), .B(\SUMB[7][3] ), .Y(n15) );
  AND2X2M U31 ( .A(\CARRYB[7][4] ), .B(\SUMB[7][5] ), .Y(n16) );
  XNOR2X2M U32 ( .A(\ab[1][6] ), .B(n23), .Y(\SUMB[1][6] ) );
  XNOR2X2M U33 ( .A(\ab[1][5] ), .B(n22), .Y(\SUMB[1][5] ) );
  XNOR2X2M U34 ( .A(\ab[1][4] ), .B(n21), .Y(\SUMB[1][4] ) );
  XNOR2X2M U35 ( .A(\ab[1][3] ), .B(n20), .Y(\SUMB[1][3] ) );
  XNOR2X2M U36 ( .A(\ab[1][1] ), .B(n18), .Y(\SUMB[1][1] ) );
  INVX2M U37 ( .A(A[6]), .Y(n33) );
  INVX2M U38 ( .A(A[7]), .Y(n32) );
  INVX2M U39 ( .A(A[1]), .Y(n38) );
  INVX2M U40 ( .A(A[0]), .Y(n39) );
  INVX2M U41 ( .A(A[2]), .Y(n37) );
  INVX2M U42 ( .A(A[3]), .Y(n36) );
  INVX2M U43 ( .A(B[6]), .Y(n25) );
  INVX2M U44 ( .A(A[5]), .Y(n34) );
  INVX2M U45 ( .A(A[4]), .Y(n35) );
  INVX2M U46 ( .A(B[7]), .Y(n24) );
  INVX2M U47 ( .A(B[1]), .Y(n30) );
  INVX2M U48 ( .A(B[0]), .Y(n31) );
  INVX2M U49 ( .A(B[3]), .Y(n28) );
  INVX2M U50 ( .A(B[2]), .Y(n29) );
  INVX2M U51 ( .A(B[5]), .Y(n26) );
  INVX2M U52 ( .A(B[4]), .Y(n27) );
  NOR2X1M U54 ( .A(n32), .B(n24), .Y(\ab[7][7] ) );
  NOR2X1M U55 ( .A(n32), .B(n25), .Y(\ab[7][6] ) );
  NOR2X1M U56 ( .A(n32), .B(n26), .Y(\ab[7][5] ) );
  NOR2X1M U57 ( .A(n32), .B(n27), .Y(\ab[7][4] ) );
  NOR2X1M U58 ( .A(n32), .B(n28), .Y(\ab[7][3] ) );
  NOR2X1M U59 ( .A(n32), .B(n29), .Y(\ab[7][2] ) );
  NOR2X1M U60 ( .A(n32), .B(n30), .Y(\ab[7][1] ) );
  NOR2X1M U61 ( .A(n32), .B(n31), .Y(\ab[7][0] ) );
  NOR2X1M U62 ( .A(n24), .B(n33), .Y(\ab[6][7] ) );
  NOR2X1M U63 ( .A(n25), .B(n33), .Y(\ab[6][6] ) );
  NOR2X1M U64 ( .A(n26), .B(n33), .Y(\ab[6][5] ) );
  NOR2X1M U65 ( .A(n27), .B(n33), .Y(\ab[6][4] ) );
  NOR2X1M U66 ( .A(n28), .B(n33), .Y(\ab[6][3] ) );
  NOR2X1M U67 ( .A(n29), .B(n33), .Y(\ab[6][2] ) );
  NOR2X1M U68 ( .A(n30), .B(n33), .Y(\ab[6][1] ) );
  NOR2X1M U69 ( .A(n31), .B(n33), .Y(\ab[6][0] ) );
  NOR2X1M U70 ( .A(n24), .B(n34), .Y(\ab[5][7] ) );
  NOR2X1M U71 ( .A(n25), .B(n34), .Y(\ab[5][6] ) );
  NOR2X1M U72 ( .A(n26), .B(n34), .Y(\ab[5][5] ) );
  NOR2X1M U73 ( .A(n27), .B(n34), .Y(\ab[5][4] ) );
  NOR2X1M U74 ( .A(n28), .B(n34), .Y(\ab[5][3] ) );
  NOR2X1M U75 ( .A(n29), .B(n34), .Y(\ab[5][2] ) );
  NOR2X1M U76 ( .A(n30), .B(n34), .Y(\ab[5][1] ) );
  NOR2X1M U77 ( .A(n31), .B(n34), .Y(\ab[5][0] ) );
  NOR2X1M U78 ( .A(n24), .B(n35), .Y(\ab[4][7] ) );
  NOR2X1M U79 ( .A(n25), .B(n35), .Y(\ab[4][6] ) );
  NOR2X1M U80 ( .A(n26), .B(n35), .Y(\ab[4][5] ) );
  NOR2X1M U81 ( .A(n27), .B(n35), .Y(\ab[4][4] ) );
  NOR2X1M U82 ( .A(n28), .B(n35), .Y(\ab[4][3] ) );
  NOR2X1M U83 ( .A(n29), .B(n35), .Y(\ab[4][2] ) );
  NOR2X1M U84 ( .A(n30), .B(n35), .Y(\ab[4][1] ) );
  NOR2X1M U85 ( .A(n31), .B(n35), .Y(\ab[4][0] ) );
  NOR2X1M U86 ( .A(n24), .B(n36), .Y(\ab[3][7] ) );
  NOR2X1M U87 ( .A(n25), .B(n36), .Y(\ab[3][6] ) );
  NOR2X1M U88 ( .A(n26), .B(n36), .Y(\ab[3][5] ) );
  NOR2X1M U89 ( .A(n27), .B(n36), .Y(\ab[3][4] ) );
  NOR2X1M U90 ( .A(n28), .B(n36), .Y(\ab[3][3] ) );
  NOR2X1M U91 ( .A(n29), .B(n36), .Y(\ab[3][2] ) );
  NOR2X1M U92 ( .A(n30), .B(n36), .Y(\ab[3][1] ) );
  NOR2X1M U93 ( .A(n31), .B(n36), .Y(\ab[3][0] ) );
  NOR2X1M U94 ( .A(n24), .B(n37), .Y(\ab[2][7] ) );
  NOR2X1M U95 ( .A(n25), .B(n37), .Y(\ab[2][6] ) );
  NOR2X1M U96 ( .A(n26), .B(n37), .Y(\ab[2][5] ) );
  NOR2X1M U97 ( .A(n27), .B(n37), .Y(\ab[2][4] ) );
  NOR2X1M U98 ( .A(n28), .B(n37), .Y(\ab[2][3] ) );
  NOR2X1M U99 ( .A(n29), .B(n37), .Y(\ab[2][2] ) );
  NOR2X1M U100 ( .A(n30), .B(n37), .Y(\ab[2][1] ) );
  NOR2X1M U101 ( .A(n31), .B(n37), .Y(\ab[2][0] ) );
  NOR2X1M U102 ( .A(n24), .B(n38), .Y(\ab[1][7] ) );
  NOR2X1M U103 ( .A(n25), .B(n38), .Y(\ab[1][6] ) );
  NOR2X1M U104 ( .A(n26), .B(n38), .Y(\ab[1][5] ) );
  NOR2X1M U105 ( .A(n27), .B(n38), .Y(\ab[1][4] ) );
  NOR2X1M U106 ( .A(n28), .B(n38), .Y(\ab[1][3] ) );
  NOR2X1M U107 ( .A(n29), .B(n38), .Y(\ab[1][2] ) );
  NOR2X1M U108 ( .A(n30), .B(n38), .Y(\ab[1][1] ) );
  NOR2X1M U109 ( .A(n31), .B(n38), .Y(\ab[1][0] ) );
  NOR2X1M U110 ( .A(n24), .B(n39), .Y(\ab[0][7] ) );
  NOR2X1M U111 ( .A(n25), .B(n39), .Y(\ab[0][6] ) );
  NOR2X1M U112 ( .A(n26), .B(n39), .Y(\ab[0][5] ) );
  NOR2X1M U113 ( .A(n27), .B(n39), .Y(\ab[0][4] ) );
  NOR2X1M U114 ( .A(n28), .B(n39), .Y(\ab[0][3] ) );
  NOR2X1M U115 ( .A(n29), .B(n39), .Y(\ab[0][2] ) );
  NOR2X1M U116 ( .A(n30), .B(n39), .Y(\ab[0][1] ) );
  NOR2X1M U117 ( .A(n31), .B(n39), .Y(PRODUCT[0]) );
  ALU_OPER_WIDTH8_OUT_WIDTH16_DW01_add_1 FS_1 ( .A({1'b0, \A1[12] , \A1[11] , 
        \A1[10] , \A1[9] , \A1[8] , \A1[7] , \A1[6] , \SUMB[7][0] , \A1[4] , 
        \A1[3] , \A1[2] , \A1[1] , \A1[0] }), .B({n10, n14, n16, n13, n15, n12, 
        n11, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0}), .CI(1'b0), .SUM(
        PRODUCT[15:2]) );
endmodule


module ALU_OPER_WIDTH8_OUT_WIDTH16_test_1 ( A, B, ALU_FUN, CLK, RST, Enable, 
        ALU_OUT, OUT_VALID, test_si, test_se );
  input [7:0] A;
  input [7:0] B;
  input [3:0] ALU_FUN;
  output [15:0] ALU_OUT;
  input CLK, RST, Enable, test_si, test_se;
  output OUT_VALID;
  wire   N92, N93, N94, N95, N96, N97, N98, N99, N100, N101, N102, N103, N104,
         N105, N106, N107, N108, N109, N110, N111, N112, N113, N114, N115,
         N116, N117, N118, N119, N120, N121, N122, N123, N124, N125, N128,
         N129, N130, N131, N132, N133, N134, N135, N168, N169, N170, n52, n53,
         n54, n55, n56, n57, n58, n59, n60, n61, n62, n63, n64, n65, n66, n67,
         n68, n69, n70, n71, n72, n73, n74, n75, n76, n77, n78, n79, n80, n81,
         n82, n83, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93, n94, n95,
         n96, n97, n98, n99, n100, n101, n102, n103, n104, n105, n106, n107,
         n108, n109, n110, n111, n112, n113, n114, n115, n116, n117, n118,
         n119, n120, n121, n122, n123, n124, n125, n126, n127, n128, n129,
         n130, n131, n132, n133, n134, n135, n3, n4, n5, n6, n7, n8, n9, n27,
         n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41,
         n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n136, n137, n138,
         n139, n140, n141, n142, n143, n144, n145, n146, n147, n148, n149,
         n150, n151, n152, n153, n154, n155, n156, n157, n158, n159, n160,
         n161, n162, n163, n164, n165, n166, n167, n168, n169;
  wire   [15:0] ALU_Comb;

  SDFFRQX2M \ALU_OUT_reg[15]  ( .D(ALU_Comb[15]), .SI(ALU_OUT[14]), .SE(
        test_se), .CK(CLK), .RN(RST), .Q(ALU_OUT[15]) );
  SDFFRQX2M \ALU_OUT_reg[14]  ( .D(ALU_Comb[14]), .SI(ALU_OUT[13]), .SE(
        test_se), .CK(CLK), .RN(RST), .Q(ALU_OUT[14]) );
  SDFFRQX2M \ALU_OUT_reg[13]  ( .D(ALU_Comb[13]), .SI(ALU_OUT[12]), .SE(
        test_se), .CK(CLK), .RN(RST), .Q(ALU_OUT[13]) );
  SDFFRQX2M \ALU_OUT_reg[12]  ( .D(ALU_Comb[12]), .SI(ALU_OUT[11]), .SE(
        test_se), .CK(CLK), .RN(RST), .Q(ALU_OUT[12]) );
  SDFFRQX2M \ALU_OUT_reg[11]  ( .D(ALU_Comb[11]), .SI(ALU_OUT[10]), .SE(
        test_se), .CK(CLK), .RN(RST), .Q(ALU_OUT[11]) );
  SDFFRQX2M \ALU_OUT_reg[10]  ( .D(ALU_Comb[10]), .SI(ALU_OUT[9]), .SE(test_se), .CK(CLK), .RN(RST), .Q(ALU_OUT[10]) );
  SDFFRQX2M \ALU_OUT_reg[9]  ( .D(ALU_Comb[9]), .SI(ALU_OUT[8]), .SE(test_se), 
        .CK(CLK), .RN(RST), .Q(ALU_OUT[9]) );
  SDFFRQX2M \ALU_OUT_reg[8]  ( .D(ALU_Comb[8]), .SI(ALU_OUT[7]), .SE(test_se), 
        .CK(CLK), .RN(RST), .Q(ALU_OUT[8]) );
  SDFFRQX2M \ALU_OUT_reg[7]  ( .D(ALU_Comb[7]), .SI(ALU_OUT[6]), .SE(test_se), 
        .CK(CLK), .RN(RST), .Q(ALU_OUT[7]) );
  SDFFRQX2M \ALU_OUT_reg[6]  ( .D(ALU_Comb[6]), .SI(ALU_OUT[5]), .SE(test_se), 
        .CK(CLK), .RN(RST), .Q(ALU_OUT[6]) );
  SDFFRQX2M \ALU_OUT_reg[5]  ( .D(ALU_Comb[5]), .SI(ALU_OUT[4]), .SE(test_se), 
        .CK(CLK), .RN(RST), .Q(ALU_OUT[5]) );
  SDFFRQX2M \ALU_OUT_reg[4]  ( .D(ALU_Comb[4]), .SI(ALU_OUT[3]), .SE(test_se), 
        .CK(CLK), .RN(RST), .Q(ALU_OUT[4]) );
  SDFFRQX2M \ALU_OUT_reg[3]  ( .D(ALU_Comb[3]), .SI(ALU_OUT[2]), .SE(test_se), 
        .CK(CLK), .RN(RST), .Q(ALU_OUT[3]) );
  SDFFRQX2M \ALU_OUT_reg[2]  ( .D(ALU_Comb[2]), .SI(ALU_OUT[1]), .SE(test_se), 
        .CK(CLK), .RN(RST), .Q(ALU_OUT[2]) );
  SDFFRQX2M \ALU_OUT_reg[1]  ( .D(ALU_Comb[1]), .SI(ALU_OUT[0]), .SE(test_se), 
        .CK(CLK), .RN(RST), .Q(ALU_OUT[1]) );
  SDFFRQX2M \ALU_OUT_reg[0]  ( .D(ALU_Comb[0]), .SI(test_si), .SE(test_se), 
        .CK(CLK), .RN(RST), .Q(ALU_OUT[0]) );
  SDFFRQX2M OUT_VALID_reg ( .D(Enable), .SI(ALU_OUT[15]), .SE(test_se), .CK(
        CLK), .RN(RST), .Q(OUT_VALID) );
  BUFX2M U8 ( .A(A[6]), .Y(n31) );
  BUFX2M U23 ( .A(A[1]), .Y(n9) );
  BUFX2M U24 ( .A(A[7]), .Y(n32) );
  BUFX2M U25 ( .A(B[6]), .Y(n6) );
  NAND2X2M U26 ( .A(Enable), .B(n59), .Y(n53) );
  INVX2M U27 ( .A(n70), .Y(n154) );
  INVX2M U28 ( .A(n114), .Y(n152) );
  INVX2M U29 ( .A(n64), .Y(n151) );
  INVX2M U30 ( .A(Enable), .Y(n147) );
  INVX2M U31 ( .A(n119), .Y(n150) );
  OAI2BB1X2M U32 ( .A0N(N119), .A1N(n52), .B0(n53), .Y(ALU_Comb[9]) );
  OAI2BB1X2M U33 ( .A0N(N120), .A1N(n52), .B0(n53), .Y(ALU_Comb[10]) );
  OAI2BB1X2M U34 ( .A0N(N121), .A1N(n52), .B0(n53), .Y(ALU_Comb[11]) );
  OAI2BB1X2M U35 ( .A0N(N122), .A1N(n52), .B0(n53), .Y(ALU_Comb[12]) );
  OAI2BB1X2M U36 ( .A0N(N123), .A1N(n52), .B0(n53), .Y(ALU_Comb[13]) );
  OAI2BB1X2M U37 ( .A0N(N124), .A1N(n52), .B0(n53), .Y(ALU_Comb[14]) );
  OAI2BB1X2M U38 ( .A0N(N125), .A1N(n52), .B0(n53), .Y(ALU_Comb[15]) );
  OAI2B11X2M U39 ( .A1N(N109), .A0(n119), .B0(n154), .C0(n152), .Y(n59) );
  OAI21X2M U40 ( .A0(n3), .A1(n129), .B0(n128), .Y(n69) );
  NOR2X2M U41 ( .A(n118), .B(n3), .Y(n70) );
  NOR2BX2M U42 ( .AN(n130), .B(n3), .Y(n58) );
  OAI2B1X2M U43 ( .A1N(n127), .A0(n118), .B0(n128), .Y(n114) );
  OAI2BB2X1M U44 ( .B0(n163), .B1(n64), .A0N(N117), .A1N(n57), .Y(n63) );
  NAND2X2M U45 ( .A(n130), .B(n127), .Y(n119) );
  NAND2X2M U46 ( .A(n155), .B(n127), .Y(n64) );
  NOR2BX2M U47 ( .AN(n57), .B(n147), .Y(n52) );
  INVX2M U48 ( .A(n129), .Y(n155) );
  INVX2M U49 ( .A(n67), .Y(n149) );
  NOR3BX2M U50 ( .AN(n4), .B(n118), .C(ALU_FUN[0]), .Y(n56) );
  NOR3BX2M U51 ( .AN(n4), .B(n153), .C(n129), .Y(n74) );
  NOR3X2M U52 ( .A(n3), .B(ALU_FUN[2]), .C(n156), .Y(n57) );
  NOR2X2M U53 ( .A(ALU_FUN[2]), .B(ALU_FUN[1]), .Y(n130) );
  NAND2X2M U54 ( .A(ALU_FUN[2]), .B(ALU_FUN[1]), .Y(n118) );
  NAND2X2M U55 ( .A(ALU_FUN[2]), .B(n156), .Y(n129) );
  OAI221X1M U56 ( .A0(n27), .A1(n152), .B0(n67), .B1(n168), .C0(n154), .Y(n106) );
  OAI221X1M U57 ( .A0(n28), .A1(n152), .B0(n67), .B1(n167), .C0(n154), .Y(n99)
         );
  OAI221X1M U58 ( .A0(n29), .A1(n152), .B0(n67), .B1(n166), .C0(n154), .Y(n92)
         );
  OAI221X1M U59 ( .A0(n30), .A1(n152), .B0(n67), .B1(n165), .C0(n154), .Y(n85)
         );
  OAI221X1M U60 ( .A0(n31), .A1(n152), .B0(n67), .B1(n164), .C0(n154), .Y(n78)
         );
  OAI221X1M U61 ( .A0(n32), .A1(n152), .B0(n163), .B1(n67), .C0(n154), .Y(n66)
         );
  INVX2M U62 ( .A(n33), .Y(n145) );
  INVX2M U63 ( .A(ALU_FUN[0]), .Y(n153) );
  NOR3X2M U64 ( .A(n156), .B(ALU_FUN[2]), .C(ALU_FUN[0]), .Y(n132) );
  INVX2M U65 ( .A(ALU_FUN[1]), .Y(n156) );
  NOR2X2M U66 ( .A(n153), .B(n4), .Y(n127) );
  OAI2B2X1M U67 ( .A1N(n5), .A0(n112), .B0(n5), .B1(n113), .Y(n111) );
  AOI221XLM U68 ( .A0(n149), .A1(n143), .B0(n9), .B1(n69), .C0(n151), .Y(n112)
         );
  AOI221XLM U69 ( .A0(n9), .A1(n149), .B0(n114), .B1(n143), .C0(n70), .Y(n113)
         );
  NAND3X2M U70 ( .A(n130), .B(ALU_FUN[0]), .C(n4), .Y(n128) );
  NAND3X2M U71 ( .A(n130), .B(n153), .C(n4), .Y(n67) );
  AOI31X2M U72 ( .A0(n86), .A1(n87), .A2(n88), .B0(n147), .Y(ALU_Comb[4]) );
  AOI22X1M U73 ( .A0(N105), .A1(n150), .B0(N96), .B1(n58), .Y(n86) );
  AOI221XLM U74 ( .A0(n28), .A1(n56), .B0(n74), .B1(n30), .C0(n89), .Y(n88) );
  AOI222X1M U75 ( .A0(N114), .A1(n57), .B0(n70), .B1(n166), .C0(n29), .C1(n151), .Y(n87) );
  AOI31X2M U76 ( .A0(n79), .A1(n80), .A2(n81), .B0(n147), .Y(ALU_Comb[5]) );
  AOI22X1M U77 ( .A0(N106), .A1(n150), .B0(N97), .B1(n58), .Y(n79) );
  AOI221XLM U78 ( .A0(n29), .A1(n56), .B0(n74), .B1(n31), .C0(n82), .Y(n81) );
  AOI222X1M U79 ( .A0(N115), .A1(n57), .B0(n70), .B1(n165), .C0(n30), .C1(n151), .Y(n80) );
  AOI31X2M U80 ( .A0(n71), .A1(n72), .A2(n73), .B0(n147), .Y(ALU_Comb[6]) );
  AOI22X1M U81 ( .A0(N107), .A1(n150), .B0(N98), .B1(n58), .Y(n71) );
  AOI221XLM U82 ( .A0(n30), .A1(n56), .B0(n74), .B1(n32), .C0(n75), .Y(n73) );
  AOI222X1M U83 ( .A0(N116), .A1(n57), .B0(n70), .B1(n164), .C0(n151), .C1(n31), .Y(n72) );
  AOI31X2M U84 ( .A0(n100), .A1(n101), .A2(n102), .B0(n147), .Y(ALU_Comb[2])
         );
  AOI22X1M U85 ( .A0(N103), .A1(n150), .B0(N94), .B1(n58), .Y(n100) );
  AOI221XLM U86 ( .A0(n9), .A1(n56), .B0(n28), .B1(n74), .C0(n103), .Y(n102)
         );
  AOI222X1M U87 ( .A0(N112), .A1(n57), .B0(n70), .B1(n168), .C0(n27), .C1(n151), .Y(n101) );
  AOI31X2M U88 ( .A0(n93), .A1(n94), .A2(n95), .B0(n147), .Y(ALU_Comb[3]) );
  AOI22X1M U89 ( .A0(N104), .A1(n150), .B0(N95), .B1(n58), .Y(n93) );
  AOI221XLM U90 ( .A0(n27), .A1(n56), .B0(n29), .B1(n74), .C0(n96), .Y(n95) );
  AOI222X1M U91 ( .A0(N113), .A1(n57), .B0(n70), .B1(n167), .C0(n28), .C1(n151), .Y(n94) );
  AOI31X2M U92 ( .A0(n120), .A1(n121), .A2(n122), .B0(n147), .Y(ALU_Comb[0])
         );
  AOI22X1M U93 ( .A0(N101), .A1(n150), .B0(N92), .B1(n58), .Y(n120) );
  AOI211X2M U94 ( .A0(n9), .A1(n74), .B0(n123), .C0(n124), .Y(n122) );
  AOI222X1M U95 ( .A0(N110), .A1(n57), .B0(n70), .B1(n169), .C0(n8), .C1(n151), 
        .Y(n121) );
  AOI31X2M U96 ( .A0(n107), .A1(n108), .A2(n109), .B0(n147), .Y(ALU_Comb[1])
         );
  AOI211X2M U97 ( .A0(n8), .A1(n56), .B0(n110), .C0(n111), .Y(n109) );
  AOI222X1M U98 ( .A0(n9), .A1(n151), .B0(n27), .B1(n74), .C0(n70), .C1(n143), 
        .Y(n108) );
  AOI222X1M U99 ( .A0(N93), .A1(n58), .B0(N111), .B1(n57), .C0(N102), .C1(n150), .Y(n107) );
  AOI31X2M U100 ( .A0(n60), .A1(n61), .A2(n62), .B0(n147), .Y(ALU_Comb[7]) );
  AOI22X1M U101 ( .A0(n31), .A1(n56), .B0(n70), .B1(n163), .Y(n60) );
  AOI221XLM U102 ( .A0(N108), .A1(n150), .B0(N99), .B1(n58), .C0(n63), .Y(n62)
         );
  AOI222X1M U103 ( .A0(n7), .A1(n148), .B0(N135), .B1(n65), .C0(n66), .C1(n157), .Y(n61) );
  INVX2M U104 ( .A(n44), .Y(n146) );
  OAI21X2M U105 ( .A0(n76), .A1(n158), .B0(n77), .Y(n75) );
  AOI22X1M U106 ( .A0(N134), .A1(n65), .B0(n78), .B1(n158), .Y(n77) );
  AOI221XLM U107 ( .A0(n149), .A1(n164), .B0(n31), .B1(n69), .C0(n151), .Y(n76) );
  INVX2M U108 ( .A(n6), .Y(n158) );
  AOI21X2M U109 ( .A0(n54), .A1(n55), .B0(n147), .Y(ALU_Comb[8]) );
  AOI21X2M U110 ( .A0(N100), .A1(n58), .B0(n59), .Y(n54) );
  AOI22X1M U111 ( .A0(n32), .A1(n56), .B0(N118), .B1(n57), .Y(n55) );
  OR2X2M U112 ( .A(n4), .B(ALU_FUN[0]), .Y(n3) );
  INVX2M U113 ( .A(n68), .Y(n148) );
  AOI221XLM U114 ( .A0(n69), .A1(n32), .B0(n163), .B1(n149), .C0(n151), .Y(n68) );
  OAI2BB1X2M U115 ( .A0N(N128), .A1N(n65), .B0(n131), .Y(n123) );
  AOI31X2M U116 ( .A0(N168), .A1(n4), .A2(n132), .B0(n117), .Y(n131) );
  AND4X2M U117 ( .A(N170), .B(n155), .C(n4), .D(n153), .Y(n117) );
  OAI2BB1X2M U118 ( .A0N(N129), .A1N(n65), .B0(n115), .Y(n110) );
  AOI31X2M U119 ( .A0(N169), .A1(n4), .A2(n116), .B0(n117), .Y(n115) );
  NOR3X2M U120 ( .A(n153), .B(ALU_FUN[2]), .C(n156), .Y(n116) );
  INVX2M U121 ( .A(n32), .Y(n163) );
  INVX2M U122 ( .A(n31), .Y(n164) );
  INVX2M U123 ( .A(n8), .Y(n169) );
  INVX2M U124 ( .A(n27), .Y(n168) );
  INVX2M U125 ( .A(n28), .Y(n167) );
  INVX2M U126 ( .A(n30), .Y(n165) );
  INVX2M U127 ( .A(n29), .Y(n166) );
  INVX2M U128 ( .A(n9), .Y(n143) );
  INVX2M U129 ( .A(n7), .Y(n157) );
  OAI2B2X1M U130 ( .A1N(B[0]), .A0(n125), .B0(B[0]), .B1(n126), .Y(n124) );
  AOI221XLM U131 ( .A0(n149), .A1(n169), .B0(n8), .B1(n69), .C0(n151), .Y(n125) );
  AOI221XLM U132 ( .A0(n8), .A1(n149), .B0(n114), .B1(n169), .C0(n70), .Y(n126) );
  AND3X2M U133 ( .A(n127), .B(ALU_FUN[1]), .C(n133), .Y(n65) );
  AOI21XLM U134 ( .A0(n134), .A1(n135), .B0(ALU_FUN[2]), .Y(n133) );
  NOR4X1M U135 ( .A(n7), .B(n6), .C(B[5]), .D(B[4]), .Y(n135) );
  NOR4X1M U136 ( .A(B[3]), .B(B[2]), .C(n5), .D(B[0]), .Y(n134) );
  OAI21X2M U137 ( .A0(n104), .A1(n162), .B0(n105), .Y(n103) );
  AOI22X1M U138 ( .A0(N130), .A1(n65), .B0(n106), .B1(n162), .Y(n105) );
  AOI221XLM U139 ( .A0(n149), .A1(n168), .B0(n27), .B1(n69), .C0(n151), .Y(
        n104) );
  INVX2M U140 ( .A(B[2]), .Y(n162) );
  OAI21X2M U141 ( .A0(n97), .A1(n161), .B0(n98), .Y(n96) );
  AOI22X1M U142 ( .A0(N131), .A1(n65), .B0(n99), .B1(n161), .Y(n98) );
  AOI221XLM U143 ( .A0(n149), .A1(n167), .B0(n28), .B1(n69), .C0(n151), .Y(n97) );
  INVX2M U144 ( .A(B[3]), .Y(n161) );
  OAI21X2M U145 ( .A0(n90), .A1(n160), .B0(n91), .Y(n89) );
  AOI22X1M U146 ( .A0(N132), .A1(n65), .B0(n92), .B1(n160), .Y(n91) );
  AOI221XLM U147 ( .A0(n149), .A1(n166), .B0(n29), .B1(n69), .C0(n151), .Y(n90) );
  INVX2M U148 ( .A(B[4]), .Y(n160) );
  OAI21X2M U149 ( .A0(n83), .A1(n159), .B0(n84), .Y(n82) );
  AOI22X1M U150 ( .A0(N133), .A1(n65), .B0(n85), .B1(n159), .Y(n84) );
  AOI221XLM U151 ( .A0(n149), .A1(n165), .B0(n30), .B1(n69), .C0(n151), .Y(n83) );
  INVX2M U152 ( .A(B[5]), .Y(n159) );
  BUFX2M U153 ( .A(A[0]), .Y(n8) );
  BUFX2M U154 ( .A(A[2]), .Y(n27) );
  BUFX2M U155 ( .A(A[3]), .Y(n28) );
  BUFX2M U156 ( .A(A[5]), .Y(n30) );
  BUFX2M U157 ( .A(A[4]), .Y(n29) );
  BUFX2M U158 ( .A(B[7]), .Y(n7) );
  BUFX2M U159 ( .A(B[1]), .Y(n5) );
  BUFX2M U160 ( .A(ALU_FUN[3]), .Y(n4) );
  INVX2M U161 ( .A(B[0]), .Y(n144) );
  NOR2X1M U162 ( .A(n163), .B(n7), .Y(n139) );
  NAND2BX1M U163 ( .AN(B[4]), .B(n29), .Y(n48) );
  NAND2BX1M U164 ( .AN(n29), .B(B[4]), .Y(n37) );
  CLKNAND2X2M U165 ( .A(n48), .B(n37), .Y(n50) );
  NOR2X1M U166 ( .A(n161), .B(n28), .Y(n45) );
  NOR2X1M U167 ( .A(n162), .B(n27), .Y(n36) );
  NOR2X1M U168 ( .A(n144), .B(n8), .Y(n33) );
  CLKNAND2X2M U169 ( .A(n27), .B(n162), .Y(n47) );
  NAND2BX1M U170 ( .AN(n36), .B(n47), .Y(n42) );
  AOI21X1M U171 ( .A0(n33), .A1(n143), .B0(n5), .Y(n34) );
  AOI211X1M U172 ( .A0(n9), .A1(n145), .B0(n42), .C0(n34), .Y(n35) );
  CLKNAND2X2M U173 ( .A(n28), .B(n161), .Y(n46) );
  OAI31X1M U174 ( .A0(n45), .A1(n36), .A2(n35), .B0(n46), .Y(n38) );
  NAND2BX1M U175 ( .AN(n30), .B(B[5]), .Y(n137) );
  OAI211X1M U176 ( .A0(n50), .A1(n38), .B0(n37), .C0(n137), .Y(n39) );
  NAND2BX1M U177 ( .AN(B[5]), .B(n30), .Y(n49) );
  XNOR2X1M U178 ( .A(n31), .B(n6), .Y(n136) );
  AOI32X1M U179 ( .A0(n39), .A1(n49), .A2(n136), .B0(n6), .B1(n164), .Y(n40)
         );
  CLKNAND2X2M U180 ( .A(n7), .B(n163), .Y(n140) );
  OAI21X1M U181 ( .A0(n139), .A1(n40), .B0(n140), .Y(N170) );
  CLKNAND2X2M U182 ( .A(n8), .B(n144), .Y(n43) );
  OA21X1M U183 ( .A0(n43), .A1(n143), .B0(n5), .Y(n41) );
  AOI211X1M U184 ( .A0(n43), .A1(n143), .B0(n42), .C0(n41), .Y(n44) );
  AOI31X1M U185 ( .A0(n146), .A1(n47), .A2(n46), .B0(n45), .Y(n51) );
  OAI2B11X1M U186 ( .A1N(n51), .A0(n50), .B0(n49), .C0(n48), .Y(n138) );
  AOI32X1M U187 ( .A0(n138), .A1(n137), .A2(n136), .B0(n31), .B1(n158), .Y(
        n141) );
  AOI2B1X1M U188 ( .A1N(n141), .A0(n140), .B0(n139), .Y(n142) );
  CLKINVX1M U189 ( .A(n142), .Y(N169) );
  NOR2X1M U190 ( .A(N170), .B(N169), .Y(N168) );
  ALU_OPER_WIDTH8_OUT_WIDTH16_DW_div_uns_0 div_39 ( .a({n32, n31, n30, n29, 
        n28, n27, n9, n8}), .b({n7, n6, B[5:2], n5, B[0]}), .quotient({N135, 
        N134, N133, N132, N131, N130, N129, N128}) );
  ALU_OPER_WIDTH8_OUT_WIDTH16_DW01_sub_0 sub_37 ( .A({1'b0, n32, n31, n30, n29, 
        n28, n27, n9, n8}), .B({1'b0, n7, n6, B[5:2], n5, B[0]}), .CI(1'b0), 
        .DIFF({N109, N108, N107, N106, N105, N104, N103, N102, N101}) );
  ALU_OPER_WIDTH8_OUT_WIDTH16_DW01_add_0 add_36 ( .A({1'b0, n32, n31, n30, n29, 
        n28, n27, n9, n8}), .B({1'b0, n7, n6, B[5:2], n5, B[0]}), .CI(1'b0), 
        .SUM({N100, N99, N98, N97, N96, N95, N94, N93, N92}) );
  ALU_OPER_WIDTH8_OUT_WIDTH16_DW02_mult_0 mult_38 ( .A({n32, n31, n30, n29, 
        n28, n27, n9, n8}), .B({n7, n6, B[5:2], n5, B[0]}), .TC(1'b0), 
        .PRODUCT({N125, N124, N123, N122, N121, N120, N119, N118, N117, N116, 
        N115, N114, N113, N112, N111, N110}) );
endmodule


module CLK_GATE ( CLK, GATE_EN, GATED_CLK );
  input CLK, GATE_EN;
  output GATED_CLK;


  TLATNCAX12M U0_TLATNCAX12M ( .E(GATE_EN), .CK(CLK), .ECK(GATED_CLK) );
endmodule


module SYS_CTRL_DATA_WIDTH8_ADDR_WIDTH4_ALU_OUT_WIDTH16_test_1 ( CLK, RST, 
        ALU_OUT, ALU_OUT_Valid, ALU_FUN, ALU_Enable, CLK_EN, Rd_DATA, 
        Rd_DATA_Valid, WR_DATA, WR_EN, RD_EN, addr, RX_P_DATA, RX_D_VLD, 
        TX_P_DATA, TX_D_VLD, FIFO_FULL, clk_div_en, test_si2, test_si1, 
        test_so2, test_so1, test_se );
  input [15:0] ALU_OUT;
  output [3:0] ALU_FUN;
  input [7:0] Rd_DATA;
  output [7:0] WR_DATA;
  output [3:0] addr;
  input [7:0] RX_P_DATA;
  output [7:0] TX_P_DATA;
  input CLK, RST, ALU_OUT_Valid, Rd_DATA_Valid, RX_D_VLD, FIFO_FULL, test_si2,
         test_si1, test_se;
  output ALU_Enable, CLK_EN, WR_EN, RD_EN, TX_D_VLD, clk_div_en, test_so2,
         test_so1;
  wire   is_alu_op, n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71,
         n72, n73, n74, n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85,
         n86, n87, n88, n89, n90, n91, n102, n104, n105, n106, n107, n108,
         n109, n110, n111, n112, n113, n114, n115, n116, n117, n118, n119,
         n120, n121, n122, n123, n124, n125, n126, n127, n128, n129, n130,
         n131, n132, n133, n134, n135, n136, n137, n138, n139, n140, n141,
         n142, n143, n144, n145, n146, n147, n148, n149, n150, n151, n152,
         n153, n154, n155, n156, n157, n158, n159, n160, n161, n162, n163,
         n164, n165, n166, n167, n168, n169, n170, n171, n172, n173, n174,
         n175, n176, n177, n178, n179, n180, n181, n182, n183, n184, n185,
         n186, n187, n188, n189, n190, n191, n192, n193, n194, n195, n196,
         n197, n198, n199, n200, n201, n202, n203, n204, n205, n206, n207,
         n208, n209, n210, n211, n212, n213, n214, n215, n216, n217, n218, n48,
         n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n92, n93, n94, n95,
         n96, n97, n98, n99, n100, n101, n103, n219, n220, n221, n222, n223,
         n224, n225, n226, n227, n228, n229, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243, n244, n245, n246,
         n247, n248, n249, n250, n251, n252, n253, n254, n255, n256, n257,
         n258, n259, n260, n261, n265, n266;
  wire   [3:0] current_state;
  wire   [15:0] alu_result_reg;
  assign test_so1 = alu_result_reg[14];

  SDFFRQX2M \alu_result_reg_reg[15]  ( .D(n209), .SI(test_si2), .SE(n266), 
        .CK(CLK), .RN(n56), .Q(alu_result_reg[15]) );
  SDFFRQX2M \alu_result_reg_reg[14]  ( .D(n208), .SI(alu_result_reg[13]), .SE(
        n266), .CK(CLK), .RN(n56), .Q(alu_result_reg[14]) );
  SDFFRQX2M \alu_result_reg_reg[13]  ( .D(n207), .SI(alu_result_reg[12]), .SE(
        n266), .CK(CLK), .RN(n56), .Q(alu_result_reg[13]) );
  SDFFRQX2M \alu_result_reg_reg[12]  ( .D(n206), .SI(alu_result_reg[11]), .SE(
        n266), .CK(CLK), .RN(n56), .Q(alu_result_reg[12]) );
  SDFFRQX2M \alu_result_reg_reg[11]  ( .D(n205), .SI(alu_result_reg[10]), .SE(
        n266), .CK(CLK), .RN(n56), .Q(alu_result_reg[11]) );
  SDFFRQX2M \alu_result_reg_reg[10]  ( .D(n204), .SI(alu_result_reg[9]), .SE(
        n266), .CK(CLK), .RN(n56), .Q(alu_result_reg[10]) );
  SDFFRQX2M \alu_result_reg_reg[9]  ( .D(n203), .SI(alu_result_reg[8]), .SE(
        n266), .CK(CLK), .RN(n56), .Q(alu_result_reg[9]) );
  SDFFRQX2M \alu_result_reg_reg[8]  ( .D(n202), .SI(n250), .SE(n266), .CK(CLK), 
        .RN(n56), .Q(alu_result_reg[8]) );
  SDFFSX1M \alu_function_reg_reg[2]  ( .D(n176), .SI(n260), .SE(n266), .CK(CLK), .SN(n56), .Q(n259), .QN(n89) );
  SDFFSX1M \alu_function_reg_reg[1]  ( .D(n175), .SI(n261), .SE(test_se), .CK(
        CLK), .SN(n56), .Q(n260), .QN(n90) );
  SDFFSX1M \alu_function_reg_reg[0]  ( .D(n174), .SI(test_si1), .SE(test_se), 
        .CK(CLK), .SN(n56), .Q(n261), .QN(n91) );
  SDFFRX1M \oper_B_reg_reg[7]  ( .D(n193), .SI(n235), .SE(test_se), .CK(CLK), 
        .RN(n55), .Q(n234), .QN(n72) );
  SDFFRX1M \oper_B_reg_reg[6]  ( .D(n192), .SI(n236), .SE(test_se), .CK(CLK), 
        .RN(n55), .Q(n235), .QN(n73) );
  SDFFRX1M \oper_B_reg_reg[5]  ( .D(n191), .SI(n237), .SE(test_se), .CK(CLK), 
        .RN(n55), .Q(n236), .QN(n74) );
  SDFFRX1M \oper_B_reg_reg[4]  ( .D(n190), .SI(n238), .SE(test_se), .CK(CLK), 
        .RN(n55), .Q(n237), .QN(n75) );
  SDFFRX1M \oper_B_reg_reg[3]  ( .D(n189), .SI(n239), .SE(test_se), .CK(CLK), 
        .RN(n54), .Q(n238), .QN(n76) );
  SDFFRX1M \oper_B_reg_reg[2]  ( .D(n188), .SI(n240), .SE(test_se), .CK(CLK), 
        .RN(n54), .Q(n239), .QN(n77) );
  SDFFRX1M \oper_B_reg_reg[1]  ( .D(n187), .SI(n241), .SE(test_se), .CK(CLK), 
        .RN(n54), .Q(n240), .QN(n78) );
  SDFFRX1M \oper_B_reg_reg[0]  ( .D(n186), .SI(n242), .SE(test_se), .CK(CLK), 
        .RN(n54), .Q(n241), .QN(n79) );
  SDFFRX1M \oper_A_reg_reg[7]  ( .D(n185), .SI(n243), .SE(test_se), .CK(CLK), 
        .RN(n54), .Q(n242), .QN(n80) );
  SDFFRX1M \oper_A_reg_reg[6]  ( .D(n184), .SI(n244), .SE(test_se), .CK(CLK), 
        .RN(n54), .Q(n243), .QN(n81) );
  SDFFRX1M \oper_A_reg_reg[5]  ( .D(n183), .SI(n245), .SE(test_se), .CK(CLK), 
        .RN(n54), .Q(n244), .QN(n82) );
  SDFFRX1M \oper_A_reg_reg[4]  ( .D(n182), .SI(n246), .SE(test_se), .CK(CLK), 
        .RN(n54), .Q(n245), .QN(n83) );
  SDFFRX1M \oper_A_reg_reg[3]  ( .D(n181), .SI(n247), .SE(test_se), .CK(CLK), 
        .RN(n54), .Q(n246), .QN(n84) );
  SDFFRX1M \oper_A_reg_reg[2]  ( .D(n180), .SI(n248), .SE(test_se), .CK(CLK), 
        .RN(n54), .Q(n247), .QN(n85) );
  SDFFRX1M \oper_A_reg_reg[1]  ( .D(n179), .SI(n249), .SE(test_se), .CK(CLK), 
        .RN(n54), .Q(n248), .QN(n86) );
  SDFFRX1M \oper_A_reg_reg[0]  ( .D(n178), .SI(is_alu_op), .SE(test_se), .CK(
        CLK), .RN(n54), .Q(n249), .QN(n87) );
  SDFFRX1M \alu_result_reg_reg[7]  ( .D(n201), .SI(n251), .SE(test_se), .CK(
        CLK), .RN(n55), .Q(n250), .QN(n64) );
  SDFFRX1M \alu_result_reg_reg[6]  ( .D(n200), .SI(n252), .SE(test_se), .CK(
        CLK), .RN(n55), .Q(n251), .QN(n65) );
  SDFFRX1M \alu_result_reg_reg[5]  ( .D(n199), .SI(n253), .SE(test_se), .CK(
        CLK), .RN(n55), .Q(n252), .QN(n66) );
  SDFFRX1M \alu_result_reg_reg[4]  ( .D(n198), .SI(n254), .SE(test_se), .CK(
        CLK), .RN(n55), .Q(n253), .QN(n67) );
  SDFFRX1M \alu_result_reg_reg[3]  ( .D(n197), .SI(n255), .SE(test_se), .CK(
        CLK), .RN(n55), .Q(n254), .QN(n68) );
  SDFFRX1M \alu_result_reg_reg[2]  ( .D(n196), .SI(n256), .SE(test_se), .CK(
        CLK), .RN(n55), .Q(n255), .QN(n69) );
  SDFFRX1M \alu_result_reg_reg[1]  ( .D(n195), .SI(n257), .SE(test_se), .CK(
        CLK), .RN(n55), .Q(n256), .QN(n70) );
  SDFFRX1M \alu_result_reg_reg[0]  ( .D(n194), .SI(n258), .SE(test_se), .CK(
        CLK), .RN(n55), .Q(n257), .QN(n71) );
  SDFFRX1M \rf_addr_reg_reg[3]  ( .D(n213), .SI(n231), .SE(test_se), .CK(CLK), 
        .RN(n56), .Q(test_so2), .QN(n60) );
  SDFFRX1M \rf_addr_reg_reg[2]  ( .D(n212), .SI(n232), .SE(test_se), .CK(CLK), 
        .RN(n56), .Q(n231), .QN(n61) );
  SDFFRX1M \rf_addr_reg_reg[0]  ( .D(n210), .SI(n234), .SE(test_se), .CK(CLK), 
        .RN(n56), .Q(n233), .QN(n63) );
  SDFFRX1M \rf_addr_reg_reg[1]  ( .D(n211), .SI(n233), .SE(test_se), .CK(CLK), 
        .RN(n56), .Q(n232), .QN(n62) );
  SDFFRQX2M is_alu_op_reg ( .D(n218), .SI(n97), .SE(n266), .CK(CLK), .RN(n57), 
        .Q(is_alu_op) );
  SDFFRQX2M \current_state_reg[2]  ( .D(n216), .SI(n103), .SE(n266), .CK(CLK), 
        .RN(n57), .Q(current_state[2]) );
  SDFFRQX2M \current_state_reg[0]  ( .D(n214), .SI(alu_result_reg[15]), .SE(
        n266), .CK(CLK), .RN(n56), .Q(current_state[0]) );
  SDFFRQX2M \current_state_reg[1]  ( .D(n215), .SI(n219), .SE(n266), .CK(CLK), 
        .RN(n56), .Q(current_state[1]) );
  SDFFRQX2M \current_state_reg[3]  ( .D(n217), .SI(n101), .SE(n266), .CK(CLK), 
        .RN(n57), .Q(current_state[3]) );
  SDFFSX1M \alu_function_reg_reg[3]  ( .D(n177), .SI(n259), .SE(test_se), .CK(
        CLK), .SN(RST), .Q(n258), .QN(n88) );
  OAI221X1M U50 ( .A0(n90), .A1(n132), .B0(n172), .B1(n227), .C0(n173), .Y(
        ALU_FUN[1]) );
  OAI221X1M U51 ( .A0(n89), .A1(n132), .B0(n172), .B1(n226), .C0(n173), .Y(
        ALU_FUN[2]) );
  OAI221X1M U52 ( .A0(n91), .A1(n132), .B0(n172), .B1(n228), .C0(n173), .Y(
        ALU_FUN[0]) );
  OAI221X1M U53 ( .A0(n63), .A1(n156), .B0(n228), .B1(n155), .C0(n133), .Y(
        addr[0]) );
  OAI22X4M U54 ( .A0(n227), .A1(n155), .B0(n62), .B1(n156), .Y(addr[1]) );
  NAND2X2M U55 ( .A(n220), .B(n104), .Y(n48) );
  OAI22X2M U57 ( .A0(n226), .A1(n155), .B0(n61), .B1(n156), .Y(addr[2]) );
  INVX2M U58 ( .A(current_state[0]), .Y(n219) );
  OAI211X2M U59 ( .A0(Rd_DATA_Valid), .A1(n134), .B0(n138), .C0(n139), .Y(n108) );
  INVX2M U60 ( .A(n111), .Y(n98) );
  NAND2X2M U61 ( .A(n58), .B(n167), .Y(TX_D_VLD) );
  NAND2X2M U62 ( .A(n98), .B(n156), .Y(WR_EN) );
  INVX2M U63 ( .A(n167), .Y(n59) );
  INVX2M U64 ( .A(n50), .Y(n99) );
  INVX2M U65 ( .A(n51), .Y(n100) );
  INVX2M U66 ( .A(n105), .Y(n94) );
  INVX2M U67 ( .A(n126), .Y(n95) );
  AOI2B1X1M U68 ( .A1N(CLK_EN), .A0(n132), .B0(n111), .Y(n173) );
  NAND2X2M U69 ( .A(n172), .B(n132), .Y(ALU_Enable) );
  NAND2X2M U70 ( .A(n172), .B(n98), .Y(CLK_EN) );
  BUFX2M U71 ( .A(n53), .Y(n56) );
  BUFX2M U72 ( .A(n52), .Y(n54) );
  BUFX2M U73 ( .A(n52), .Y(n55) );
  BUFX2M U74 ( .A(n53), .Y(n57) );
  OR2X2M U75 ( .A(n141), .B(n229), .Y(n156) );
  NOR2BX2M U76 ( .AN(n170), .B(n219), .Y(n144) );
  NAND2X2M U77 ( .A(n170), .B(n219), .Y(n112) );
  NAND2X2M U78 ( .A(n129), .B(n133), .Y(n111) );
  NAND2X2M U79 ( .A(n169), .B(n144), .Y(n167) );
  INVX2M U80 ( .A(n155), .Y(RD_EN) );
  INVX2M U81 ( .A(n168), .Y(n58) );
  NOR4X1M U82 ( .A(n97), .B(n101), .C(n219), .D(n103), .Y(n130) );
  NOR3X2M U83 ( .A(n131), .B(n137), .C(n110), .Y(n124) );
  NAND3X2M U84 ( .A(n219), .B(n97), .C(n143), .Y(n132) );
  OAI22X1M U85 ( .A0(n92), .A1(n219), .B0(n107), .B1(n108), .Y(n214) );
  NOR3X2M U86 ( .A(n109), .B(n110), .C(n111), .Y(n107) );
  OAI211X2M U87 ( .A0(n112), .A1(n93), .B0(n113), .C0(n106), .Y(n109) );
  NAND4X2M U88 ( .A(n95), .B(n114), .C(n228), .D(n224), .Y(n113) );
  OAI22X1M U89 ( .A0(n92), .A1(n103), .B0(n115), .B1(n108), .Y(n215) );
  AOI211X2M U90 ( .A0(n95), .A1(n116), .B0(n117), .C0(n118), .Y(n115) );
  NAND2X2M U91 ( .A(n119), .B(n106), .Y(n117) );
  OAI21X2M U92 ( .A0(n120), .A1(n121), .B0(n122), .Y(n116) );
  OAI22X1M U93 ( .A0(n92), .A1(n101), .B0(n123), .B1(n108), .Y(n216) );
  NOR3BX2M U94 ( .AN(n124), .B(n125), .C(n111), .Y(n123) );
  NOR3X2M U95 ( .A(n126), .B(n127), .C(n120), .Y(n125) );
  OAI22X1M U96 ( .A0(n92), .A1(n97), .B0(n128), .B1(n108), .Y(n217) );
  NOR4BX1M U97 ( .AN(n129), .B(n130), .C(n131), .D(n118), .Y(n128) );
  NAND4X2M U98 ( .A(n219), .B(n103), .C(n101), .D(n97), .Y(n126) );
  INVX2M U99 ( .A(n108), .Y(n92) );
  NAND3X2M U100 ( .A(n119), .B(n142), .C(n132), .Y(n110) );
  INVX2M U101 ( .A(n152), .Y(n96) );
  AND2X2M U102 ( .A(n143), .B(n97), .Y(n131) );
  NOR2X2M U103 ( .A(n106), .B(n229), .Y(n105) );
  BUFX2M U104 ( .A(n153), .Y(n51) );
  NOR2X2M U105 ( .A(n119), .B(n229), .Y(n153) );
  BUFX2M U106 ( .A(n102), .Y(n50) );
  NOR2X2M U107 ( .A(n229), .B(n142), .Y(n102) );
  NOR2BX2M U108 ( .AN(n104), .B(n130), .Y(n172) );
  BUFX2M U109 ( .A(RST), .Y(n52) );
  BUFX2M U110 ( .A(RST), .Y(n53) );
  NOR3BX2M U111 ( .AN(n154), .B(current_state[0]), .C(current_state[2]), .Y(
        n137) );
  NAND2X2M U112 ( .A(n137), .B(RX_D_VLD), .Y(n155) );
  NOR2X2M U113 ( .A(n103), .B(current_state[3]), .Y(n154) );
  INVX2M U114 ( .A(current_state[1]), .Y(n103) );
  NOR2X2M U115 ( .A(n101), .B(current_state[1]), .Y(n143) );
  NOR3X2M U116 ( .A(n103), .B(current_state[2]), .C(n97), .Y(n170) );
  NAND3X2M U117 ( .A(current_state[3]), .B(current_state[0]), .C(n143), .Y(
        n133) );
  INVX2M U118 ( .A(current_state[3]), .Y(n97) );
  NAND3X2M U119 ( .A(current_state[3]), .B(n219), .C(n143), .Y(n129) );
  NOR2X2M U120 ( .A(n112), .B(n171), .Y(n168) );
  AOI2B1X1M U121 ( .A1N(FIFO_FULL), .A0(Rd_DATA_Valid), .B0(n169), .Y(n171) );
  INVX2M U122 ( .A(current_state[2]), .Y(n101) );
  INVX2M U123 ( .A(RX_D_VLD), .Y(n229) );
  OAI22X1M U124 ( .A0(n225), .A1(n155), .B0(n60), .B1(n156), .Y(addr[3]) );
  NAND3X2M U125 ( .A(n154), .B(n101), .C(current_state[0]), .Y(n141) );
  NOR4BX1M U126 ( .AN(n148), .B(RX_P_DATA[2]), .C(RX_P_DATA[6]), .D(n227), .Y(
        n114) );
  NOR2X2M U127 ( .A(n223), .B(n120), .Y(n148) );
  OAI2B1X2M U128 ( .A1N(n112), .A0(n144), .B0(FIFO_FULL), .Y(n138) );
  AOI22X1M U129 ( .A0(n140), .A1(n229), .B0(n130), .B1(n220), .Y(n139) );
  NAND4X2M U130 ( .A(n124), .B(n141), .C(n106), .D(n126), .Y(n140) );
  NAND4X2M U131 ( .A(current_state[0]), .B(n103), .C(n101), .D(n97), .Y(n106)
         );
  NOR2X2M U132 ( .A(n58), .B(is_alu_op), .Y(n159) );
  NAND2X2M U133 ( .A(n168), .B(is_alu_op), .Y(n157) );
  NAND4X2M U134 ( .A(current_state[3]), .B(n219), .C(n103), .D(n101), .Y(n104)
         );
  OAI222X1M U135 ( .A0(n79), .A1(n133), .B0(n228), .B1(n156), .C0(n87), .C1(
        n129), .Y(WR_DATA[0]) );
  OAI222X1M U136 ( .A0(n78), .A1(n133), .B0(n227), .B1(n156), .C0(n86), .C1(
        n129), .Y(WR_DATA[1]) );
  OAI222X1M U137 ( .A0(n77), .A1(n133), .B0(n226), .B1(n156), .C0(n85), .C1(
        n129), .Y(WR_DATA[2]) );
  OAI222X1M U138 ( .A0(n76), .A1(n133), .B0(n225), .B1(n156), .C0(n84), .C1(
        n129), .Y(WR_DATA[3]) );
  OAI222X1M U139 ( .A0(n75), .A1(n133), .B0(n224), .B1(n156), .C0(n83), .C1(
        n129), .Y(WR_DATA[4]) );
  OAI222X1M U140 ( .A0(n74), .A1(n133), .B0(n223), .B1(n156), .C0(n82), .C1(
        n129), .Y(WR_DATA[5]) );
  OAI222X1M U141 ( .A0(n73), .A1(n133), .B0(n222), .B1(n156), .C0(n81), .C1(
        n129), .Y(WR_DATA[6]) );
  OAI222X1M U142 ( .A0(n72), .A1(n133), .B0(n221), .B1(n156), .C0(n80), .C1(
        n129), .Y(WR_DATA[7]) );
  OAI22X1M U143 ( .A0(n228), .A1(n152), .B0(n96), .B1(n91), .Y(n174) );
  OAI22X1M U144 ( .A0(n227), .A1(n152), .B0(n96), .B1(n90), .Y(n175) );
  OAI22X1M U145 ( .A0(n226), .A1(n152), .B0(n96), .B1(n89), .Y(n176) );
  OAI22X1M U146 ( .A0(n225), .A1(n152), .B0(n96), .B1(n88), .Y(n177) );
  NAND3X2M U147 ( .A(RX_D_VLD), .B(n97), .C(n143), .Y(n152) );
  NOR2X2M U148 ( .A(n93), .B(FIFO_FULL), .Y(n169) );
  INVX2M U149 ( .A(RX_P_DATA[0]), .Y(n228) );
  NAND3X2M U150 ( .A(n154), .B(n219), .C(current_state[2]), .Y(n119) );
  NAND2X2M U151 ( .A(RX_P_DATA[7]), .B(RX_P_DATA[3]), .Y(n120) );
  NAND3X2M U152 ( .A(RX_P_DATA[0]), .B(RX_P_DATA[4]), .C(n114), .Y(n122) );
  NAND3X2M U153 ( .A(current_state[0]), .B(n154), .C(current_state[2]), .Y(
        n142) );
  INVX2M U154 ( .A(RX_P_DATA[1]), .Y(n227) );
  OAI21X2M U155 ( .A0(n71), .A1(n157), .B0(n166), .Y(TX_P_DATA[0]) );
  AOI22X1M U156 ( .A0(n59), .A1(alu_result_reg[8]), .B0(Rd_DATA[0]), .B1(n159), 
        .Y(n166) );
  OAI21X2M U157 ( .A0(n70), .A1(n157), .B0(n165), .Y(TX_P_DATA[1]) );
  AOI22X1M U158 ( .A0(n59), .A1(alu_result_reg[9]), .B0(Rd_DATA[1]), .B1(n159), 
        .Y(n165) );
  OAI21X2M U159 ( .A0(n69), .A1(n157), .B0(n164), .Y(TX_P_DATA[2]) );
  AOI22X1M U160 ( .A0(n59), .A1(alu_result_reg[10]), .B0(Rd_DATA[2]), .B1(n159), .Y(n164) );
  OAI21X2M U161 ( .A0(n68), .A1(n157), .B0(n163), .Y(TX_P_DATA[3]) );
  AOI22X1M U162 ( .A0(n59), .A1(alu_result_reg[11]), .B0(Rd_DATA[3]), .B1(n159), .Y(n163) );
  OAI21X2M U163 ( .A0(n67), .A1(n157), .B0(n162), .Y(TX_P_DATA[4]) );
  AOI22X1M U164 ( .A0(n59), .A1(alu_result_reg[12]), .B0(Rd_DATA[4]), .B1(n159), .Y(n162) );
  OAI21X2M U165 ( .A0(n66), .A1(n157), .B0(n161), .Y(TX_P_DATA[5]) );
  AOI22X1M U166 ( .A0(n59), .A1(alu_result_reg[13]), .B0(Rd_DATA[5]), .B1(n159), .Y(n161) );
  OAI21X2M U167 ( .A0(n65), .A1(n157), .B0(n160), .Y(TX_P_DATA[6]) );
  AOI22X1M U168 ( .A0(n59), .A1(alu_result_reg[14]), .B0(Rd_DATA[6]), .B1(n159), .Y(n160) );
  OAI21X2M U169 ( .A0(n64), .A1(n157), .B0(n158), .Y(TX_P_DATA[7]) );
  AOI22X1M U170 ( .A0(n59), .A1(alu_result_reg[15]), .B0(Rd_DATA[7]), .B1(n159), .Y(n158) );
  INVX2M U171 ( .A(RX_P_DATA[2]), .Y(n226) );
  NAND4X2M U172 ( .A(n132), .B(n133), .C(n134), .D(n135), .Y(n118) );
  AOI21X2M U173 ( .A0(is_alu_op), .A1(n136), .B0(n137), .Y(n135) );
  NAND2X2M U174 ( .A(n112), .B(n104), .Y(n136) );
  OAI2BB2X1M U175 ( .B0(n127), .B1(n145), .A0N(n145), .A1N(is_alu_op), .Y(n218) );
  NAND3X2M U176 ( .A(RX_D_VLD), .B(n146), .C(n95), .Y(n145) );
  OAI211X2M U177 ( .A0(n127), .A1(n120), .B0(n147), .C0(n122), .Y(n146) );
  NAND3X2M U178 ( .A(n228), .B(n224), .C(n114), .Y(n147) );
  INVX2M U179 ( .A(RX_P_DATA[5]), .Y(n223) );
  INVX2M U180 ( .A(is_alu_op), .Y(n93) );
  OAI22X1M U181 ( .A0(n228), .A1(n100), .B0(n51), .B1(n87), .Y(n178) );
  OAI22X1M U182 ( .A0(n227), .A1(n100), .B0(n51), .B1(n86), .Y(n179) );
  OAI22X1M U183 ( .A0(n226), .A1(n100), .B0(n51), .B1(n85), .Y(n180) );
  OAI22X1M U184 ( .A0(n225), .A1(n100), .B0(n51), .B1(n84), .Y(n181) );
  OAI22X1M U185 ( .A0(n224), .A1(n100), .B0(n51), .B1(n83), .Y(n182) );
  OAI22X1M U186 ( .A0(n223), .A1(n100), .B0(n51), .B1(n82), .Y(n183) );
  OAI22X1M U187 ( .A0(n222), .A1(n100), .B0(n51), .B1(n81), .Y(n184) );
  OAI22X1M U188 ( .A0(n221), .A1(n100), .B0(n51), .B1(n80), .Y(n185) );
  OAI22X1M U189 ( .A0(n99), .A1(n228), .B0(n50), .B1(n79), .Y(n186) );
  OAI22X1M U190 ( .A0(n99), .A1(n227), .B0(n50), .B1(n78), .Y(n187) );
  OAI22X1M U191 ( .A0(n99), .A1(n226), .B0(n50), .B1(n77), .Y(n188) );
  OAI22X1M U192 ( .A0(n99), .A1(n225), .B0(n50), .B1(n76), .Y(n189) );
  OAI22X1M U193 ( .A0(n99), .A1(n224), .B0(n50), .B1(n75), .Y(n190) );
  OAI22X1M U194 ( .A0(n99), .A1(n223), .B0(n50), .B1(n74), .Y(n191) );
  OAI22X1M U195 ( .A0(n99), .A1(n222), .B0(n50), .B1(n73), .Y(n192) );
  OAI22X1M U196 ( .A0(n99), .A1(n221), .B0(n50), .B1(n72), .Y(n193) );
  OAI22X1M U197 ( .A0(n94), .A1(n228), .B0(n105), .B1(n63), .Y(n210) );
  OAI22X1M U198 ( .A0(n227), .A1(n94), .B0(n105), .B1(n62), .Y(n211) );
  OAI22X1M U199 ( .A0(n226), .A1(n94), .B0(n105), .B1(n61), .Y(n212) );
  OAI22X1M U200 ( .A0(n225), .A1(n94), .B0(n105), .B1(n60), .Y(n213) );
  NAND4X2M U201 ( .A(current_state[3]), .B(current_state[2]), .C(
        current_state[1]), .D(n219), .Y(n134) );
  OA21X2M U202 ( .A0(n149), .A1(n150), .B0(n121), .Y(n127) );
  NAND3X2M U203 ( .A(n227), .B(n223), .C(RX_P_DATA[2]), .Y(n149) );
  NAND3X2M U204 ( .A(RX_P_DATA[6]), .B(RX_P_DATA[4]), .C(RX_P_DATA[0]), .Y(
        n150) );
  NAND4X2M U205 ( .A(RX_P_DATA[2]), .B(n228), .C(RX_P_DATA[6]), .D(n151), .Y(
        n121) );
  NOR3X2M U206 ( .A(RX_P_DATA[1]), .B(RX_P_DATA[5]), .C(RX_P_DATA[4]), .Y(n151) );
  OAI2BB2X1M U207 ( .B0(n48), .B1(n71), .A0N(ALU_OUT[0]), .A1N(n48), .Y(n194)
         );
  OAI2BB2X1M U208 ( .B0(n48), .B1(n70), .A0N(ALU_OUT[1]), .A1N(n48), .Y(n195)
         );
  OAI2BB2X1M U209 ( .B0(n48), .B1(n69), .A0N(ALU_OUT[2]), .A1N(n48), .Y(n196)
         );
  OAI2BB2X1M U210 ( .B0(n48), .B1(n68), .A0N(ALU_OUT[3]), .A1N(n48), .Y(n197)
         );
  OAI2BB2X1M U211 ( .B0(n48), .B1(n67), .A0N(ALU_OUT[4]), .A1N(n48), .Y(n198)
         );
  OAI2BB2X1M U212 ( .B0(n48), .B1(n66), .A0N(ALU_OUT[5]), .A1N(n48), .Y(n199)
         );
  OAI2BB2X1M U213 ( .B0(n48), .B1(n65), .A0N(ALU_OUT[6]), .A1N(n48), .Y(n200)
         );
  OAI2BB2X1M U214 ( .B0(n48), .B1(n64), .A0N(ALU_OUT[7]), .A1N(n48), .Y(n201)
         );
  INVX2M U215 ( .A(RX_P_DATA[4]), .Y(n224) );
  INVX2M U216 ( .A(RX_P_DATA[3]), .Y(n225) );
  INVX2M U217 ( .A(RX_P_DATA[6]), .Y(n222) );
  INVX2M U218 ( .A(RX_P_DATA[7]), .Y(n221) );
  AO2B2X2M U219 ( .B0(ALU_OUT[8]), .B1(n48), .A0(alu_result_reg[8]), .A1N(n48), 
        .Y(n202) );
  AO2B2X2M U220 ( .B0(ALU_OUT[9]), .B1(n48), .A0(alu_result_reg[9]), .A1N(n48), 
        .Y(n203) );
  AO2B2X2M U221 ( .B0(ALU_OUT[10]), .B1(n48), .A0(alu_result_reg[10]), .A1N(
        n48), .Y(n204) );
  AO2B2X2M U222 ( .B0(ALU_OUT[11]), .B1(n48), .A0(alu_result_reg[11]), .A1N(
        n48), .Y(n205) );
  AO2B2X2M U223 ( .B0(ALU_OUT[12]), .B1(n48), .A0(alu_result_reg[12]), .A1N(
        n48), .Y(n206) );
  AO2B2X2M U224 ( .B0(ALU_OUT[13]), .B1(n48), .A0(alu_result_reg[13]), .A1N(
        n48), .Y(n207) );
  AO2B2X2M U225 ( .B0(ALU_OUT[14]), .B1(n48), .A0(alu_result_reg[14]), .A1N(
        n48), .Y(n208) );
  AO2B2X2M U226 ( .B0(ALU_OUT[15]), .B1(n48), .A0(alu_result_reg[15]), .A1N(
        n48), .Y(n209) );
  OAI221X1M U227 ( .A0(n88), .A1(n132), .B0(n172), .B1(n225), .C0(n173), .Y(
        ALU_FUN[3]) );
  INVX2M U228 ( .A(ALU_OUT_Valid), .Y(n220) );
  INVXLM U229 ( .A(test_se), .Y(n265) );
  INVXLM U230 ( .A(n265), .Y(n266) );
  INVX2M U3 ( .A(1'b0), .Y(clk_div_en) );
endmodule


module SYS_TOP ( RST_N, UART_CLK, REF_CLK, UART_RX_IN, scan_clk, scan_rst, 
        test_mode, SE, SI, SO, UART_TX_O, parity_error, framing_error, 
        test_si4 );
  input [2:0] SI;
  output [2:0] SO;
  input RST_N, UART_CLK, REF_CLK, UART_RX_IN, scan_clk, scan_rst, test_mode,
         SE, test_si4;
  output UART_TX_O, parity_error, framing_error;
  wire   REF_SCAN_CLK, UART_SCAN_CLK, UART_TX_CLK, UART_TX_SCAN_CLK,
         UART_RX_CLK, UART_RX_SCAN_CLK, RST_N_SCAN_RST, SYNC_REF_RST,
         SYNC_REF_SCAN_RST, SYNC_UART_RST, SYNC_UART_SCAN_RST, RX_Valid,
         RX_Valid_SYNC, TX_D_VLD, Busy_PULSE, FIFO_FULL, TX_Valid_SYNC, busy,
         WR_EN, RD_EN, Rd_DATA_Valid, ALU_Gated_CLK, ALU_Enable, ALU_OUT_Valid,
         _1_net_, CLK_EN, n1, n2, n3, n4, n5, n6, n8, n11, n13, n14, n15, n16,
         n17, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33,
         n34, n35;
  wire   [7:0] RX_OUT;
  wire   [7:0] Rx_SYNC_OUT;
  wire   [7:0] TX_DATA_IN;
  wire   [7:0] TX_DATA_SYNC;
  wire   [7:0] DIV_Ratio;
  wire   [7:0] UART_Config;
  wire   [7:0] DIV_RATIO_RX;
  wire   [7:0] Rd_DATA;
  wire   [3:0] addr;
  wire   [7:0] WR_DATA;
  wire   [7:0] OP_A;
  wire   [7:0] OP_B;
  wire   [3:0] ALU_FUN;
  wire   [15:0] ALU_OUT;
  wire   SYNOPSYS_UNCONNECTED__0, SYNOPSYS_UNCONNECTED__1, 
        SYNOPSYS_UNCONNECTED__2, SYNOPSYS_UNCONNECTED__3;
  assign SO[1] = OP_A[5];

  INVX2M U3 ( .A(n6), .Y(n5) );
  INVX2M U4 ( .A(n4), .Y(n3) );
  OR2X2M U5 ( .A(CLK_EN), .B(n2), .Y(_1_net_) );
  INVX2M U6 ( .A(TX_Valid_SYNC), .Y(n1) );
  INVX2M U7 ( .A(SYNC_REF_SCAN_RST), .Y(n6) );
  INVX2M U8 ( .A(SYNC_UART_SCAN_RST), .Y(n4) );
  BUFX2M U9 ( .A(test_mode), .Y(n2) );
  DLY1X1M U15 ( .A(n23), .Y(n21) );
  INVXLM U16 ( .A(n35), .Y(n22) );
  INVXLM U17 ( .A(n22), .Y(n23) );
  INVXLM U18 ( .A(n22), .Y(n24) );
  DLY1X1M U19 ( .A(n27), .Y(n25) );
  INVXLM U20 ( .A(n33), .Y(n26) );
  INVXLM U21 ( .A(n26), .Y(n27) );
  INVXLM U22 ( .A(n26), .Y(n28) );
  INVXLM U23 ( .A(n26), .Y(n29) );
  INVXLM U24 ( .A(n34), .Y(n30) );
  INVXLM U25 ( .A(n30), .Y(n31) );
  INVXLM U26 ( .A(SE), .Y(n32) );
  INVXLM U27 ( .A(n32), .Y(n33) );
  INVXLM U28 ( .A(n32), .Y(n34) );
  INVXLM U29 ( .A(n32), .Y(n35) );
  mux2X1_1 U0_mux2X1 ( .IN_0(REF_CLK), .IN_1(scan_clk), .SEL(n2), .OUT(
        REF_SCAN_CLK) );
  mux2X1_4 U1_mux2X1 ( .IN_0(UART_CLK), .IN_1(scan_clk), .SEL(n2), .OUT(
        UART_SCAN_CLK) );
  mux2X1_3 U2_mux2X1 ( .IN_0(UART_TX_CLK), .IN_1(scan_clk), .SEL(n2), .OUT(
        UART_TX_SCAN_CLK) );
  mux2X1_2 U3_mux2X1 ( .IN_0(UART_RX_CLK), .IN_1(scan_clk), .SEL(n2), .OUT(
        UART_RX_SCAN_CLK) );
  mux2X1_0 U4_mux2X1 ( .IN_0(RST_N), .IN_1(scan_rst), .SEL(n2), .OUT(
        RST_N_SCAN_RST) );
  mux2X1_6 U6_mux2X1 ( .IN_0(SYNC_REF_RST), .IN_1(scan_rst), .SEL(n2), .OUT(
        SYNC_REF_SCAN_RST) );
  mux2X1_5 U7_mux2X1 ( .IN_0(SYNC_UART_RST), .IN_1(scan_rst), .SEL(n2), .OUT(
        SYNC_UART_SCAN_RST) );
  RST_SYNC_NUM_STAGES2_test_1 rst_sync_inst ( .CLK(REF_SCAN_CLK), .RST(
        RST_N_SCAN_RST), .SYNC_RST(SYNC_REF_RST), .test_si(SYNC_UART_RST), 
        .test_se(n31) );
  RST_SYNC_NUM_STAGES2_test_0 rst_sync2_inst ( .CLK(UART_SCAN_CLK), .RST(
        RST_N_SCAN_RST), .SYNC_RST(SYNC_UART_RST), .test_si(n11), .test_se(n33) );
  DATA_SYNC_BUS_WIDTH8_NUM_STAGES2_test_1 data_sync_inst ( .CLK(REF_SCAN_CLK), 
        .RST(n5), .bus_enable(RX_Valid), .unsyn_bus(RX_OUT), .sync_bus(
        Rx_SYNC_OUT), .enable_pulse(RX_Valid_SYNC), .test_si(n15), .test_so(
        n14), .test_se(n33) );
  ASYNC_FIFO_DATA_WIDTH8_ADDR_WIDTH3_FIFO_DEPTH8_test_1 async_fifo_inst ( 
        .W_CLK(REF_SCAN_CLK), .W_RST(n5), .R_CLK(UART_TX_SCAN_CLK), .R_RST(n3), 
        .w_inc(TX_D_VLD), .r_inc(Busy_PULSE), .WR_DATA(TX_DATA_IN), .RD_DATA(
        TX_DATA_SYNC), .w_full(FIFO_FULL), .r_empty(TX_Valid_SYNC), .test_si2(
        SI[1]), .test_si1(ALU_OUT_Valid), .test_so2(n17), .test_so1(SO[2]), 
        .test_se(SE) );
  PULSE_GEN_test_1 pulse_gen_inst ( .clk(UART_TX_SCAN_CLK), .rst_n(n3), 
        .ASYNC(busy), .pulse_sig(Busy_PULSE), .test_si(n14), .test_so(n13), 
        .test_se(n24) );
  CLK_divider_test_1 clk_div_inst ( .ref_clk(UART_SCAN_CLK), .clk_en(1'b1), 
        .rst(n3), .div_ratio(DIV_Ratio), .div_clk(UART_TX_CLK), .test_si(n16), 
        .test_so(n15), .test_se(n28) );
  CLKDIV_MUX mux_clk_div_inst ( .IN(UART_Config[7:2]), .OUT({
        SYNOPSYS_UNCONNECTED__0, SYNOPSYS_UNCONNECTED__1, 
        SYNOPSYS_UNCONNECTED__2, SYNOPSYS_UNCONNECTED__3, DIV_RATIO_RX[3:0]})
         );
  CLK_divider_test_0 clk_div2_inst ( .ref_clk(UART_SCAN_CLK), .clk_en(1'b1), 
        .rst(n3), .div_ratio({1'b0, 1'b0, 1'b0, 1'b0, DIV_RATIO_RX[3:0]}), 
        .div_clk(UART_RX_CLK), .test_si(n17), .test_so(n16), .test_se(n31) );
  UART_DATA_WIDTH8_test_1 uart_inst ( .TX_CLK(UART_TX_SCAN_CLK), .RX_CLK(
        UART_RX_SCAN_CLK), .RST(n3), .PAR_TYP(UART_Config[1]), .PAR_EN(
        UART_Config[0]), .Prescale(UART_Config[7:2]), .TX_IN_P(TX_DATA_SYNC), 
        .TX_IN_V(n1), .RX_IN_S(UART_RX_IN), .TX_OUT_S(UART_TX_O), .TX_OUT_V(
        busy), .RX_OUT_V(RX_Valid), .RX_OUT_P(RX_OUT), .parity_error(
        parity_error), .framing_error(framing_error), .test_si(n8), .test_se(
        n25) );
  RegFile_WIDTH8_DEPTH8_ADDR4_test_1 regfile_inst ( .clk(REF_SCAN_CLK), .rst(
        n5), .Address(addr), .WrData(WR_DATA), .WrEn(WR_EN), .RdEn(RD_EN), 
        .RdData(Rd_DATA), .RdData_valid(Rd_DATA_Valid), .REG0(OP_A), .REG1(
        OP_B), .REG2(UART_Config), .REG3(DIV_Ratio), .test_si2(SI[0]), 
        .test_si1(n13), .test_so1(n11), .test_se(SE) );
  ALU_OPER_WIDTH8_OUT_WIDTH16_test_1 alu_inst ( .A(OP_A), .B(OP_B), .ALU_FUN(
        ALU_FUN), .CLK(ALU_Gated_CLK), .RST(n5), .Enable(ALU_Enable), 
        .ALU_OUT(ALU_OUT), .OUT_VALID(ALU_OUT_Valid), .test_si(SI[2]), 
        .test_se(n29) );
  CLK_GATE clk_gating_inst ( .CLK(REF_SCAN_CLK), .GATE_EN(_1_net_), 
        .GATED_CLK(ALU_Gated_CLK) );
  SYS_CTRL_DATA_WIDTH8_ADDR_WIDTH4_ALU_OUT_WIDTH16_test_1 sys_ctrl_inst ( 
        .CLK(REF_SCAN_CLK), .RST(n5), .ALU_OUT(ALU_OUT), .ALU_OUT_Valid(
        ALU_OUT_Valid), .ALU_FUN(ALU_FUN), .ALU_Enable(ALU_Enable), .CLK_EN(
        CLK_EN), .Rd_DATA(Rd_DATA), .Rd_DATA_Valid(Rd_DATA_Valid), .WR_DATA(
        WR_DATA), .WR_EN(WR_EN), .RD_EN(RD_EN), .addr(addr), .RX_P_DATA(
        Rx_SYNC_OUT), .RX_D_VLD(RX_Valid_SYNC), .TX_P_DATA(TX_DATA_IN), 
        .TX_D_VLD(TX_D_VLD), .FIFO_FULL(FIFO_FULL), .test_si2(test_si4), 
        .test_si1(SYNC_REF_RST), .test_so2(n8), .test_so1(SO[0]), .test_se(n21) );
endmodule

